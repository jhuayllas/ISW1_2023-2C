

----QUIT----(13 August 2023 19:14:09) CuisUniversity-5981.image priorSource: 5713367!

----STARTUP---- (13 August 2023 19:14:10) as /Users/hernan/Documents/Cuis/5.0-64Bits/Cuis-University-Installer/CuisUniversity-5981.image!


----QUIT----(13 August 2023 19:14:10) CuisUniversity-5981.image priorSource: 10197065!

----STARTUP---- (26 October 2023 20:10:25) as /home/camila/Desktop/CUIS MARS ROVER 2/linux64/CuisUniversity-5981.image!


----End fileIn of /home/camila/Desktop/CUIS MARS ROVER 2/linux64/MarsRover-WithHeading.st----!

----SNAPSHOT----(26 October 2023 20:12:22) CuisUniversity-5981.image priorSource: 10197292!

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'camila 10/26/2023 20:21:25'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'camila 10/26/2023 20:21:25'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'camila 10/26/2023 20:21:25'!
PASSED!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'camila 10/26/2023 20:21:25'!
PASSED!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'camila 10/26/2023 20:21:25'!
PASSED!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'camila 10/26/2023 20:21:25'!
PASSED!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'camila 10/26/2023 20:21:25'!
PASSED!

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'camila 10/26/2023 20:21:25'!
PASSED!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'camila 10/26/2023 20:21:25'!
PASSED!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'camila 10/26/2023 20:21:25'!
PASSED!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'camila 10/26/2023 20:21:25'!
PASSED!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'camila 10/26/2023 20:21:25'!
PASSED!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'camila 10/26/2023 20:21:25'!
PASSED!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'camila 10/26/2023 20:21:25'!
PASSED!

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'camila 10/26/2023 20:21:25'!
PASSED!

TestCase subclass: #XXXTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #XXXTest category: 'MarsRover-WithHeading' stamp: 'camila 10/26/2023 20:35:50'!
TestCase subclass: #XXXTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!XXXTest methodsFor: 'no messages' stamp: 'camila 10/26/2023 20:35:59'!
test01
	! !

TestCase subclass: #LoggerTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #LoggerTest category: 'MarsRover-WithHeading' stamp: 'camila 10/26/2023 20:36:55'!
TestCase subclass: #LoggerTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classRemoval: #XXXTest stamp: 'camila 10/26/2023 20:36:58'!
TestCase subclass: #XXXTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!LoggerTest methodsFor: 'no messages' stamp: 'camila 10/26/2023 20:38:16'!
test01
	! !
!LoggerTest methodsFor: 'testing' stamp: 'camila 10/26/2023 20:39:43'!
test01NewMarsRoverWIthEmptyLog
	| marsRover |
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	! !

!methodRemoval: LoggerTest #test01 stamp: 'camila 10/26/2023 20:39:48'!
test01
	!
!LoggerTest methodsFor: 'testing' stamp: 'camila 10/26/2023 20:40:32'!
east

	^ MarsRoverHeadingEast ! !
!LoggerTest methodsFor: 'testing' stamp: 'camila 10/26/2023 20:40:42'!
north

	^ MarsRoverHeadingNorth ! !
!LoggerTest methodsFor: 'testing' stamp: 'camila 10/26/2023 20:40:56'!
south

	^ MarsRoverHeadingSouth ! !
!LoggerTest methodsFor: 'testing' stamp: 'camila 10/26/2023 20:41:07'!
west

	^ MarsRoverHeadingWest ! !
!LoggerTest methodsFor: 'testing' stamp: 'camila 10/26/2023 20:41:31'!
test01NewMarsRoverWithEmptyLog
	| marsRover |
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	! !

!methodRemoval: LoggerTest #test01NewMarsRoverWIthEmptyLog stamp: 'camila 10/26/2023 20:41:35'!
test01NewMarsRoverWIthEmptyLog
	| marsRover |
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	!

!testRun: #LoggerTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/27/2023 18:02:40'!
PASSED!

!classDefinition: #Logger category: 'MarsRover-WithHeading' stamp: 'camila 10/27/2023 18:14:05'!
Object subclass: #Logger
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!LoggerTest methodsFor: 'testing' stamp: 'camila 10/27/2023 18:14:56' prior: 50650930!
test01NewMarsRoverWithEmptyLog
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	logger := Logger with: marsRover .
	! !
!LoggerTest methodsFor: 'testing' stamp: 'camila 10/27/2023 18:15:31' prior: 50650953!
test01NewMarsRoverWithEmptyLog
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	logger := Logger with: marsRover .
	
	self assert: (logger printLog) equals: OrderedCollection new.! !

!testRun: #LoggerTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/27/2023 18:15:40'!
ERROR!

!testRun: #LoggerTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/27/2023 18:15:40'!
ERROR!
!Logger class methodsFor: 'instance creation' stamp: 'camila 10/27/2023 18:15:49'!
with: marsRover 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeWith: marsRover ! !
!Logger class methodsFor: 'instance creation' stamp: 'camila 10/27/2023 18:15:56' prior: 50650977!
with: marsRover 
	^self new initializeWith: marsRover ! !

!testRun: #LoggerTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/27/2023 18:15:57'!
ERROR!

!classDefinition: #Logger category: 'MarsRover-WithHeading' stamp: 'camila 10/27/2023 18:16:05'!
Object subclass: #Logger
	instanceVariableNames: 'marsRover_CHANGE_ME'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!Logger methodsFor: 'initialization' stamp: 'camila 10/27/2023 18:16:05'!
initializeWith: marsRover 
	self shouldBeImplemented.
	marsRover_CHANGE_ME := marsRover.! !

Object subclass: #Logger
	instanceVariableNames: 'marsRover'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

Object subclass: #Logger
	instanceVariableNames: 'marsRoverForLogging'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #Logger category: 'MarsRover-WithHeading' stamp: 'camila 10/27/2023 18:17:09'!
Object subclass: #Logger
	instanceVariableNames: 'marsRoverForLogging'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!Logger methodsFor: 'initialization' stamp: 'camila 10/27/2023 18:17:24' prior: 50651001!
initializeWith: marsRover 
	marsRoverForLogging := marsRover.! !
!Logger methodsFor: 'initialization' stamp: 'camila 10/27/2023 18:17:33' prior: 50651024!
initializeWith: aMarsRover 
	marsRoverForLogging := aMarsRover.! !
!Logger class methodsFor: 'instance creation' stamp: 'camila 10/27/2023 18:17:38' prior: 50650985!
with: aMarsRover 
	^self new initializeWith: aMarsRover ! !

!classDefinition: #Logger category: 'MarsRover-WithHeading' stamp: 'camila 10/27/2023 18:17:48'!
Object subclass: #Logger
	instanceVariableNames: 'marsRover'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!Logger methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 18:17:48' prior: 50651029!
initializeWith: aMarsRover 
	marsRover := aMarsRover.! !

!testRun: #LoggerTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/27/2023 18:17:59'!
ERROR!

!testRun: #LoggerTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/27/2023 18:17:59'!
ERROR!
!Logger methodsFor: 'print' stamp: 'camila 10/27/2023 18:18:10'!
printLog
	self shouldBeImplemented.! !
!Logger methodsFor: 'print' stamp: 'camila 10/27/2023 18:18:16' prior: 50651058!
printLog
	^OrderedCollection new.! !

!testRun: #LoggerTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/27/2023 18:18:17'!
PASSED!

!testRun: #LoggerTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/27/2023 18:18:19'!
PASSED!

!testRun: #LoggerTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/27/2023 18:18:19'!
PASSED!
!LoggerTest methodsFor: 'testing' stamp: 'camila 10/27/2023 18:20:31'!
test02MarsRoverMovesToNorthLogsNewPosition
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	logger := Logger with: marsRover .
	
	self assert: (logger printLog) equals: OrderedCollection new.! !
!LoggerTest methodsFor: 'testing' stamp: 'camila 10/27/2023 18:23:07' prior: 50651075!
test02MarsRoverMovesToNorthLogsNewPosition
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	logger := Logger with: marsRover .
	
	marsRover
	
	self assert: (logger printLog) equals: OrderedCollection new.! !
!LoggerTest methodsFor: 'testing' stamp: 'camila 10/27/2023 18:23:53' prior: 50651085!
test02MarsRoverMovesToNorthLogsNewPosition
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	logger := Logger with: marsRover .
	
	marsRover process: 'f'.
	
	self assert: (logger printLog) equals: (OrderedCollection with: 1@2).! !

!testRun: #LoggerTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/27/2023 18:25:50'!
PASSED!

!testRun: #LoggerTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/27/2023 18:25:50'!
PASSED!

!testRun: #LoggerTest #test02MarsRoverMovesToNorthLogsNewPosition stamp: 'camila 10/27/2023 18:25:50'!
FAILURE!

!testRun: #LoggerTest #test02MarsRoverMovesToNorthLogsNewPosition stamp: 'camila 10/27/2023 18:25:50'!
FAILURE!

!testRun: #LoggerTest #test02MarsRoverMovesToNorthLogsNewPosition stamp: 'camila 10/27/2023 18:26:21'!
FAILURE!

!testRun: #LoggerTest #test02MarsRoverMovesToNorthLogsNewPosition stamp: 'camila 10/27/2023 18:26:21'!
FAILURE!

!testRun: #LoggerTest #test02MarsRoverMovesToNorthLogsNewPosition stamp: 'camila 10/27/2023 18:27:08'!
FAILURE!

!testRun: #LoggerTest #test02MarsRoverMovesToNorthLogsNewPosition stamp: 'camila 10/27/2023 18:27:08'!
FAILURE!
!MarsRover methodsFor: 'moving' stamp: 'camila 10/27/2023 18:32:10' prior: 50650576!
moveNorth
	self moveAndLogNorth: [ :marsRoverPosition | marsRoverPosition + (0@1)].
	"position := position + (0@1)"! !

!testRun: #LoggerTest #test02MarsRoverMovesToNorthLogsNewPosition stamp: 'camila 10/27/2023 18:32:48'!
ERROR!
!MarsRover methodsFor: 'moving' stamp: 'camila 10/27/2023 18:36:00' prior: 50651135!
moveNorth
	self moveAndLogNorth: [ position + (0@1)].
	"position := position + (0@1)"! !

!testRun: #LoggerTest #test02MarsRoverMovesToNorthLogsNewPosition stamp: 'camila 10/27/2023 18:36:02'!
ERROR!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 18:36:48'!
moveAndLogNorth: aRenameMe1 
	self shouldBeImplemented.! !
!MarsRover methodsFor: 'moving' stamp: 'camila 10/27/2023 18:37:32' prior: 50651145!
moveNorth
	self moveAndLogNorth: [ position := position + (0@1)].
	"position := position + (0@1)"! !

!classDefinition: #MarsRover category: 'MarsRover-WithHeading' stamp: 'camila 10/27/2023 18:39:06'!
Object subclass: #MarsRover
	instanceVariableNames: 'position head logger'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 18:39:03' prior: 50651154!
moveAndLogNorth: aBlock
	
	aBlock value.
	logger logNorth.! !

!testRun: #LoggerTest #test02MarsRoverMovesToNorthLogsNewPosition stamp: 'camila 10/27/2023 18:39:16'!
ERROR!
!MarsRover methodsFor: 'initialization' stamp: 'camila 10/27/2023 18:39:57' prior: 50650512!
initializeAt: aPosition heading: aHeadingType

	position := aPosition.
	head := aHeadingType for: self .
	logger := Logger new.! !
!LoggerTest methodsFor: 'testing' stamp: 'camila 10/27/2023 18:42:08' prior: 50650961!
test01NewMarsRoverWithEmptyLog
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north. 
	Logger with: marsRover .
	
	self assert: (marsRover printLog) equals: OrderedCollection new.! !
!LoggerTest methodsFor: 'testing' stamp: 'camila 10/27/2023 18:42:12' prior: 50651190!
test01NewMarsRoverWithEmptyLog
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north. 
	Logger with: marsRover .
	
	self assert: (logger printLog) equals: OrderedCollection new.! !
!Logger methodsFor: 'initialization' stamp: 'camila 10/27/2023 18:42:41' prior: 50651048!
initializeWith: aMarsRover 
	marsRover := aMarsRover.
	aMarsRover addLogger: self.! !

!testRun: #LoggerTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/27/2023 18:42:44'!
ERROR!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 18:42:49'!
addLogger: aLogger 
	self shouldBeImplemented.! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 18:42:54' prior: 50651219!
addLogger: aLogger 
	logger := aLogger .! !

!testRun: #LoggerTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/27/2023 18:42:56'!
ERROR!
!LoggerTest methodsFor: 'testing' stamp: 'camila 10/27/2023 18:43:18' prior: 50651200!
test01NewMarsRoverWithEmptyLog
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north. 
	logger :=Logger with: marsRover .
	
	self assert: (logger printLog ) equals: OrderedCollection new.! !

!testRun: #LoggerTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/27/2023 18:43:21'!
PASSED!

!testRun: #LoggerTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/27/2023 18:43:21'!
PASSED!

!testRun: #LoggerTest #test02MarsRoverMovesToNorthLogsNewPosition stamp: 'camila 10/27/2023 18:43:21'!
ERROR!

!testRun: #LoggerTest #test02MarsRoverMovesToNorthLogsNewPosition stamp: 'camila 10/27/2023 18:43:21'!
ERROR!

!testRun: #LoggerTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/27/2023 18:43:25'!
PASSED!
!Logger methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 18:44:06'!
logNorth
	self shouldBeImplemented.! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 18:45:01' prior: 50651174!
moveAndLogNorth: aBlock
	
	aBlock value.
	logger logNorth: aBlock.! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 18:46:09' prior: 50651263!
moveAndLogNorth: aBlock
	
	aBlock value.
	logger logNorth: (self position).! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 18:46:45' prior: 50651269!
moveAndLogNorth: aBlock
	
	aBlock value.
	logger logNorth: position.! !

!testRun: #LoggerTest #test02MarsRoverMovesToNorthLogsNewPosition stamp: 'camila 10/27/2023 18:46:53'!
ERROR!
!Logger methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 18:46:57'!
logNorth: aPosition 
	self shouldBeImplemented.! !

!classDefinition: #Logger category: 'MarsRover-WithHeading' stamp: 'camila 10/27/2023 18:47:37'!
Object subclass: #Logger
	instanceVariableNames: 'marsRover positionLog'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!Logger methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 18:47:35' prior: 50651284!
logNorth: aPosition 
	positionLog add: aPosition .! !

!testRun: #LoggerTest #test02MarsRoverMovesToNorthLogsNewPosition stamp: 'camila 10/27/2023 18:47:39'!
ERROR!

Object subclass: #Logger
	instanceVariableNames: 'marsRover positionLog'
	classVariableNames: 'positionLog'
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

Object subclass: #Logger
	instanceVariableNames: 'marsRover positionLog'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #Logger category: 'MarsRover-WithHeading' stamp: 'camila 10/27/2023 18:48:11'!
Object subclass: #Logger
	instanceVariableNames: 'marsRover positionLog'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!Logger methodsFor: 'initialization' stamp: 'camila 10/27/2023 18:48:18' prior: 50651210!
initializeWith: aMarsRover 
	marsRover := aMarsRover.
	aMarsRover addLogger: self.
	positionLog := OrderedCollection new.! !

!testRun: #LoggerTest #test02MarsRoverMovesToNorthLogsNewPosition stamp: 'camila 10/27/2023 18:48:25'!
FAILURE!

!testRun: #LoggerTest #test02MarsRoverMovesToNorthLogsNewPosition stamp: 'camila 10/27/2023 18:48:25'!
FAILURE!
!Logger methodsFor: 'print' stamp: 'camila 10/27/2023 18:49:24' prior: 50651062!
printLog
	^positionLog .! !

!testRun: #LoggerTest #test02MarsRoverMovesToNorthLogsNewPosition stamp: 'camila 10/27/2023 18:49:26'!
PASSED!

!testRun: #LoggerTest #test02MarsRoverMovesToNorthLogsNewPosition stamp: 'camila 10/27/2023 18:49:29'!
PASSED!

!testRun: #LoggerTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/27/2023 18:49:31'!
PASSED!
!LoggerTest methodsFor: 'testing' stamp: 'camila 10/27/2023 18:49:55' prior: 50651096!
test02MarsRoverMovesToNorthLogsNewPosition
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	logger := Logger with: marsRover .
	
	marsRover process: 'f'.
	
	self assert: (logger printLog) equals: (OrderedCollection with: 1@2).
	! !
!LoggerTest methodsFor: 'testing' stamp: 'camila 10/27/2023 18:51:02' prior: 50651351!
test02MarsRoverMovesToNorthLogsNewPosition
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	logger := Logger with: marsRover .
	
	marsRover process: 'f'.
	
	self assert: (logger printLog) equals: (OrderedCollection with: 1@2).
	self assert: (marsRover isAt: 1@2 heading: self north) 
	! !

!testRun: #LoggerTest #test02MarsRoverMovesToNorthLogsNewPosition stamp: 'camila 10/27/2023 18:51:03'!
PASSED!

!testRun: #LoggerTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/27/2023 18:51:03'!
PASSED!

!testRun: #LoggerTest #test02MarsRoverMovesToNorthLogsNewPosition stamp: 'camila 10/27/2023 18:51:03'!
PASSED!
!LoggerTest methodsFor: 'testing' stamp: 'camila 10/27/2023 18:51:47'!
test03MarsRoverMovesToNorthTwice
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	logger := Logger with: marsRover .
	
	marsRover process: 'ff'.
	
	self assert: (logger printLog) equals: (OrderedCollection with: 1@3).
	self assert: (marsRover isAt: 1@3 heading: self north) 
	! !

!testRun: #LoggerTest #test03MarsRoverMovesToNorthTwice stamp: 'camila 10/27/2023 18:51:48'!
FAILURE!
!LoggerTest methodsFor: 'testing' stamp: 'camila 10/27/2023 18:52:00' prior: 50651385!
test03MarsRoverMovesToNorthTwice
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	logger := Logger with: marsRover .
	
	marsRover process: 'ff'.
	
	self assert: (logger printLog) equals: (OrderedCollection with: 1@2 with: 1@3 ).
	self assert: (marsRover isAt: 1@3 heading: self north) 
	! !

!testRun: #LoggerTest #test03MarsRoverMovesToNorthTwice stamp: 'camila 10/27/2023 18:52:01'!
PASSED!

!testRun: #LoggerTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/27/2023 18:52:01'!
PASSED!

!testRun: #LoggerTest #test02MarsRoverMovesToNorthLogsNewPosition stamp: 'camila 10/27/2023 18:52:01'!
PASSED!

!testRun: #LoggerTest #test03MarsRoverMovesToNorthTwice stamp: 'camila 10/27/2023 18:52:01'!
PASSED!
!LoggerTest methodsFor: 'testing' stamp: 'camila 10/27/2023 18:53:15'!
test04MarsRoverMovesBackward
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	logger := Logger with: marsRover .
	
	marsRover process: 'b'.
	
	self assert: (logger printLog) equals: (OrderedCollection with: 1@0).
	self assert: (marsRover isAt: 1@0 heading: self north) 
	! !

!testRun: #LoggerTest #test04MarsRoverMovesBackward stamp: 'camila 10/27/2023 18:53:16'!
FAILURE!
!MarsRover methodsFor: 'moving' stamp: 'camila 10/27/2023 18:54:23' prior: 50650580!
moveSouth
	self moveAndLogSouth: [position := position + (0@-1)].
	"position := position + (0@-1)"! !

!testRun: #LoggerTest #test04MarsRoverMovesBackward stamp: 'camila 10/27/2023 18:54:28'!
ERROR!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 18:54:31'!
moveAndLogSouth: aRenameMe1 
	self shouldBeImplemented.! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 18:54:57' prior: 50651452!
moveAndLogSouth: aBlock
	aBlock value.
	logger logSouth: position. 
	! !

!testRun: #LoggerTest #test04MarsRoverMovesBackward stamp: 'camila 10/27/2023 18:55:02'!
ERROR!
!Logger methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 18:55:07'!
logSouth: aPosition 
	self shouldBeImplemented.! !
!Logger methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 18:55:14' prior: 50651465!
logSouth: aPosition 
	positionLog add: aPosition .! !

!testRun: #LoggerTest #test04MarsRoverMovesBackward stamp: 'camila 10/27/2023 18:55:15'!
PASSED!

!testRun: #LoggerTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/27/2023 18:55:15'!
PASSED!

!testRun: #LoggerTest #test02MarsRoverMovesToNorthLogsNewPosition stamp: 'camila 10/27/2023 18:55:15'!
PASSED!

!testRun: #LoggerTest #test03MarsRoverMovesToNorthTwice stamp: 'camila 10/27/2023 18:55:15'!
PASSED!

!testRun: #LoggerTest #test04MarsRoverMovesBackward stamp: 'camila 10/27/2023 18:55:15'!
PASSED!

!testRun: #LoggerTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/27/2023 18:55:21'!
PASSED!

!testRun: #LoggerTest #test02MarsRoverMovesToNorthLogsNewPosition stamp: 'camila 10/27/2023 18:55:21'!
PASSED!

!testRun: #LoggerTest #test03MarsRoverMovesToNorthTwice stamp: 'camila 10/27/2023 18:55:21'!
PASSED!

!testRun: #LoggerTest #test04MarsRoverMovesBackward stamp: 'camila 10/27/2023 18:55:21'!
PASSED!
!LoggerTest methodsFor: 'testing' stamp: 'camila 10/27/2023 18:56:58'!
test05MarsRoverRotatesIsntLogged
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	logger := Logger with: marsRover .
	
	marsRover process: 'l'.
	
	self assert: (logger printLog) equals: (OrderedCollection with: 1@0).
	self assert: (marsRover isAt: 1@0 heading: self north) 
	! !
!LoggerTest methodsFor: 'testing' stamp: 'camila 10/27/2023 18:59:11' prior: 50651503!
test05MarsRoverRotatesIsntLogged
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	logger := Logger with: marsRover .
	
	marsRover process: 'l'.
	
	self assert: (logger printLog) equals: (OrderedCollection new).
	self assert: (marsRover isAt: 1@1 heading: self west) 
	! !

!testRun: #LoggerTest #test05MarsRoverRotatesIsntLogged stamp: 'camila 10/27/2023 18:59:20'!
PASSED!

!testRun: #LoggerTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/27/2023 18:59:20'!
PASSED!

!testRun: #LoggerTest #test02MarsRoverMovesToNorthLogsNewPosition stamp: 'camila 10/27/2023 18:59:20'!
PASSED!

!testRun: #LoggerTest #test03MarsRoverMovesToNorthTwice stamp: 'camila 10/27/2023 18:59:20'!
PASSED!

!testRun: #LoggerTest #test04MarsRoverMovesBackward stamp: 'camila 10/27/2023 18:59:20'!
PASSED!

!testRun: #LoggerTest #test05MarsRoverRotatesIsntLogged stamp: 'camila 10/27/2023 18:59:20'!
PASSED!
!LoggerTest methodsFor: 'testing' stamp: 'camila 10/27/2023 18:59:26'!
test05MarsRoverRotatesLeftIsntLogged
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	logger := Logger with: marsRover .
	
	marsRover process: 'l'.
	
	self assert: (logger printLog) equals: (OrderedCollection new).
	self assert: (marsRover isAt: 1@1 heading: self west) 
	! !

!methodRemoval: LoggerTest #test05MarsRoverRotatesIsntLogged stamp: 'camila 10/27/2023 18:59:27'!
test05MarsRoverRotatesIsntLogged
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	logger := Logger with: marsRover .
	
	marsRover process: 'l'.
	
	self assert: (logger printLog) equals: (OrderedCollection new).
	self assert: (marsRover isAt: 1@1 heading: self west) 
	!
!LoggerTest methodsFor: 'testing' stamp: 'camila 10/27/2023 18:59:37'!
test05MarsRoverRotatesRightIsntLogged
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	logger := Logger with: marsRover .
	
	marsRover process: 'r'.
	
	self assert: (logger printLog) equals: (OrderedCollection new).
	self assert: (marsRover isAt: 1@1 heading: self east) 
	! !

!testRun: #LoggerTest #test05MarsRoverRotatesRightIsntLogged stamp: 'camila 10/27/2023 18:59:38'!
PASSED!

!testRun: #LoggerTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/27/2023 18:59:38'!
PASSED!

!testRun: #LoggerTest #test02MarsRoverMovesToNorthLogsNewPosition stamp: 'camila 10/27/2023 18:59:38'!
PASSED!

!testRun: #LoggerTest #test03MarsRoverMovesToNorthTwice stamp: 'camila 10/27/2023 18:59:38'!
PASSED!

!testRun: #LoggerTest #test04MarsRoverMovesBackward stamp: 'camila 10/27/2023 18:59:38'!
PASSED!

!testRun: #LoggerTest #test05MarsRoverRotatesLeftIsntLogged stamp: 'camila 10/27/2023 18:59:38'!
PASSED!

!testRun: #LoggerTest #test05MarsRoverRotatesRightIsntLogged stamp: 'camila 10/27/2023 18:59:38'!
PASSED!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 19:00:09'!
moveAndLogPositionMovement: aBlock
	aBlock value.
	logger log: position. 
	! !
!MarsRover methodsFor: 'moving' stamp: 'camila 10/27/2023 19:00:37' prior: 50651159!
moveNorth
	self moveAndLogPositionMovement: [ position := position + (0@1)].
	"position := position + (0@1)"! !
!MarsRover methodsFor: 'moving' stamp: 'camila 10/27/2023 19:00:55' prior: 50651443!
moveSouth
	self moveAndLogPositionMovement: [position := position + (0@-1)].
	"position := position + (0@-1)"! !

!methodRemoval: MarsRover #moveAndLogSouth: stamp: 'camila 10/27/2023 19:00:59'!
moveAndLogSouth: aBlock
	aBlock value.
	logger logSouth: position. 
	!

!methodRemoval: MarsRover #moveAndLogNorth: stamp: 'camila 10/27/2023 19:01:00'!
moveAndLogNorth: aBlock
	
	aBlock value.
	logger logNorth: position.!
!Logger methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 19:01:17'!
log: aPosition 
	positionLog add: aPosition .! !

!methodRemoval: Logger #logNorth stamp: 'camila 10/27/2023 19:01:18'!
logNorth
	self shouldBeImplemented.!

!methodRemoval: Logger #logNorth: stamp: 'camila 10/27/2023 19:01:19'!
logNorth: aPosition 
	positionLog add: aPosition .!

!methodRemoval: Logger #log: stamp: 'camila 10/27/2023 19:01:21'!
log: aPosition 
	positionLog add: aPosition .!

!methodRemoval: Logger #logSouth: stamp: 'camila 10/27/2023 19:01:21'!
logSouth: aPosition 
	positionLog add: aPosition .!

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'camila 10/27/2023 19:01:23'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'camila 10/27/2023 19:01:23'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'camila 10/27/2023 19:01:23'!
PASSED!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'camila 10/27/2023 19:01:23'!
ERROR!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'camila 10/27/2023 19:01:23'!
ERROR!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'camila 10/27/2023 19:01:23'!
PASSED!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'camila 10/27/2023 19:01:23'!
PASSED!

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'camila 10/27/2023 19:01:23'!
PASSED!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'camila 10/27/2023 19:01:23'!
ERROR!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'camila 10/27/2023 19:01:23'!
PASSED!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'camila 10/27/2023 19:01:23'!
PASSED!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'camila 10/27/2023 19:01:23'!
PASSED!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'camila 10/27/2023 19:01:23'!
PASSED!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'camila 10/27/2023 19:01:23'!
ERROR!

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'camila 10/27/2023 19:01:23'!
PASSED!

!testRun: #LoggerTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/27/2023 19:01:32'!
PASSED!

!testRun: #LoggerTest #test02MarsRoverMovesToNorthLogsNewPosition stamp: 'camila 10/27/2023 19:01:32'!
ERROR!

!testRun: #LoggerTest #test03MarsRoverMovesToNorthTwice stamp: 'camila 10/27/2023 19:01:32'!
ERROR!

!testRun: #LoggerTest #test04MarsRoverMovesBackward stamp: 'camila 10/27/2023 19:01:32'!
ERROR!

!testRun: #LoggerTest #test05MarsRoverRotatesLeftIsntLogged stamp: 'camila 10/27/2023 19:01:32'!
PASSED!

!testRun: #LoggerTest #test05MarsRoverRotatesRightIsntLogged stamp: 'camila 10/27/2023 19:01:32'!
PASSED!

!testRun: #LoggerTest #test02MarsRoverMovesToNorthLogsNewPosition stamp: 'camila 10/27/2023 19:01:38'!
ERROR!
!Logger methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 19:02:36'!
log: aPosition 
	self shouldBeImplemented.! !
!Logger methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 19:02:42' prior: 50651735!
log: aPosition 
	positionLog add: aPosition .! !

!testRun: #LoggerTest #test02MarsRoverMovesToNorthLogsNewPosition stamp: 'camila 10/27/2023 19:02:43'!
FAILURE!

!testRun: #LoggerTest #test02MarsRoverMovesToNorthLogsNewPosition stamp: 'camila 10/27/2023 19:03:31'!
PASSED!

!testRun: #LoggerTest #test03MarsRoverMovesToNorthTwice stamp: 'camila 10/27/2023 19:03:33'!
PASSED!

!testRun: #LoggerTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/27/2023 19:03:34'!
PASSED!

!testRun: #LoggerTest #test02MarsRoverMovesToNorthLogsNewPosition stamp: 'camila 10/27/2023 19:03:34'!
PASSED!

!testRun: #LoggerTest #test03MarsRoverMovesToNorthTwice stamp: 'camila 10/27/2023 19:03:34'!
PASSED!

!testRun: #LoggerTest #test04MarsRoverMovesBackward stamp: 'camila 10/27/2023 19:03:34'!
PASSED!

!testRun: #LoggerTest #test05MarsRoverRotatesLeftIsntLogged stamp: 'camila 10/27/2023 19:03:34'!
PASSED!

!testRun: #LoggerTest #test05MarsRoverRotatesRightIsntLogged stamp: 'camila 10/27/2023 19:03:34'!
PASSED!

!testRun: #LoggerTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/27/2023 19:03:38'!
PASSED!

!testRun: #LoggerTest #test02MarsRoverMovesToNorthLogsNewPosition stamp: 'camila 10/27/2023 19:03:38'!
PASSED!

!testRun: #LoggerTest #test03MarsRoverMovesToNorthTwice stamp: 'camila 10/27/2023 19:03:38'!
PASSED!

!testRun: #LoggerTest #test04MarsRoverMovesBackward stamp: 'camila 10/27/2023 19:03:38'!
PASSED!

!testRun: #LoggerTest #test05MarsRoverRotatesLeftIsntLogged stamp: 'camila 10/27/2023 19:03:38'!
PASSED!

!testRun: #LoggerTest #test05MarsRoverRotatesRightIsntLogged stamp: 'camila 10/27/2023 19:03:38'!
PASSED!
!LoggerTest methodsFor: 'testing' stamp: 'camila 10/27/2023 19:06:06'!
testX
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	logger := Logger with: marsRover .
	
	marsRover process: 'rf'.
	
	self assert: (logger printLog) equals: (OrderedCollection with: 2@1 ).
	self assert: (marsRover isAt: 2@1 heading: self east) 
	! !

!testRun: #LoggerTest #testX stamp: 'camila 10/27/2023 19:06:08'!
FAILURE!
!MarsRover methodsFor: 'moving' stamp: 'camila 10/27/2023 19:07:38' prior: 50650568!
moveEast
	self moveAndLogPositionMovement: [position := position + (1@0)].
	"position := position + (1@0)"! !

!testRun: #LoggerTest #testX stamp: 'camila 10/27/2023 19:07:40'!
FAILURE!

!testRun: #LoggerTest #testX stamp: 'camila 10/27/2023 19:07:57'!
PASSED!
!LoggerTest methodsFor: 'testing' stamp: 'camila 10/27/2023 19:08:06'!
test06MarsRoverRotatesRightIsntLogged
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	logger := Logger with: marsRover .
	
	marsRover process: 'r'.
	
	self assert: (logger printLog) equals: (OrderedCollection new).
	self assert: (marsRover isAt: 1@1 heading: self east) 
	! !

!methodRemoval: LoggerTest #test05MarsRoverRotatesRightIsntLogged stamp: 'camila 10/27/2023 19:08:10'!
test05MarsRoverRotatesRightIsntLogged
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	logger := Logger with: marsRover .
	
	marsRover process: 'r'.
	
	self assert: (logger printLog) equals: (OrderedCollection new).
	self assert: (marsRover isAt: 1@1 heading: self east) 
	!
!LoggerTest methodsFor: 'testing' stamp: 'camila 10/27/2023 19:08:46'!
test07MarsRoverMovesForwardHeadingEastIsLogged
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	logger := Logger with: marsRover .
	
	marsRover process: 'rf'.
	
	self assert: (logger printLog) equals: (OrderedCollection with: 2@1 ).
	self assert: (marsRover isAt: 2@1 heading: self east) 
	! !

!methodRemoval: LoggerTest #testX stamp: 'camila 10/27/2023 19:08:48'!
testX
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	logger := Logger with: marsRover .
	
	marsRover process: 'rf'.
	
	self assert: (logger printLog) equals: (OrderedCollection with: 2@1 ).
	self assert: (marsRover isAt: 2@1 heading: self east) 
	!

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'camila 10/27/2023 19:08:51'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'camila 10/27/2023 19:08:51'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'camila 10/27/2023 19:08:51'!
PASSED!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'camila 10/27/2023 19:08:51'!
ERROR!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'camila 10/27/2023 19:08:51'!
ERROR!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'camila 10/27/2023 19:08:51'!
PASSED!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'camila 10/27/2023 19:08:51'!
PASSED!

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'camila 10/27/2023 19:08:51'!
PASSED!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'camila 10/27/2023 19:08:51'!
ERROR!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'camila 10/27/2023 19:08:51'!
ERROR!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'camila 10/27/2023 19:08:51'!
PASSED!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'camila 10/27/2023 19:08:51'!
PASSED!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'camila 10/27/2023 19:08:51'!
PASSED!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'camila 10/27/2023 19:08:51'!
ERROR!

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'camila 10/27/2023 19:08:51'!
ERROR!

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'camila 10/27/2023 19:09:10'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'camila 10/27/2023 19:09:10'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'camila 10/27/2023 19:09:10'!
PASSED!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'camila 10/27/2023 19:09:10'!
ERROR!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'camila 10/27/2023 19:09:10'!
ERROR!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'camila 10/27/2023 19:09:10'!
PASSED!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'camila 10/27/2023 19:09:10'!
PASSED!

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'camila 10/27/2023 19:09:10'!
PASSED!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'camila 10/27/2023 19:09:10'!
ERROR!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'camila 10/27/2023 19:09:10'!
ERROR!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'camila 10/27/2023 19:09:10'!
PASSED!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'camila 10/27/2023 19:09:10'!
PASSED!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'camila 10/27/2023 19:09:10'!
PASSED!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'camila 10/27/2023 19:09:10'!
ERROR!

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'camila 10/27/2023 19:09:10'!
ERROR!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'camila 10/27/2023 19:09:12'!
ERROR!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'camila 10/27/2023 19:09:42'!
ERROR!

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'camila 10/27/2023 19:10:16'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'camila 10/27/2023 19:10:16'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'camila 10/27/2023 19:10:16'!
PASSED!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'camila 10/27/2023 19:10:16'!
ERROR!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'camila 10/27/2023 19:10:16'!
ERROR!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'camila 10/27/2023 19:10:16'!
PASSED!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'camila 10/27/2023 19:10:16'!
PASSED!

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'camila 10/27/2023 19:10:16'!
PASSED!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'camila 10/27/2023 19:10:16'!
ERROR!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'camila 10/27/2023 19:10:16'!
ERROR!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'camila 10/27/2023 19:10:16'!
PASSED!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'camila 10/27/2023 19:10:16'!
PASSED!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'camila 10/27/2023 19:10:16'!
PASSED!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'camila 10/27/2023 19:10:16'!
ERROR!

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'camila 10/27/2023 19:10:16'!
ERROR!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'camila 10/27/2023 19:10:20'!
ERROR!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 19:12:20' prior: 50651608!
moveAndLogPositionMovement: aBlock
	aBlock value.
	logger isNotEmpty: [logger log: position]. 
	! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 19:13:21' prior: 50652049!
moveAndLogPositionMovement: aBlock
	aBlock value.
	logger ifNotNil: [logger log: position]. 
	! !

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'camila 10/27/2023 19:13:28'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'camila 10/27/2023 19:13:28'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'camila 10/27/2023 19:13:28'!
PASSED!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'camila 10/27/2023 19:13:28'!
ERROR!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'camila 10/27/2023 19:13:28'!
ERROR!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'camila 10/27/2023 19:13:28'!
PASSED!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'camila 10/27/2023 19:13:28'!
PASSED!

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'camila 10/27/2023 19:13:28'!
PASSED!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'camila 10/27/2023 19:13:28'!
ERROR!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'camila 10/27/2023 19:13:28'!
ERROR!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'camila 10/27/2023 19:13:28'!
PASSED!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'camila 10/27/2023 19:13:28'!
PASSED!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'camila 10/27/2023 19:13:28'!
PASSED!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'camila 10/27/2023 19:13:28'!
ERROR!

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'camila 10/27/2023 19:13:28'!
ERROR!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'camila 10/27/2023 19:13:31'!
ERROR!
!MarsRover methodsFor: 'initialization' stamp: 'camila 10/27/2023 19:13:55' prior: 50651183!
initializeAt: aPosition heading: aHeadingType

	position := aPosition.
	head := aHeadingType for: self .! !

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'camila 10/27/2023 19:13:58'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'camila 10/27/2023 19:13:58'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'camila 10/27/2023 19:13:58'!
PASSED!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'camila 10/27/2023 19:13:58'!
PASSED!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'camila 10/27/2023 19:13:58'!
PASSED!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'camila 10/27/2023 19:13:58'!
PASSED!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'camila 10/27/2023 19:13:58'!
PASSED!

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'camila 10/27/2023 19:13:58'!
PASSED!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'camila 10/27/2023 19:13:58'!
PASSED!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'camila 10/27/2023 19:13:58'!
PASSED!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'camila 10/27/2023 19:13:58'!
PASSED!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'camila 10/27/2023 19:13:58'!
PASSED!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'camila 10/27/2023 19:13:58'!
PASSED!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'camila 10/27/2023 19:13:58'!
PASSED!

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'camila 10/27/2023 19:13:58'!
PASSED!

!testRun: #LoggerTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/27/2023 19:14:02'!
PASSED!

!testRun: #LoggerTest #test02MarsRoverMovesToNorthLogsNewPosition stamp: 'camila 10/27/2023 19:14:02'!
PASSED!

!testRun: #LoggerTest #test03MarsRoverMovesToNorthTwice stamp: 'camila 10/27/2023 19:14:02'!
PASSED!

!testRun: #LoggerTest #test04MarsRoverMovesBackward stamp: 'camila 10/27/2023 19:14:02'!
PASSED!

!testRun: #LoggerTest #test05MarsRoverRotatesLeftIsntLogged stamp: 'camila 10/27/2023 19:14:02'!
PASSED!

!testRun: #LoggerTest #test06MarsRoverRotatesRightIsntLogged stamp: 'camila 10/27/2023 19:14:02'!
PASSED!

!testRun: #LoggerTest #test07MarsRoverMovesForwardHeadingEastIsLogged stamp: 'camila 10/27/2023 19:14:02'!
PASSED!
!LoggerTest methodsFor: 'testing' stamp: 'camila 10/27/2023 19:14:18'!
test08MarsRoverMovesForwardHeadingWestIsLogged
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	logger := Logger with: marsRover .
	
	marsRover process: 'lf'.
	
	self assert: (logger printLog) equals: (OrderedCollection with: 2@1 ).
	self assert: (marsRover isAt: 2@1 heading: self east) 
	! !
!LoggerTest methodsFor: 'testing' stamp: 'camila 10/27/2023 19:14:50' prior: 50652209!
test08MarsRoverMovesForwardHeadingWestIsLogged
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	logger := Logger with: marsRover .
	
	marsRover process: 'lf'.
	
	self assert: (logger printLog) equals: (OrderedCollection with: 0@1 ).
	self assert: (marsRover isAt: 0@1 heading: self west) 
	! !

!testRun: #LoggerTest #test08MarsRoverMovesForwardHeadingWestIsLogged stamp: 'camila 10/27/2023 19:14:51'!
FAILURE!
!MarsRover methodsFor: 'moving' stamp: 'camila 10/27/2023 19:15:44' prior: 50650584!
moveWest
	self moveAndLogPositionMovement: [position + (-1@0)].
	"position := position + (-1@0)"! !

!testRun: #LoggerTest #test08MarsRoverMovesForwardHeadingWestIsLogged stamp: 'camila 10/27/2023 19:15:45'!
PASSED!

!testRun: #LoggerTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/27/2023 19:15:45'!
PASSED!

!testRun: #LoggerTest #test02MarsRoverMovesToNorthLogsNewPosition stamp: 'camila 10/27/2023 19:15:45'!
PASSED!

!testRun: #LoggerTest #test03MarsRoverMovesToNorthTwice stamp: 'camila 10/27/2023 19:15:45'!
PASSED!

!testRun: #LoggerTest #test04MarsRoverMovesBackward stamp: 'camila 10/27/2023 19:15:45'!
PASSED!

!testRun: #LoggerTest #test05MarsRoverRotatesLeftIsntLogged stamp: 'camila 10/27/2023 19:15:45'!
PASSED!

!testRun: #LoggerTest #test06MarsRoverRotatesRightIsntLogged stamp: 'camila 10/27/2023 19:15:45'!
PASSED!

!testRun: #LoggerTest #test07MarsRoverMovesForwardHeadingEastIsLogged stamp: 'camila 10/27/2023 19:15:45'!
PASSED!

!testRun: #LoggerTest #test08MarsRoverMovesForwardHeadingWestIsLogged stamp: 'camila 10/27/2023 19:15:45'!
FAILURE!

!testRun: #LoggerTest #test08MarsRoverMovesForwardHeadingWestIsLogged stamp: 'camila 10/27/2023 19:15:45'!
FAILURE!

!testRun: #LoggerTest #test08MarsRoverMovesForwardHeadingWestIsLogged stamp: 'camila 10/27/2023 19:15:47'!
FAILURE!
!MarsRover methodsFor: 'moving' stamp: 'camila 10/27/2023 19:17:58' prior: 50652239!
moveWest
	self moveAndLogPositionMovement: [position := position + (-1@0)].
	"position := position + (-1@0)"! !

!testRun: #LoggerTest #test08MarsRoverMovesForwardHeadingWestIsLogged stamp: 'camila 10/27/2023 19:17:59'!
FAILURE!

!testRun: #LoggerTest #test08MarsRoverMovesForwardHeadingWestIsLogged stamp: 'camila 10/27/2023 19:18:00'!
PASSED!

!testRun: #LoggerTest #test08MarsRoverMovesForwardHeadingWestIsLogged stamp: 'camila 10/27/2023 19:18:03'!
PASSED!

!testRun: #LoggerTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/27/2023 19:18:07'!
PASSED!

!testRun: #LoggerTest #test02MarsRoverMovesToNorthLogsNewPosition stamp: 'camila 10/27/2023 19:18:07'!
PASSED!

!testRun: #LoggerTest #test03MarsRoverMovesToNorthTwice stamp: 'camila 10/27/2023 19:18:07'!
PASSED!

!testRun: #LoggerTest #test04MarsRoverMovesBackward stamp: 'camila 10/27/2023 19:18:07'!
PASSED!

!testRun: #LoggerTest #test05MarsRoverRotatesLeftIsntLogged stamp: 'camila 10/27/2023 19:18:07'!
PASSED!

!testRun: #LoggerTest #test06MarsRoverRotatesRightIsntLogged stamp: 'camila 10/27/2023 19:18:07'!
PASSED!

!testRun: #LoggerTest #test07MarsRoverMovesForwardHeadingEastIsLogged stamp: 'camila 10/27/2023 19:18:07'!
PASSED!

!testRun: #LoggerTest #test08MarsRoverMovesForwardHeadingWestIsLogged stamp: 'camila 10/27/2023 19:18:07'!
PASSED!

----SNAPSHOT----(27 October 2023 19:18:19) CuisUniversity-5981.image priorSource: 10213094!

TestCase subclass: #LoggerHeadingTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #LoggerHeadingTest category: 'MarsRover-WithHeading' stamp: 'camila 10/27/2023 19:20:11'!
TestCase subclass: #LoggerHeadingTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!LoggerHeadingTest methodsFor: 'no messages' stamp: 'camila 10/27/2023 19:20:29'!
east

	^ MarsRoverHeadingEast ! !
!LoggerHeadingTest methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 19:20:36'!
north

	^ MarsRoverHeadingNorth ! !
!LoggerHeadingTest methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 19:20:43'!
south

	^ MarsRoverHeadingSouth ! !
!LoggerHeadingTest methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 19:20:55'!
west

	^ MarsRoverHeadingWest ! !

!classDefinition: #LoggerHeading category: 'MarsRover-WithHeading' stamp: 'camila 10/27/2023 19:21:45'!
Object subclass: #LoggerHeading
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!LoggerHeadingTest methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 19:21:36'!
test01NewMarsRoverWithEmptyLog
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north. 
	logger :=LoggerHeading with: marsRover .
	
	self assert: (logger printLog ) equals: OrderedCollection new.! !

!testRun: #LoggerHeadingTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/27/2023 19:22:03'!
ERROR!

!testRun: #LoggerHeadingTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/27/2023 19:22:03'!
ERROR!

!testRun: #LoggerHeadingTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/27/2023 19:22:09'!
ERROR!

!testRun: #LoggerHeadingTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/27/2023 19:22:19'!
ERROR!

!testRun: #LoggerHeadingTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/27/2023 19:22:19'!
ERROR!
!LoggerHeading class methodsFor: 'instance creation' stamp: 'camila 10/27/2023 19:22:25'!
with: marsRover 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeWith: marsRover ! !
!LoggerHeading class methodsFor: 'instance creation' stamp: 'camila 10/27/2023 19:22:38' prior: 50652394!
with: aMarsRover 
	^self new initializeWith: aMarsRover ! !

!testRun: #LoggerHeadingTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/27/2023 19:22:39'!
ERROR!

!classDefinition: #LoggerHeading category: 'MarsRover-WithHeading' stamp: 'camila 10/27/2023 19:22:48'!
Object subclass: #LoggerHeading
	instanceVariableNames: 'marsRover'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!LoggerHeading methodsFor: 'initialization' stamp: 'camila 10/27/2023 19:22:48'!
initializeWith: aMarsRover 
	self shouldBeImplemented.
	marsRover := aMarsRover.! !
!LoggerHeading methodsFor: 'initialization' stamp: 'camila 10/27/2023 19:22:54' prior: 50652419!
initializeWith: aMarsRover
	marsRover := aMarsRover.! !
!LoggerHeading methodsFor: 'initialization' stamp: 'camila 10/27/2023 19:23:09' prior: 50652425!
initializeWith: aMarsRover
	marsRover := aMarsRover.
	aMarsRover addLogger: self.! !

!testRun: #LoggerHeadingTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/27/2023 19:23:10'!
ERROR!
!LoggerHeading methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 19:23:17'!
printLog
	self shouldBeImplemented.! !

!classDefinition: #LoggerHeading category: 'MarsRover-WithHeading' stamp: 'camila 10/27/2023 19:23:30'!
Object subclass: #LoggerHeading
	instanceVariableNames: 'marsRover headingLog'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!LoggerHeading methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 19:23:29' prior: 50652439!
printLog
	^headingLog.! !

!testRun: #LoggerHeadingTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/27/2023 19:23:32'!
FAILURE!
!LoggerHeading methodsFor: 'initialization' stamp: 'camila 10/27/2023 19:23:52' prior: 50652430!
initializeWith: aMarsRover
	marsRover := aMarsRover.
	aMarsRover addLogger: self.
	headingLog := OrderedCollection new.! !

!testRun: #LoggerHeadingTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/27/2023 19:23:53'!
PASSED!

!testRun: #LoggerHeadingTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/27/2023 19:23:58'!
PASSED!

!testRun: #LoggerHeadingTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/27/2023 19:23:58'!
PASSED!
!LoggerHeadingTest methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 19:25:13'!
test02MarsRoverRotatesLeftIsLogged
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north. 
	logger :=LoggerHeading with: marsRover .
	
	marsRover process: 'r'.
	
	self assert: (logger printLog ) equals: (OrderedCollection with: 'East').! !

!testRun: #LoggerHeadingTest #test02MarsRoverRotatesLeftIsLogged stamp: 'camila 10/27/2023 19:25:17'!
FAILURE!
!MarsRover methodsFor: 'heading' stamp: 'camila 10/27/2023 19:27:59' prior: 50650518!
headEast
	
	self rotateAndLog: [head := MarsRoverHeadingEast for: self].
	"head := MarsRoverHeadingEast for: self"
	! !

!testRun: #LoggerHeadingTest #test02MarsRoverRotatesLeftIsLogged stamp: 'camila 10/27/2023 19:28:02'!
ERROR!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 19:28:07'!
rotateAndLog: aRenameMe1 
	self shouldBeImplemented.! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 19:29:05' prior: 50652502!
rotateAndLog: aBlock 
	aBlock value.
	logger ifNotNil: [logger log: head]! !

!testRun: #LoggerHeadingTest #test02MarsRoverRotatesLeftIsLogged stamp: 'camila 10/27/2023 19:29:06'!
ERROR!
!LoggerHeading methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 19:29:11'!
log: aHead 
	self shouldBeImplemented.! !
!LoggerHeading methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 19:29:25' prior: 50652516!
log: aHead 
	headingLog add: aHead.! !

!testRun: #LoggerHeadingTest #test02MarsRoverRotatesLeftIsLogged stamp: 'camila 10/27/2023 19:29:26'!
FAILURE!
!LoggerHeading methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 19:32:05' prior: 50652521!
log: aHeading 
	 (aHeading isKindOf: MarsRoverHeadingEast) ifTrue: [headingLog add: 'East'] .! !

!testRun: #LoggerHeadingTest #test02MarsRoverRotatesLeftIsLogged stamp: 'camila 10/27/2023 19:32:06'!
PASSED!

!testRun: #LoggerHeadingTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/27/2023 19:32:06'!
PASSED!

!testRun: #LoggerHeadingTest #test02MarsRoverRotatesLeftIsLogged stamp: 'camila 10/27/2023 19:32:06'!
PASSED!

!testRun: #LoggerHeadingTest #test02MarsRoverRotatesLeftIsLogged stamp: 'camila 10/27/2023 19:32:14'!
PASSED!

!testRun: #LoggerHeadingTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/27/2023 19:32:16'!
PASSED!
!LoggerHeadingTest methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 19:32:39' prior: 50652477!
test02MarsRoverRotatesLeftIsLogged
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north. 
	logger :=LoggerHeading with: marsRover .
	
	marsRover process: 'l'.
	
	self assert: (logger printLog ) equals: (OrderedCollection with: 'West').! !
!LoggerHeadingTest methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 19:33:31' prior: 50652553!
test02MarsRoverRotatesLeftIsLogged
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north. 
	logger :=LoggerHeading with: marsRover .
	
	marsRover process: 'l'.
	
	self assert: (logger printLog ) equals: (OrderedCollection with: 'West').
	self assert: (marsRover isAt: 1@1 heading: self west)! !
!LoggerHeadingTest methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 19:33:33' prior: 50652565!
test02MarsRoverRotatesLeftIsLogged
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north. 
	logger :=LoggerHeading with: marsRover .
	
	marsRover process: 'l'.
	
	self assert: (logger printLog ) equals: (OrderedCollection with: 'West').
	self assert: (marsRover isAt: 1@1 heading: self west).! !

!testRun: #LoggerHeadingTest #test02MarsRoverRotatesLeftIsLogged stamp: 'camila 10/27/2023 19:33:33'!
FAILURE!

!testRun: #LoggerHeadingTest #test02MarsRoverRotatesLeftIsLogged stamp: 'camila 10/27/2023 19:33:38'!
FAILURE!

!testRun: #LoggerHeadingTest #test02MarsRoverRotatesLeftIsLogged stamp: 'camila 10/27/2023 19:33:38'!
FAILURE!

!testRun: #LoggerHeadingTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/27/2023 19:33:43'!
PASSED!

!testRun: #LoggerHeadingTest #test02MarsRoverRotatesLeftIsLogged stamp: 'camila 10/27/2023 19:33:45'!
FAILURE!

!testRun: #LoggerHeadingTest #test02MarsRoverRotatesLeftIsLogged stamp: 'camila 10/27/2023 19:33:45'!
FAILURE!
!LoggerHeadingTest methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 19:34:25'!
test02MarsRoverRotatesRightIsLogged
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north. 
	logger :=LoggerHeading with: marsRover .
	
	marsRover process: 'r'.
	
	self assert: (logger printLog ) equals: (OrderedCollection with: 'East').
	self assert: (marsRover isAt: 1@1 heading: self east).! !

!testRun: #LoggerHeadingTest #test02MarsRoverRotatesRightIsLogged stamp: 'camila 10/27/2023 19:34:27'!
PASSED!

!testRun: #LoggerHeadingTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/27/2023 19:34:27'!
PASSED!

!testRun: #LoggerHeadingTest #test02MarsRoverRotatesLeftIsLogged stamp: 'camila 10/27/2023 19:34:27'!
FAILURE!

!testRun: #LoggerHeadingTest #test02MarsRoverRotatesRightIsLogged stamp: 'camila 10/27/2023 19:34:27'!
PASSED!

!testRun: #LoggerHeadingTest #test02MarsRoverRotatesLeftIsLogged stamp: 'camila 10/27/2023 19:34:27'!
FAILURE!
!MarsRover methodsFor: 'heading' stamp: 'camila 10/27/2023 19:35:30' prior: 50650530!
headWest
	self rotateAndLog: [head := MarsRoverHeadingWest for: self].
	"head := MarsRoverHeadingWest for: self" ! !

!testRun: #LoggerHeadingTest #test02MarsRoverRotatesLeftIsLogged stamp: 'camila 10/27/2023 19:35:31'!
FAILURE!
!LoggerHeading methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 19:36:08' prior: 50652529!
log: aHeading 
	(aHeading isKindOf: MarsRoverHeadingWest) ifTrue: [headingLog add: 'West'] .
	 (aHeading isKindOf: MarsRoverHeadingEast) ifTrue: [headingLog add: 'East'] .! !

!testRun: #LoggerHeadingTest #test02MarsRoverRotatesLeftIsLogged stamp: 'camila 10/27/2023 19:36:10'!
PASSED!

!testRun: #LoggerHeadingTest #test02MarsRoverRotatesLeftIsLogged stamp: 'camila 10/27/2023 19:36:15'!
PASSED!
!LoggerHeadingTest methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 19:36:24'!
test03MarsRoverRotatesRightIsLogged
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north. 
	logger :=LoggerHeading with: marsRover .
	
	marsRover process: 'r'.
	
	self assert: (logger printLog ) equals: (OrderedCollection with: 'East').
	self assert: (marsRover isAt: 1@1 heading: self east).! !

!methodRemoval: LoggerHeadingTest #test02MarsRoverRotatesRightIsLogged stamp: 'camila 10/27/2023 19:36:26'!
test02MarsRoverRotatesRightIsLogged
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north. 
	logger :=LoggerHeading with: marsRover .
	
	marsRover process: 'r'.
	
	self assert: (logger printLog ) equals: (OrderedCollection with: 'East').
	self assert: (marsRover isAt: 1@1 heading: self east).!

!testRun: #LoggerHeadingTest #test03MarsRoverRotatesRightIsLogged stamp: 'camila 10/27/2023 19:36:27'!
PASSED!

!testRun: #LoggerHeadingTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/27/2023 19:36:30'!
PASSED!

!testRun: #LoggerHeadingTest #test02MarsRoverRotatesLeftIsLogged stamp: 'camila 10/27/2023 19:36:30'!
PASSED!

!testRun: #LoggerHeadingTest #test03MarsRoverRotatesRightIsLogged stamp: 'camila 10/27/2023 19:36:30'!
PASSED!
!LoggerHeadingTest methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 19:37:01'!
test02MarsRoverRotatesLeftLogsWest
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north. 
	logger :=LoggerHeading with: marsRover .
	
	marsRover process: 'l'.
	
	self assert: (logger printLog ) equals: (OrderedCollection with: 'West').
	self assert: (marsRover isAt: 1@1 heading: self west).! !

!methodRemoval: LoggerHeadingTest #test02MarsRoverRotatesLeftIsLogged stamp: 'camila 10/27/2023 19:37:01'!
test02MarsRoverRotatesLeftIsLogged
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north. 
	logger :=LoggerHeading with: marsRover .
	
	marsRover process: 'l'.
	
	self assert: (logger printLog ) equals: (OrderedCollection with: 'West').
	self assert: (marsRover isAt: 1@1 heading: self west).!
!LoggerHeadingTest methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 19:37:10'!
test03MarsRoverRotatesRightLogsEast
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north. 
	logger :=LoggerHeading with: marsRover .
	
	marsRover process: 'r'.
	
	self assert: (logger printLog ) equals: (OrderedCollection with: 'East').
	self assert: (marsRover isAt: 1@1 heading: self east).! !

!methodRemoval: LoggerHeadingTest #test03MarsRoverRotatesRightIsLogged stamp: 'camila 10/27/2023 19:37:10'!
test03MarsRoverRotatesRightIsLogged
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north. 
	logger :=LoggerHeading with: marsRover .
	
	marsRover process: 'r'.
	
	self assert: (logger printLog ) equals: (OrderedCollection with: 'East').
	self assert: (marsRover isAt: 1@1 heading: self east).!
!LoggerHeadingTest methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 19:37:55'!
test04MarsRoverRotatesNorthLogsNorth
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self east. 
	logger :=LoggerHeading with: marsRover .
	
	marsRover process: 'l'.
	
	self assert: (logger printLog ) equals: (OrderedCollection with: 'North').
	self assert: (marsRover isAt: 1@1 heading: self north).! !

!testRun: #LoggerHeadingTest #test04MarsRoverRotatesNorthLogsNorth stamp: 'camila 10/27/2023 19:37:58'!
FAILURE!
!MarsRover methodsFor: 'heading' stamp: 'camila 10/27/2023 19:38:48' prior: 50650522!
headNorth
	self rotateAndLog: [head := MarsRoverHeadingNorth for: self]
	"head := MarsRoverHeadingNorth for: self" ! !
!MarsRover methodsFor: 'heading' stamp: 'camila 10/27/2023 19:38:50' prior: 50652780!
headNorth
	self rotateAndLog: [head := MarsRoverHeadingNorth for: self].
	"head := MarsRoverHeadingNorth for: self" ! !

!testRun: #LoggerHeadingTest #test04MarsRoverRotatesNorthLogsNorth stamp: 'camila 10/27/2023 19:38:51'!
FAILURE!
!LoggerHeading methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 19:39:26' prior: 50652654!
log: aHeading 
	(aHeading isKindOf: MarsRoverHeadingNorth) ifTrue: [headingLog add: 'North'] .
	(aHeading isKindOf: MarsRoverHeadingWest) ifTrue: [headingLog add: 'West'] .
	 (aHeading isKindOf: MarsRoverHeadingEast) ifTrue: [headingLog add: 'East'] .! !

!testRun: #LoggerHeadingTest #test04MarsRoverRotatesNorthLogsNorth stamp: 'camila 10/27/2023 19:39:28'!
PASSED!

!testRun: #LoggerHeadingTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/27/2023 19:39:28'!
PASSED!

!testRun: #LoggerHeadingTest #test02MarsRoverRotatesLeftLogsWest stamp: 'camila 10/27/2023 19:39:28'!
PASSED!

!testRun: #LoggerHeadingTest #test03MarsRoverRotatesRightLogsEast stamp: 'camila 10/27/2023 19:39:28'!
PASSED!

!testRun: #LoggerHeadingTest #test04MarsRoverRotatesNorthLogsNorth stamp: 'camila 10/27/2023 19:39:28'!
PASSED!
!LoggerHeadingTest methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 19:39:42'!
test05MarsRoverRotatesSouthLogsSouth
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self east. 
	logger :=LoggerHeading with: marsRover .
	
	marsRover process: 'l'.
	
	self assert: (logger printLog ) equals: (OrderedCollection with: 'North').
	self assert: (marsRover isAt: 1@1 heading: self north).! !
!LoggerHeadingTest methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 19:40:04' prior: 50652827!
test05MarsRoverRotatesSouthLogsSouth
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self west. 
	logger :=LoggerHeading with: marsRover .
	
	marsRover process: 'r'.
	
	self assert: (logger printLog ) equals: (OrderedCollection with: 'South').
	self assert: (marsRover isAt: 1@1 heading: self south).! !

!testRun: #LoggerHeadingTest #test05MarsRoverRotatesSouthLogsSouth stamp: 'camila 10/27/2023 19:40:15'!
FAILURE!

!testRun: #LoggerHeadingTest #test05MarsRoverRotatesSouthLogsSouth stamp: 'camila 10/27/2023 19:40:15'!
FAILURE!
!LoggerHeadingTest methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 19:40:42' prior: 50652841!
test05MarsRoverRotatesSouthLogsSouth
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self west. 
	logger :=LoggerHeading with: marsRover .
	
	marsRover process: 'l'.
	
	self assert: (logger printLog ) equals: (OrderedCollection with: 'South').
	self assert: (marsRover isAt: 1@1 heading: self south).! !

!testRun: #LoggerHeadingTest #test05MarsRoverRotatesSouthLogsSouth stamp: 'camila 10/27/2023 19:40:44'!
FAILURE!
!MarsRover methodsFor: 'heading' stamp: 'camila 10/27/2023 19:41:32' prior: 50650526!
headSouth
	self rotateAndLog: [head := MarsRoverHeadingSouth for: self].
	"head := MarsRoverHeadingSouth for: self"! !
!LoggerHeading methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 19:41:54' prior: 50652798!
log: aHeading 
	(aHeading isKindOf: MarsRoverHeadingSouth) ifTrue: [headingLog add: 'South'] .
	(aHeading isKindOf: MarsRoverHeadingNorth) ifTrue: [headingLog add: 'North'] .
	(aHeading isKindOf: MarsRoverHeadingWest) ifTrue: [headingLog add: 'West'] .
	 (aHeading isKindOf: MarsRoverHeadingEast) ifTrue: [headingLog add: 'East'] .! !

!testRun: #LoggerHeadingTest #test05MarsRoverRotatesSouthLogsSouth stamp: 'camila 10/27/2023 19:41:56'!
PASSED!

!testRun: #LoggerHeadingTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/27/2023 19:41:56'!
PASSED!

!testRun: #LoggerHeadingTest #test02MarsRoverRotatesLeftLogsWest stamp: 'camila 10/27/2023 19:41:56'!
PASSED!

!testRun: #LoggerHeadingTest #test03MarsRoverRotatesRightLogsEast stamp: 'camila 10/27/2023 19:41:56'!
PASSED!

!testRun: #LoggerHeadingTest #test04MarsRoverRotatesNorthLogsNorth stamp: 'camila 10/27/2023 19:41:56'!
PASSED!

!testRun: #LoggerHeadingTest #test05MarsRoverRotatesSouthLogsSouth stamp: 'camila 10/27/2023 19:41:56'!
PASSED!

----SNAPSHOT----(27 October 2023 19:42:27) CuisUniversity-5981.image priorSource: 10261637!

!classRenamed: #Logger as: #LoggerPosition stamp: 'camila 10/27/2023 19:45:48'!
Smalltalk renameClassNamed: #Logger as: #LoggerPosition!
!LoggerTest methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 19:45:48' prior: 50651547!
test05MarsRoverRotatesLeftIsntLogged
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	logger := LoggerPosition with: marsRover .
	
	marsRover process: 'l'.
	
	self assert: (logger printLog) equals: (OrderedCollection new).
	self assert: (marsRover isAt: 1@1 heading: self west) 
	! !
!LoggerTest methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 19:45:48' prior: 50651427!
test04MarsRoverMovesBackward
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	logger := LoggerPosition with: marsRover .
	
	marsRover process: 'b'.
	
	self assert: (logger printLog) equals: (OrderedCollection with: 1@0).
	self assert: (marsRover isAt: 1@0 heading: self north) 
	! !
!LoggerTest methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 19:45:48' prior: 50651362!
test02MarsRoverMovesToNorthLogsNewPosition
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	logger := LoggerPosition with: marsRover .
	
	marsRover process: 'f'.
	
	self assert: (logger printLog) equals: (OrderedCollection with: 1@2).
	self assert: (marsRover isAt: 1@2 heading: self north) 
	! !
!LoggerTest methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 19:45:48' prior: 50651844!
test07MarsRoverMovesForwardHeadingEastIsLogged
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	logger := LoggerPosition with: marsRover .
	
	marsRover process: 'rf'.
	
	self assert: (logger printLog) equals: (OrderedCollection with: 2@1 ).
	self assert: (marsRover isAt: 2@1 heading: self east) 
	! !
!LoggerTest methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 19:45:48' prior: 50652222!
test08MarsRoverMovesForwardHeadingWestIsLogged
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	logger := LoggerPosition with: marsRover .
	
	marsRover process: 'lf'.
	
	self assert: (logger printLog) equals: (OrderedCollection with: 0@1 ).
	self assert: (marsRover isAt: 0@1 heading: self west) 
	! !
!LoggerTest methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 19:45:48' prior: 50651819!
test06MarsRoverRotatesRightIsntLogged
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	logger := LoggerPosition with: marsRover .
	
	marsRover process: 'r'.
	
	self assert: (logger printLog) equals: (OrderedCollection new).
	self assert: (marsRover isAt: 1@1 heading: self east) 
	! !
!LoggerTest methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 19:45:48' prior: 50651401!
test03MarsRoverMovesToNorthTwice
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	logger := LoggerPosition with: marsRover .
	
	marsRover process: 'ff'.
	
	self assert: (logger printLog) equals: (OrderedCollection with: 1@2 with: 1@3 ).
	self assert: (marsRover isAt: 1@3 heading: self north) 
	! !
!LoggerTest methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 19:45:48' prior: 50651232!
test01NewMarsRoverWithEmptyLog
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north. 
	logger :=LoggerPosition with: marsRover .
	
	self assert: (logger printLog ) equals: OrderedCollection new.! !

!testRun: #LoggerHeadingTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/27/2023 19:46:01'!
PASSED!

!testRun: #LoggerHeadingTest #test02MarsRoverRotatesLeftLogsWest stamp: 'camila 10/27/2023 19:46:01'!
PASSED!

!testRun: #LoggerHeadingTest #test03MarsRoverRotatesRightLogsEast stamp: 'camila 10/27/2023 19:46:01'!
PASSED!

!testRun: #LoggerHeadingTest #test04MarsRoverRotatesNorthLogsNorth stamp: 'camila 10/27/2023 19:46:01'!
PASSED!

!testRun: #LoggerHeadingTest #test05MarsRoverRotatesSouthLogsSouth stamp: 'camila 10/27/2023 19:46:01'!
PASSED!

!testRun: #LoggerTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/27/2023 19:46:03'!
PASSED!

!testRun: #LoggerTest #test02MarsRoverMovesToNorthLogsNewPosition stamp: 'camila 10/27/2023 19:46:03'!
PASSED!

!testRun: #LoggerTest #test03MarsRoverMovesToNorthTwice stamp: 'camila 10/27/2023 19:46:03'!
PASSED!

!testRun: #LoggerTest #test04MarsRoverMovesBackward stamp: 'camila 10/27/2023 19:46:03'!
PASSED!

!testRun: #LoggerTest #test05MarsRoverRotatesLeftIsntLogged stamp: 'camila 10/27/2023 19:46:03'!
FAILURE!

!testRun: #LoggerTest #test06MarsRoverRotatesRightIsntLogged stamp: 'camila 10/27/2023 19:46:03'!
FAILURE!

!testRun: #LoggerTest #test07MarsRoverMovesForwardHeadingEastIsLogged stamp: 'camila 10/27/2023 19:46:03'!
FAILURE!

!testRun: #LoggerTest #test08MarsRoverMovesForwardHeadingWestIsLogged stamp: 'camila 10/27/2023 19:46:03'!
FAILURE!

!testRun: #LoggerTest #test05MarsRoverRotatesLeftIsntLogged stamp: 'camila 10/27/2023 19:46:14'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 19:48:46' prior: 50652507!
rotateAndLog: aBlock 
	aBlock value.
	logger ifNotNil: [logger logHeading: head]! !

!testRun: #LoggerTest #test05MarsRoverRotatesLeftIsntLogged stamp: 'camila 10/27/2023 19:48:52'!
ERROR!

!testRun: #LoggerTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/27/2023 19:52:38'!
PASSED!

!testRun: #LoggerTest #test02MarsRoverMovesToNorthLogsNewPosition stamp: 'camila 10/27/2023 19:52:38'!
PASSED!

!testRun: #LoggerTest #test03MarsRoverMovesToNorthTwice stamp: 'camila 10/27/2023 19:52:38'!
PASSED!

!testRun: #LoggerTest #test04MarsRoverMovesBackward stamp: 'camila 10/27/2023 19:52:38'!
PASSED!

!testRun: #LoggerTest #test05MarsRoverRotatesLeftIsntLogged stamp: 'camila 10/27/2023 19:52:38'!
ERROR!

!testRun: #LoggerTest #test06MarsRoverRotatesRightIsntLogged stamp: 'camila 10/27/2023 19:52:38'!
ERROR!

!testRun: #LoggerTest #test07MarsRoverMovesForwardHeadingEastIsLogged stamp: 'camila 10/27/2023 19:52:38'!
ERROR!

!testRun: #LoggerTest #test08MarsRoverMovesForwardHeadingWestIsLogged stamp: 'camila 10/27/2023 19:52:38'!
ERROR!

!testRun: #LoggerTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/27/2023 19:52:43'!
PASSED!

!testRun: #LoggerTest #test02MarsRoverMovesToNorthLogsNewPosition stamp: 'camila 10/27/2023 19:52:43'!
PASSED!

!testRun: #LoggerTest #test03MarsRoverMovesToNorthTwice stamp: 'camila 10/27/2023 19:52:43'!
PASSED!

!testRun: #LoggerTest #test04MarsRoverMovesBackward stamp: 'camila 10/27/2023 19:52:43'!
PASSED!

!testRun: #LoggerTest #test05MarsRoverRotatesLeftIsntLogged stamp: 'camila 10/27/2023 19:52:43'!
ERROR!

!testRun: #LoggerTest #test06MarsRoverRotatesRightIsntLogged stamp: 'camila 10/27/2023 19:52:43'!
ERROR!

!testRun: #LoggerTest #test07MarsRoverMovesForwardHeadingEastIsLogged stamp: 'camila 10/27/2023 19:52:43'!
ERROR!

!testRun: #LoggerTest #test08MarsRoverMovesForwardHeadingWestIsLogged stamp: 'camila 10/27/2023 19:52:43'!
ERROR!

!testRun: #LoggerTest #test05MarsRoverRotatesLeftIsntLogged stamp: 'camila 10/27/2023 19:52:46'!
ERROR!

!testRun: #LoggerTest #test05MarsRoverRotatesLeftIsntLogged stamp: 'camila 10/27/2023 19:53:03'!
ERROR!

!testRun: #LoggerTest #test05MarsRoverRotatesLeftIsntLogged stamp: 'camila 10/27/2023 19:53:08'!
ERROR!
!LoggerPosition methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 19:53:50'!
logHeading: aHead 
	self shouldBeImplemented.! !
!LoggerPosition methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 19:53:52' prior: 50653153!
logHeading: aHead 
	! !

!testRun: #LoggerTest #test05MarsRoverRotatesLeftIsntLogged stamp: 'camila 10/27/2023 19:53:53'!
PASSED!

!testRun: #LoggerTest #test06MarsRoverRotatesRightIsntLogged stamp: 'camila 10/27/2023 19:53:54'!
PASSED!

!testRun: #LoggerTest #test07MarsRoverMovesForwardHeadingEastIsLogged stamp: 'camila 10/27/2023 19:53:55'!
PASSED!

!testRun: #LoggerTest #test08MarsRoverMovesForwardHeadingWestIsLogged stamp: 'camila 10/27/2023 19:53:56'!
PASSED!
!LoggerHeadingTest methodsFor: 'testing' stamp: 'camila 10/27/2023 19:55:05' prior: 50652862!
test05MarsRoverRotatesSouthLogsSouth
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north. 
	logger :=LoggerHeading with: marsRover .
	
	marsRover process: 'rf'.
	
	self assert: (logger printLog ) equals: (OrderedCollection with: 'East').
	self assert: (marsRover isAt: 2@1 heading: self east).! !

!testRun: #LoggerHeadingTest #test05MarsRoverRotatesSouthLogsSouth stamp: 'camila 10/27/2023 19:55:08'!
ERROR!

!testRun: #LoggerHeadingTest #test05MarsRoverRotatesSouthLogsSouth stamp: 'camila 10/27/2023 19:55:30'!
ERROR!
!LoggerHeading methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 19:55:39'!
logHeading: aHead 
	self shouldBeImplemented.! !
!LoggerHeading methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 19:55:53' prior: 50653196!
logHeading: aHeading
	headingLog  add: aHeading.! !

!testRun: #LoggerHeadingTest #test05MarsRoverRotatesSouthLogsSouth stamp: 'camila 10/27/2023 19:55:56'!
FAILURE!

!methodRemoval: LoggerHeading #logHeading: stamp: 'camila 10/27/2023 19:56:11'!
logHeading: aHeading
	headingLog  add: aHeading.!
!LoggerHeading methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 19:56:24'!
logHeading: aHeading 
	(aHeading isKindOf: MarsRoverHeadingSouth) ifTrue: [headingLog add: 'South'] .
	(aHeading isKindOf: MarsRoverHeadingNorth) ifTrue: [headingLog add: 'North'] .
	(aHeading isKindOf: MarsRoverHeadingWest) ifTrue: [headingLog add: 'West'] .
	 (aHeading isKindOf: MarsRoverHeadingEast) ifTrue: [headingLog add: 'East'] .! !

!methodRemoval: LoggerHeading #log: stamp: 'camila 10/27/2023 19:56:24'!
log: aHeading 
	(aHeading isKindOf: MarsRoverHeadingSouth) ifTrue: [headingLog add: 'South'] .
	(aHeading isKindOf: MarsRoverHeadingNorth) ifTrue: [headingLog add: 'North'] .
	(aHeading isKindOf: MarsRoverHeadingWest) ifTrue: [headingLog add: 'West'] .
	 (aHeading isKindOf: MarsRoverHeadingEast) ifTrue: [headingLog add: 'East'] .!

!testRun: #LoggerHeadingTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/27/2023 19:56:27'!
PASSED!

!testRun: #LoggerHeadingTest #test02MarsRoverRotatesLeftLogsWest stamp: 'camila 10/27/2023 19:56:27'!
PASSED!

!testRun: #LoggerHeadingTest #test03MarsRoverRotatesRightLogsEast stamp: 'camila 10/27/2023 19:56:27'!
PASSED!

!testRun: #LoggerHeadingTest #test04MarsRoverRotatesNorthLogsNorth stamp: 'camila 10/27/2023 19:56:27'!
PASSED!

!testRun: #LoggerHeadingTest #test05MarsRoverRotatesSouthLogsSouth stamp: 'camila 10/27/2023 19:56:27'!
ERROR!

!testRun: #LoggerHeadingTest #test05MarsRoverRotatesSouthLogsSouth stamp: 'camila 10/27/2023 19:56:27'!
ERROR!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 19:56:46' prior: 50652056!
moveAndLogPositionMovement: aBlock
	aBlock value.
	logger ifNotNil: [logger logPosition: position]. 
	! !

!testRun: #LoggerHeadingTest #test05MarsRoverRotatesSouthLogsSouth stamp: 'camila 10/27/2023 19:56:48'!
ERROR!
!LoggerHeading methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 19:56:53'!
logPosition: aPosition 
	self shouldBeImplemented.! !
!LoggerHeading methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 19:56:55' prior: 50653271!
logPosition: aPosition 
	! !

!testRun: #LoggerHeadingTest #test05MarsRoverRotatesSouthLogsSouth stamp: 'camila 10/27/2023 19:56:56'!
FAILURE!

!testRun: #LoggerHeadingTest #test05MarsRoverRotatesSouthLogsSouth stamp: 'camila 10/27/2023 19:56:58'!
PASSED!

!testRun: #LoggerHeadingTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/27/2023 19:57:01'!
PASSED!

!testRun: #LoggerHeadingTest #test02MarsRoverRotatesLeftLogsWest stamp: 'camila 10/27/2023 19:57:01'!
PASSED!

!testRun: #LoggerHeadingTest #test03MarsRoverRotatesRightLogsEast stamp: 'camila 10/27/2023 19:57:01'!
PASSED!

!testRun: #LoggerHeadingTest #test04MarsRoverRotatesNorthLogsNorth stamp: 'camila 10/27/2023 19:57:01'!
PASSED!

!testRun: #LoggerHeadingTest #test05MarsRoverRotatesSouthLogsSouth stamp: 'camila 10/27/2023 19:57:01'!
PASSED!
!LoggerPosition methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 19:57:20'!
logPosition: aPosition 
	positionLog add: aPosition .! !

!methodRemoval: LoggerPosition #log: stamp: 'camila 10/27/2023 19:57:20'!
log: aPosition 
	positionLog add: aPosition .!

!testRun: #LoggerTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/27/2023 19:57:36'!
PASSED!

!testRun: #LoggerTest #test02MarsRoverMovesToNorthLogsNewPosition stamp: 'camila 10/27/2023 19:57:36'!
PASSED!

!testRun: #LoggerTest #test03MarsRoverMovesToNorthTwice stamp: 'camila 10/27/2023 19:57:36'!
PASSED!

!testRun: #LoggerTest #test04MarsRoverMovesBackward stamp: 'camila 10/27/2023 19:57:36'!
PASSED!

!testRun: #LoggerTest #test05MarsRoverRotatesLeftIsntLogged stamp: 'camila 10/27/2023 19:57:36'!
PASSED!

!testRun: #LoggerTest #test06MarsRoverRotatesRightIsntLogged stamp: 'camila 10/27/2023 19:57:36'!
PASSED!

!testRun: #LoggerTest #test07MarsRoverMovesForwardHeadingEastIsLogged stamp: 'camila 10/27/2023 19:57:36'!
PASSED!

!testRun: #LoggerTest #test08MarsRoverMovesForwardHeadingWestIsLogged stamp: 'camila 10/27/2023 19:57:36'!
PASSED!

!testRun: #LoggerHeadingTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/27/2023 19:57:37'!
PASSED!

!testRun: #LoggerHeadingTest #test02MarsRoverRotatesLeftLogsWest stamp: 'camila 10/27/2023 19:57:37'!
PASSED!

!testRun: #LoggerHeadingTest #test03MarsRoverRotatesRightLogsEast stamp: 'camila 10/27/2023 19:57:37'!
PASSED!

!testRun: #LoggerHeadingTest #test04MarsRoverRotatesNorthLogsNorth stamp: 'camila 10/27/2023 19:57:37'!
PASSED!

!testRun: #LoggerHeadingTest #test05MarsRoverRotatesSouthLogsSouth stamp: 'camila 10/27/2023 19:57:37'!
PASSED!

!classRenamed: #LoggerTest as: #LoggerPositionTest stamp: 'camila 10/27/2023 19:57:49'!
Smalltalk renameClassNamed: #LoggerTest as: #LoggerPositionTest!

TestCase subclass: #LoggerPositionHeadingTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #LoggerPositionHeadingTest category: 'MarsRover-WithHeading' stamp: 'camila 10/27/2023 20:00:02'!
TestCase subclass: #LoggerPositionHeadingTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!LoggerPositionHeadingTest methodsFor: 'no messages' stamp: 'camila 10/27/2023 20:00:11'!
east

	^ MarsRoverHeadingEast ! !
!LoggerPositionHeadingTest methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 20:00:20'!
north

	^ MarsRoverHeadingNorth ! !
!LoggerPositionHeadingTest methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 20:00:30'!
south

	^ MarsRoverHeadingSouth ! !
!LoggerPositionHeadingTest methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 20:00:37'!
west

	^ MarsRoverHeadingWest ! !
!LoggerPositionHeadingTest methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 20:01:15'!
test01MarsRoverNewWithEmptyLog

	! !

!classDefinition: #LoggerHeadingPosition category: 'MarsRover-WithHeading' stamp: 'camila 10/27/2023 20:02:01'!
Object subclass: #LoggerHeadingPosition
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!LoggerPositionHeadingTest methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 20:01:55' prior: 50653396!
test01MarsRoverNewWithEmptyLog

	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north. 
	logger :=LoggerHeadingPosition with: marsRover .
	
	self assert: (logger printLog ) equals: OrderedCollection new.! !

!testRun: #LoggerPositionHeadingTest #test01MarsRoverNewWithEmptyLog stamp: 'camila 10/27/2023 20:02:04'!
ERROR!
!LoggerHeadingPosition class methodsFor: 'instance creation' stamp: 'camila 10/27/2023 20:02:08'!
with: marsRover 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeWith: marsRover ! !
!LoggerHeadingPosition class methodsFor: 'instance creation' stamp: 'camila 10/27/2023 20:02:13' prior: 50653423!
with: marsRover 
	^self new initializeWith: marsRover ! !

!testRun: #LoggerPositionHeadingTest #test01MarsRoverNewWithEmptyLog stamp: 'camila 10/27/2023 20:02:15'!
ERROR!

!classDefinition: #LoggerHeadingPosition category: 'MarsRover-WithHeading' stamp: 'camila 10/27/2023 20:02:22'!
Object subclass: #LoggerHeadingPosition
	instanceVariableNames: 'marsRover_CHANGE_ME'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!LoggerHeadingPosition methodsFor: 'initialization' stamp: 'camila 10/27/2023 20:02:22'!
initializeWith: marsRover 
	self shouldBeImplemented.
	marsRover_CHANGE_ME := marsRover.! !

Object subclass: #LoggerHeadingPosition
	instanceVariableNames: 'marsRover'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!LoggerHeadingPosition class methodsFor: 'instance creation' stamp: 'camila 10/27/2023 20:03:39' prior: 50653432!
with: aMarsRover 
	^self new initializeWith: aMarsRover ! !

Object subclass: #LoggerHeadingPosition
	instanceVariableNames: 'marsRover'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #LoggerHeadingPosition category: 'MarsRover-WithHeading' stamp: 'camila 10/27/2023 20:04:28'!
Object subclass: #LoggerHeadingPosition
	instanceVariableNames: 'marsRover_CHANGE_ME marsRover1'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #LoggerHeadingPosition category: 'MarsRover-WithHeading' stamp: 'camila 10/27/2023 20:04:30'!
Object subclass: #LoggerHeadingPosition
	instanceVariableNames: 'marsRover_CHANGE_ME marsRover1 logHeadingPosition'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!LoggerHeadingPosition methodsFor: 'initialization' stamp: 'camila 10/27/2023 20:04:27' prior: 50653449!
initializeWith: aMarsRover 
	marsRover1 := aMarsRover.
	logHeadingPosition := OrderedCollection new.! !

Object subclass: #LoggerHeadingPosition
	instanceVariableNames: ' marsRover1 logHeadingPosition'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #LoggerHeadingPosition category: 'MarsRover-WithHeading' stamp: 'camila 10/27/2023 20:04:40'!
Object subclass: #LoggerHeadingPosition
	instanceVariableNames: 'marsRover1 logHeadingPosition'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #LoggerHeadingPosition category: 'MarsRover-WithHeading' stamp: 'camila 10/27/2023 20:04:49'!
Object subclass: #LoggerHeadingPosition
	instanceVariableNames: 'marsRover1 logHeadingPosition marsRover'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!LoggerHeadingPosition methodsFor: 'initialization' stamp: 'camila 10/27/2023 20:04:46' prior: 50653490!
initializeWith: aMarsRover 
	marsRover := aMarsRover.
	logHeadingPosition := OrderedCollection new.! !

Object subclass: #LoggerHeadingPosition
	instanceVariableNames: ' logHeadingPosition marsRover'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #LoggerHeadingPosition category: 'MarsRover-WithHeading' stamp: 'camila 10/27/2023 20:04:58'!
Object subclass: #LoggerHeadingPosition
	instanceVariableNames: 'logHeadingPosition marsRover'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classRenamed: #LoggerPositionHeadingTest as: #LoggerHeadingPositionTest stamp: 'camila 10/27/2023 20:05:13'!
Smalltalk renameClassNamed: #LoggerPositionHeadingTest as: #LoggerHeadingPositionTest!

!testRun: #LoggerHeadingPositionTest #test01MarsRoverNewWithEmptyLog stamp: 'camila 10/27/2023 20:05:19'!
ERROR!
!LoggerHeadingPosition methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 20:05:26'!
printLog
	self shouldBeImplemented.! !
!LoggerHeadingPosition methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 20:05:34' prior: 50653552!
printLog
	^logHeadingPosition .! !

!testRun: #LoggerHeadingPositionTest #test01MarsRoverNewWithEmptyLog stamp: 'camila 10/27/2023 20:05:35'!
PASSED!

!testRun: #LoggerHeadingPositionTest #test01MarsRoverNewWithEmptyLog stamp: 'camila 10/27/2023 20:05:35'!
PASSED!
!LoggerHeadingPositionTest methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 20:06:47'!
test02MarsRoverMovesForwardAndRotatesEast

	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north. 
	logger :=LoggerHeadingPosition with: marsRover .
	
	marsRover process: 'fr'.
	
	self assert: (logger printLog ) equals: (OrderedCollection with: '1@2' with: 'East').! !

!testRun: #LoggerHeadingPositionTest #test02MarsRoverMovesForwardAndRotatesEast stamp: 'camila 10/27/2023 20:06:49'!
FAILURE!
!LoggerHeadingPosition methodsFor: 'initialization' stamp: 'camila 10/27/2023 20:08:42' prior: 50653521!
initializeWith: aMarsRover 
	marsRover := aMarsRover.
	aMarsRover addLogger: self.
	logHeadingPosition := OrderedCollection new.! !

!testRun: #LoggerHeadingPositionTest #test01MarsRoverNewWithEmptyLog stamp: 'camila 10/27/2023 20:08:45'!
PASSED!

!testRun: #LoggerHeadingPositionTest #test02MarsRoverMovesForwardAndRotatesEast stamp: 'camila 10/27/2023 20:08:47'!
ERROR!

!testRun: #LoggerHeadingPositionTest #test02MarsRoverMovesForwardAndRotatesEast stamp: 'camila 10/27/2023 20:08:47'!
ERROR!
!LoggerHeadingPosition methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 20:08:55'!
logPosition: aPosition 
	self shouldBeImplemented.! !
!LoggerHeadingPosition methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 20:09:07' prior: 50653605!
logPosition: aPosition 
	logHeadingPosition add: aPosition .! !

!testRun: #LoggerHeadingPositionTest #test02MarsRoverMovesForwardAndRotatesEast stamp: 'camila 10/27/2023 20:09:08'!
ERROR!
!LoggerHeadingPosition methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 20:09:18'!
logHeading: aHead 
	self shouldBeImplemented.! !
!LoggerHeadingPosition methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 20:09:29' prior: 50653620!
logHeading: aHead 
	logHeadingPosition add: aHead.! !

!testRun: #LoggerHeadingPositionTest #test02MarsRoverMovesForwardAndRotatesEast stamp: 'camila 10/27/2023 20:09:30'!
FAILURE!
!LoggerHeading methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 20:10:38' prior: 50653213!
logHeading: aHeading 
	headingLog add: aHeading headingName.
	"(aHeading isKindOf: MarsRoverHeadingSouth) ifTrue: [headingLog add: 'South'] .
	(aHeading isKindOf: MarsRoverHeadingNorth) ifTrue: [headingLog add: 'North'] .
	(aHeading isKindOf: MarsRoverHeadingWest) ifTrue: [headingLog add: 'West'] .
	(aHeading isKindOf: MarsRoverHeadingEast) ifTrue: [headingLog add: 'East'] ."! !
!LoggerHeadingPosition methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 20:11:30' prior: 50653625!
logHeading: aHeading
	(aHeading isKindOf: MarsRoverHeadingSouth) ifTrue: [	 logHeadingPosition add: 'South'] .
	(aHeading isKindOf: MarsRoverHeadingNorth) ifTrue: [logHeadingPosition add: 'North'] .
	(aHeading isKindOf: MarsRoverHeadingWest) ifTrue: [logHeadingPosition add: 'West'] .
	(aHeading isKindOf: MarsRoverHeadingEast) ifTrue: [logHeadingPosition add: 'East'] .! !

!testRun: #LoggerHeadingPositionTest #test01MarsRoverNewWithEmptyLog stamp: 'camila 10/27/2023 20:11:33'!
PASSED!

!testRun: #LoggerHeadingPositionTest #test02MarsRoverMovesForwardAndRotatesEast stamp: 'camila 10/27/2023 20:11:33'!
FAILURE!

!testRun: #LoggerHeadingPositionTest #test02MarsRoverMovesForwardAndRotatesEast stamp: 'camila 10/27/2023 20:11:33'!
FAILURE!
!LoggerHeadingPositionTest methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 20:11:45' prior: 50653569!
test02MarsRoverMovesForwardAndRotatesEast

	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north. 
	logger :=LoggerHeadingPosition with: marsRover .
	
	marsRover process: 'fr'.
	
	self assert: (logger printLog ) equals: (OrderedCollection with: 1@2 with: 'East').! !

!testRun: #LoggerHeadingPositionTest #test02MarsRoverMovesForwardAndRotatesEast stamp: 'camila 10/27/2023 20:11:45'!
PASSED!

!testRun: #LoggerHeadingPositionTest #test01MarsRoverNewWithEmptyLog stamp: 'camila 10/27/2023 20:11:48'!
PASSED!

!testRun: #LoggerHeadingPositionTest #test02MarsRoverMovesForwardAndRotatesEast stamp: 'camila 10/27/2023 20:11:48'!
PASSED!

!testRun: #LoggerPositionTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/27/2023 20:11:50'!
PASSED!

!testRun: #LoggerPositionTest #test02MarsRoverMovesToNorthLogsNewPosition stamp: 'camila 10/27/2023 20:11:50'!
PASSED!

!testRun: #LoggerPositionTest #test03MarsRoverMovesToNorthTwice stamp: 'camila 10/27/2023 20:11:50'!
PASSED!

!testRun: #LoggerPositionTest #test04MarsRoverMovesBackward stamp: 'camila 10/27/2023 20:11:50'!
PASSED!

!testRun: #LoggerPositionTest #test05MarsRoverRotatesLeftIsntLogged stamp: 'camila 10/27/2023 20:11:50'!
PASSED!

!testRun: #LoggerPositionTest #test06MarsRoverRotatesRightIsntLogged stamp: 'camila 10/27/2023 20:11:50'!
PASSED!

!testRun: #LoggerPositionTest #test07MarsRoverMovesForwardHeadingEastIsLogged stamp: 'camila 10/27/2023 20:11:50'!
PASSED!

!testRun: #LoggerPositionTest #test08MarsRoverMovesForwardHeadingWestIsLogged stamp: 'camila 10/27/2023 20:11:50'!
PASSED!

!testRun: #LoggerHeadingTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/27/2023 20:11:53'!
PASSED!

!testRun: #LoggerHeadingTest #test02MarsRoverRotatesLeftLogsWest stamp: 'camila 10/27/2023 20:11:53'!
ERROR!

!testRun: #LoggerHeadingTest #test03MarsRoverRotatesRightLogsEast stamp: 'camila 10/27/2023 20:11:53'!
ERROR!

!testRun: #LoggerHeadingTest #test04MarsRoverRotatesNorthLogsNorth stamp: 'camila 10/27/2023 20:11:53'!
ERROR!

!testRun: #LoggerHeadingTest #test05MarsRoverRotatesSouthLogsSouth stamp: 'camila 10/27/2023 20:11:53'!
ERROR!

!testRun: #LoggerHeadingTest #test02MarsRoverRotatesLeftLogsWest stamp: 'camila 10/27/2023 20:12:03'!
ERROR!
!MarsRoverHeading methodsFor: 'testing' stamp: 'camila 10/27/2023 20:12:33'!
headingName
	self subclassResponsibility .! !
!MarsRoverHeadingEast methodsFor: 'heading' stamp: 'camila 10/27/2023 20:12:45' overrides: 50653750!
headingName
	self subclassResponsibility .! !
!MarsRoverHeadingNorth methodsFor: 'heading' stamp: 'camila 10/27/2023 20:12:45' overrides: 50653750!
headingName
	self subclassResponsibility .! !
!MarsRoverHeadingSouth methodsFor: 'heading' stamp: 'camila 10/27/2023 20:12:45' overrides: 50653750!
headingName
	self subclassResponsibility .! !
!MarsRoverHeadingWest methodsFor: 'heading' stamp: 'camila 10/27/2023 20:12:45' overrides: 50653750!
headingName
	self subclassResponsibility .! !
!MarsRoverHeading methodsFor: 'heading' stamp: 'camila 10/27/2023 20:12:45' prior: 50653750!
headingName

	self subclassResponsibility! !
!MarsRoverHeadingEast methodsFor: 'heading' stamp: 'camila 10/27/2023 20:12:52' prior: 50653755 overrides: 50653775!
headingName
	^'East'.! !
!MarsRoverHeadingNorth methodsFor: 'heading' stamp: 'camila 10/27/2023 20:13:01' prior: 50653760 overrides: 50653775!
headingName
	^ 'North'.! !
!MarsRoverHeadingSouth methodsFor: 'heading' stamp: 'camila 10/27/2023 20:13:10' prior: 50653765 overrides: 50653775!
headingName
	^ 'South'.! !
!MarsRoverHeadingWest methodsFor: 'heading' stamp: 'camila 10/27/2023 20:13:21' prior: 50653770 overrides: 50653775!
headingName
	^'West'.! !

!testRun: #LoggerPositionTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/27/2023 20:13:24'!
PASSED!

!testRun: #LoggerPositionTest #test02MarsRoverMovesToNorthLogsNewPosition stamp: 'camila 10/27/2023 20:13:24'!
PASSED!

!testRun: #LoggerPositionTest #test03MarsRoverMovesToNorthTwice stamp: 'camila 10/27/2023 20:13:24'!
PASSED!

!testRun: #LoggerPositionTest #test04MarsRoverMovesBackward stamp: 'camila 10/27/2023 20:13:24'!
PASSED!

!testRun: #LoggerPositionTest #test05MarsRoverRotatesLeftIsntLogged stamp: 'camila 10/27/2023 20:13:24'!
PASSED!

!testRun: #LoggerPositionTest #test06MarsRoverRotatesRightIsntLogged stamp: 'camila 10/27/2023 20:13:24'!
PASSED!

!testRun: #LoggerPositionTest #test07MarsRoverMovesForwardHeadingEastIsLogged stamp: 'camila 10/27/2023 20:13:24'!
PASSED!

!testRun: #LoggerPositionTest #test08MarsRoverMovesForwardHeadingWestIsLogged stamp: 'camila 10/27/2023 20:13:24'!
PASSED!

!testRun: #LoggerHeadingTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/27/2023 20:13:26'!
PASSED!

!testRun: #LoggerHeadingTest #test02MarsRoverRotatesLeftLogsWest stamp: 'camila 10/27/2023 20:13:26'!
PASSED!

!testRun: #LoggerHeadingTest #test03MarsRoverRotatesRightLogsEast stamp: 'camila 10/27/2023 20:13:26'!
PASSED!

!testRun: #LoggerHeadingTest #test04MarsRoverRotatesNorthLogsNorth stamp: 'camila 10/27/2023 20:13:26'!
PASSED!

!testRun: #LoggerHeadingTest #test05MarsRoverRotatesSouthLogsSouth stamp: 'camila 10/27/2023 20:13:26'!
PASSED!

!testRun: #LoggerHeadingPositionTest #test01MarsRoverNewWithEmptyLog stamp: 'camila 10/27/2023 20:13:28'!
PASSED!

!testRun: #LoggerHeadingPositionTest #test02MarsRoverMovesForwardAndRotatesEast stamp: 'camila 10/27/2023 20:13:28'!
PASSED!
!LoggerHeading methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 20:13:40' prior: 50653634!
logHeading: aHeading 
	headingLog add: aHeading headingName.
	! !
!LoggerHeadingPosition methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 20:13:52' prior: 50653650!
logHeading: aHeading
	logHeadingPosition add: aHeading headingName.! !

!testRun: #LoggerHeadingPositionTest #test01MarsRoverNewWithEmptyLog stamp: 'camila 10/27/2023 20:13:54'!
PASSED!

!testRun: #LoggerHeadingPositionTest #test02MarsRoverMovesForwardAndRotatesEast stamp: 'camila 10/27/2023 20:13:54'!
PASSED!

!testRun: #LoggerHeadingTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/27/2023 20:13:56'!
PASSED!

!testRun: #LoggerHeadingTest #test02MarsRoverRotatesLeftLogsWest stamp: 'camila 10/27/2023 20:13:56'!
PASSED!

!testRun: #LoggerHeadingTest #test03MarsRoverRotatesRightLogsEast stamp: 'camila 10/27/2023 20:13:56'!
PASSED!

!testRun: #LoggerHeadingTest #test04MarsRoverRotatesNorthLogsNorth stamp: 'camila 10/27/2023 20:13:56'!
PASSED!

!testRun: #LoggerHeadingTest #test05MarsRoverRotatesSouthLogsSouth stamp: 'camila 10/27/2023 20:13:56'!
PASSED!

!testRun: #LoggerPositionTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/27/2023 20:13:58'!
PASSED!

!testRun: #LoggerPositionTest #test02MarsRoverMovesToNorthLogsNewPosition stamp: 'camila 10/27/2023 20:13:58'!
PASSED!

!testRun: #LoggerPositionTest #test03MarsRoverMovesToNorthTwice stamp: 'camila 10/27/2023 20:13:58'!
PASSED!

!testRun: #LoggerPositionTest #test04MarsRoverMovesBackward stamp: 'camila 10/27/2023 20:13:58'!
PASSED!

!testRun: #LoggerPositionTest #test05MarsRoverRotatesLeftIsntLogged stamp: 'camila 10/27/2023 20:13:58'!
PASSED!

!testRun: #LoggerPositionTest #test06MarsRoverRotatesRightIsntLogged stamp: 'camila 10/27/2023 20:13:58'!
PASSED!

!testRun: #LoggerPositionTest #test07MarsRoverMovesForwardHeadingEastIsLogged stamp: 'camila 10/27/2023 20:13:58'!
PASSED!

!testRun: #LoggerPositionTest #test08MarsRoverMovesForwardHeadingWestIsLogged stamp: 'camila 10/27/2023 20:13:58'!
PASSED!

----SNAPSHOT----(27 October 2023 20:14:01) CuisUniversity-5981.image priorSource: 10280619!

!methodRemoval: LoggerPosition #printLog stamp: 'camila 10/27/2023 20:19:52'!
printLog
	^positionLog .!

!testRun: #LoggerPositionTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/27/2023 20:22:31'!
ERROR!

!testRun: #LoggerPositionTest #test02MarsRoverMovesToNorthLogsNewPosition stamp: 'camila 10/27/2023 20:22:31'!
ERROR!

!testRun: #LoggerPositionTest #test03MarsRoverMovesToNorthTwice stamp: 'camila 10/27/2023 20:22:31'!
ERROR!

!testRun: #LoggerPositionTest #test04MarsRoverMovesBackward stamp: 'camila 10/27/2023 20:22:31'!
ERROR!

!testRun: #LoggerPositionTest #test05MarsRoverRotatesLeftIsntLogged stamp: 'camila 10/27/2023 20:22:31'!
ERROR!

!testRun: #LoggerPositionTest #test06MarsRoverRotatesRightIsntLogged stamp: 'camila 10/27/2023 20:22:31'!
ERROR!

!testRun: #LoggerPositionTest #test07MarsRoverMovesForwardHeadingEastIsLogged stamp: 'camila 10/27/2023 20:22:31'!
ERROR!

!testRun: #LoggerPositionTest #test08MarsRoverMovesForwardHeadingWestIsLogged stamp: 'camila 10/27/2023 20:22:31'!
ERROR!
!LoggerPosition methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 20:22:46'!
printLog
	^positionLog .! !

!testRun: #LoggerPositionTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/27/2023 20:22:49'!
PASSED!

!testRun: #LoggerPositionTest #test02MarsRoverMovesToNorthLogsNewPosition stamp: 'camila 10/27/2023 20:22:49'!
PASSED!

!testRun: #LoggerPositionTest #test03MarsRoverMovesToNorthTwice stamp: 'camila 10/27/2023 20:22:49'!
PASSED!

!testRun: #LoggerPositionTest #test04MarsRoverMovesBackward stamp: 'camila 10/27/2023 20:22:49'!
PASSED!

!testRun: #LoggerPositionTest #test05MarsRoverRotatesLeftIsntLogged stamp: 'camila 10/27/2023 20:22:49'!
PASSED!

!testRun: #LoggerPositionTest #test06MarsRoverRotatesRightIsntLogged stamp: 'camila 10/27/2023 20:22:49'!
PASSED!

!testRun: #LoggerPositionTest #test07MarsRoverMovesForwardHeadingEastIsLogged stamp: 'camila 10/27/2023 20:22:49'!
PASSED!

!testRun: #LoggerPositionTest #test08MarsRoverMovesForwardHeadingWestIsLogged stamp: 'camila 10/27/2023 20:22:49'!
PASSED!

Object subclass: #Logger
	instanceVariableNames: ' '
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #Logger category: 'MarsRover-WithHeading' stamp: 'camila 10/27/2023 20:23:06'!
Object subclass: #Logger
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

Logger subclass: #LoggerHeading
	instanceVariableNames: 'marsRover headingLog'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #LoggerHeading category: 'MarsRover-WithHeading' stamp: 'camila 10/27/2023 20:23:10'!
Logger subclass: #LoggerHeading
	instanceVariableNames: 'marsRover headingLog'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

Logger subclass: #LoggerHeadingPosition
	instanceVariableNames: 'logHeadingPosition marsRover'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #LoggerHeadingPosition category: 'MarsRover-WithHeading' stamp: 'camila 10/27/2023 20:23:14'!
Logger subclass: #LoggerHeadingPosition
	instanceVariableNames: 'logHeadingPosition marsRover'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

Logger subclass: #LoggerPosition
	instanceVariableNames: 'marsRover positionLog'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #LoggerPosition category: 'MarsRover-WithHeading' stamp: 'camila 10/27/2023 20:23:18'!
Logger subclass: #LoggerPosition
	instanceVariableNames: 'marsRover positionLog'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

----SNAPSHOT----(27 October 2023 20:23:36) CuisUniversity-5981.image priorSource: 10312572!
!Logger methodsFor: 'initialization' stamp: 'camila 10/27/2023 20:24:08'!
initializeWith: aMarsRover

	self subclassResponsibility! !
!Logger methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 20:24:14'!
logHeading: aHeading

	self subclassResponsibility! !
!Logger methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 20:24:17'!
logPosition: aPosition

	self subclassResponsibility! !
!Logger methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 20:24:20'!
printLog

	self subclassResponsibility! !

----SNAPSHOT----(27 October 2023 20:24:23) CuisUniversity-5981.image priorSource: 10316437!

----SNAPSHOT----(27 October 2023 20:24:37) CuisUniversity-5981.image priorSource: 10317129!

----STARTUP---- (28 October 2023 01:06:21) as /home/camila/Desktop/CUIS MARS ROVER 2/linux64/CuisUniversity-5981.image!


!classDefinition: #LoggerHeading category: 'MarsRover-WithHeading' stamp: 'camila 10/28/2023 01:17:30'!
Logger subclass: #LoggerHeading
	instanceVariableNames: 'headingLog'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #LoggerHeadingPosition category: 'MarsRover-WithHeading' stamp: 'camila 10/28/2023 01:17:30'!
Logger subclass: #LoggerHeadingPosition
	instanceVariableNames: 'logHeadingPosition'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #LoggerPosition category: 'MarsRover-WithHeading' stamp: 'camila 10/28/2023 01:17:30'!
Logger subclass: #LoggerPosition
	instanceVariableNames: 'positionLog'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #Logger category: 'MarsRover-WithHeading' stamp: 'camila 10/28/2023 01:17:31'!
Object subclass: #Logger
	instanceVariableNames: 'marsRover'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!testRun: #LoggerHeadingPositionTest #test01MarsRoverNewWithEmptyLog stamp: 'camila 10/28/2023 01:17:38'!
PASSED!

!testRun: #LoggerHeadingPositionTest #test02MarsRoverMovesForwardAndRotatesEast stamp: 'camila 10/28/2023 01:17:38'!
PASSED!

!testRun: #LoggerHeadingTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/28/2023 01:17:41'!
PASSED!

!testRun: #LoggerHeadingTest #test02MarsRoverRotatesLeftLogsWest stamp: 'camila 10/28/2023 01:17:41'!
PASSED!

!testRun: #LoggerHeadingTest #test03MarsRoverRotatesRightLogsEast stamp: 'camila 10/28/2023 01:17:41'!
PASSED!

!testRun: #LoggerHeadingTest #test04MarsRoverRotatesNorthLogsNorth stamp: 'camila 10/28/2023 01:17:41'!
PASSED!

!testRun: #LoggerHeadingTest #test05MarsRoverRotatesSouthLogsSouth stamp: 'camila 10/28/2023 01:17:41'!
PASSED!

!testRun: #LoggerPositionTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/28/2023 01:17:46'!
PASSED!

!testRun: #LoggerPositionTest #test02MarsRoverMovesToNorthLogsNewPosition stamp: 'camila 10/28/2023 01:17:46'!
PASSED!

!testRun: #LoggerPositionTest #test03MarsRoverMovesToNorthTwice stamp: 'camila 10/28/2023 01:17:46'!
PASSED!

!testRun: #LoggerPositionTest #test04MarsRoverMovesBackward stamp: 'camila 10/28/2023 01:17:46'!
PASSED!

!testRun: #LoggerPositionTest #test05MarsRoverRotatesLeftIsntLogged stamp: 'camila 10/28/2023 01:17:46'!
PASSED!

!testRun: #LoggerPositionTest #test06MarsRoverRotatesRightIsntLogged stamp: 'camila 10/28/2023 01:17:46'!
PASSED!

!testRun: #LoggerPositionTest #test07MarsRoverMovesForwardHeadingEastIsLogged stamp: 'camila 10/28/2023 01:17:46'!
PASSED!

!testRun: #LoggerPositionTest #test08MarsRoverMovesForwardHeadingWestIsLogged stamp: 'camila 10/28/2023 01:17:46'!
PASSED!

!classDefinition: #Observer category: 'MarsRover-WithHeading' stamp: 'camila 10/28/2023 02:19:08'!
Object subclass: #Observer
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MarsRover methodsFor: 'initialization' stamp: 'camila 10/28/2023 02:18:59' prior: 50652123!
initializeAt: aPosition heading: aHeadingType

	position := Observer with: aPosition.
	head := aHeadingType for: self .! !

!testRun: #LoggerPositionTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/28/2023 02:19:20'!
ERROR!

!testRun: #LoggerPositionTest #test02MarsRoverMovesToNorthLogsNewPosition stamp: 'camila 10/28/2023 02:19:20'!
ERROR!

!testRun: #LoggerPositionTest #test03MarsRoverMovesToNorthTwice stamp: 'camila 10/28/2023 02:19:20'!
ERROR!

!testRun: #LoggerPositionTest #test04MarsRoverMovesBackward stamp: 'camila 10/28/2023 02:19:20'!
ERROR!

!testRun: #LoggerPositionTest #test05MarsRoverRotatesLeftIsntLogged stamp: 'camila 10/28/2023 02:19:20'!
ERROR!

!testRun: #LoggerPositionTest #test06MarsRoverRotatesRightIsntLogged stamp: 'camila 10/28/2023 02:19:20'!
ERROR!

!testRun: #LoggerPositionTest #test07MarsRoverMovesForwardHeadingEastIsLogged stamp: 'camila 10/28/2023 02:19:20'!
ERROR!

!testRun: #LoggerPositionTest #test08MarsRoverMovesForwardHeadingWestIsLogged stamp: 'camila 10/28/2023 02:19:20'!
ERROR!

!testRun: #LoggerPositionTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/28/2023 02:19:22'!
ERROR!
!Observer class methodsFor: 'instance creation' stamp: 'camila 10/28/2023 02:19:32'!
with: aPosition 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeWith: aPosition ! !
!Observer class methodsFor: 'instance creation' stamp: 'camila 10/28/2023 02:19:38' prior: 50654204!
with: aPosition 
	^self new initializeWith: aPosition ! !

!testRun: #LoggerPositionTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/28/2023 02:19:40'!
ERROR!

!classDefinition: #Observer category: 'MarsRover-WithHeading' stamp: 'camila 10/28/2023 02:19:46'!
Object subclass: #Observer
	instanceVariableNames: 'value position'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!Observer methodsFor: 'initialization' stamp: 'camila 10/28/2023 02:19:46'!
initializeWith: aPosition 
	self shouldBeImplemented.
	position := aPosition.! !
!Observer methodsFor: 'initialization' stamp: 'camila 10/28/2023 02:20:03' prior: 50654228!
initializeWith: aPosition 
	
	position := aPosition.! !

!testRun: #LoggerPositionTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/28/2023 02:20:07'!
PASSED!

Object subclass: #Observer
	instanceVariableNames: 'marsRover value position'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #Observer category: 'MarsRover-WithHeading' stamp: 'camila 10/28/2023 02:21:00'!
Object subclass: #Observer
	instanceVariableNames: 'marsRover value position'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!Observer class methodsFor: 'instance creation' stamp: 'camila 10/28/2023 02:22:05'!
withMarsRover: aMarsRover observing: aPosition 
	^self new initializeWithMarsRover: aMarsRover observing: aPosition. ! !

!methodRemoval: Observer class #with: stamp: 'camila 10/28/2023 02:22:15'!
with: aPosition 
	^self new initializeWith: aPosition !
!MarsRover methodsFor: 'initialization' stamp: 'camila 10/28/2023 02:22:48' prior: 50654165!
initializeAt: aPosition heading: aHeadingType

	position := Observer withMarsRover: self observing: aPosition.
	head := aHeadingType for: self .! !

!testRun: #LoggerHeadingTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/28/2023 02:22:51'!
ERROR!

!testRun: #LoggerHeadingTest #test02MarsRoverRotatesLeftLogsWest stamp: 'camila 10/28/2023 02:22:51'!
ERROR!

!testRun: #LoggerHeadingTest #test03MarsRoverRotatesRightLogsEast stamp: 'camila 10/28/2023 02:22:51'!
ERROR!

!testRun: #LoggerHeadingTest #test04MarsRoverRotatesNorthLogsNorth stamp: 'camila 10/28/2023 02:22:51'!
ERROR!

!testRun: #LoggerHeadingTest #test05MarsRoverRotatesSouthLogsSouth stamp: 'camila 10/28/2023 02:22:51'!
ERROR!

!testRun: #LoggerHeadingTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/28/2023 02:22:53'!
ERROR!
!Observer methodsFor: 'initialization' stamp: 'camila 10/28/2023 02:22:58'!
initializeWithMarsRover: aMarsRover observing: aPosition 
	self shouldBeImplemented.
	marsRover := aMarsRover.
	position := aPosition.! !
!Observer methodsFor: 'initialization' stamp: 'camila 10/28/2023 02:23:04' prior: 50654294!
initializeWithMarsRover: aMarsRover observing: aPosition 
	marsRover := aMarsRover.
	position := aPosition.! !

!testRun: #LoggerHeadingTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/28/2023 02:23:05'!
PASSED!

!testRun: #LoggerHeadingTest #test02MarsRoverRotatesLeftLogsWest stamp: 'camila 10/28/2023 02:23:15'!
FAILURE!

!testRun: #LoggerPositionTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/28/2023 02:23:23'!
PASSED!

!testRun: #LoggerPositionTest #test02MarsRoverMovesToNorthLogsNewPosition stamp: 'camila 10/28/2023 02:23:23'!
ERROR!

!testRun: #LoggerPositionTest #test03MarsRoverMovesToNorthTwice stamp: 'camila 10/28/2023 02:23:23'!
ERROR!

!testRun: #LoggerPositionTest #test04MarsRoverMovesBackward stamp: 'camila 10/28/2023 02:23:23'!
ERROR!

!testRun: #LoggerPositionTest #test05MarsRoverRotatesLeftIsntLogged stamp: 'camila 10/28/2023 02:23:23'!
FAILURE!

!testRun: #LoggerPositionTest #test06MarsRoverRotatesRightIsntLogged stamp: 'camila 10/28/2023 02:23:23'!
FAILURE!

!testRun: #LoggerPositionTest #test07MarsRoverMovesForwardHeadingEastIsLogged stamp: 'camila 10/28/2023 02:23:23'!
ERROR!

!testRun: #LoggerPositionTest #test08MarsRoverMovesForwardHeadingWestIsLogged stamp: 'camila 10/28/2023 02:23:23'!
ERROR!

!testRun: #LoggerPositionTest #test02MarsRoverMovesToNorthLogsNewPosition stamp: 'camila 10/28/2023 02:23:25'!
ERROR!
!MarsRover methodsFor: 'moving' stamp: 'camila 10/28/2023 02:24:26' prior: 50651614!
moveNorth
	position changeStatusWith: [ position := position + (0@1)].
	"self moveAndLogPositionMovement: [ position := position + (0@1)]."
	"position := position + (0@1)"! !

!testRun: #LoggerPositionTest #test02MarsRoverMovesToNorthLogsNewPosition stamp: 'camila 10/28/2023 02:24:29'!
ERROR!
!Observer methodsFor: 'as yet unclassified' stamp: 'camila 10/28/2023 02:24:34'!
changeStatusWith: aRenameMe1 
	self shouldBeImplemented.! !
!Observer methodsFor: 'as yet unclassified' stamp: 'camila 10/28/2023 02:25:34' prior: 50654360!
changeStatusWith: aBlock 
	aBlock value: value.
	! !

----STARTUP---- (29 October 2023 18:52:44) as /home/camila/Desktop/CUIS MARS ROVER 2/linux64/CuisUniversity-5981.image!


!testRun: #LoggerHeadingPositionTest #test01MarsRoverNewWithEmptyLog stamp: 'camila 10/29/2023 18:52:48'!
PASSED!

!testRun: #LoggerHeadingPositionTest #test02MarsRoverMovesForwardAndRotatesEast stamp: 'camila 10/29/2023 18:52:48'!
PASSED!

!testRun: #LoggerHeadingTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/29/2023 18:52:50'!
PASSED!

!testRun: #LoggerHeadingTest #test02MarsRoverRotatesLeftLogsWest stamp: 'camila 10/29/2023 18:52:50'!
PASSED!

!testRun: #LoggerHeadingTest #test03MarsRoverRotatesRightLogsEast stamp: 'camila 10/29/2023 18:52:50'!
PASSED!

!testRun: #LoggerHeadingTest #test04MarsRoverRotatesNorthLogsNorth stamp: 'camila 10/29/2023 18:52:50'!
PASSED!

!testRun: #LoggerHeadingTest #test05MarsRoverRotatesSouthLogsSouth stamp: 'camila 10/29/2023 18:52:50'!
PASSED!

!testRun: #LoggerPositionTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/29/2023 18:52:51'!
PASSED!

!testRun: #LoggerPositionTest #test02MarsRoverMovesToNorthLogsNewPosition stamp: 'camila 10/29/2023 18:52:51'!
PASSED!

!testRun: #LoggerPositionTest #test03MarsRoverMovesToNorthTwice stamp: 'camila 10/29/2023 18:52:51'!
PASSED!

!testRun: #LoggerPositionTest #test04MarsRoverMovesBackward stamp: 'camila 10/29/2023 18:52:51'!
PASSED!

!testRun: #LoggerPositionTest #test05MarsRoverRotatesLeftIsntLogged stamp: 'camila 10/29/2023 18:52:51'!
PASSED!

!testRun: #LoggerPositionTest #test06MarsRoverRotatesRightIsntLogged stamp: 'camila 10/29/2023 18:52:51'!
PASSED!

!testRun: #LoggerPositionTest #test07MarsRoverMovesForwardHeadingEastIsLogged stamp: 'camila 10/29/2023 18:52:51'!
PASSED!

!testRun: #LoggerPositionTest #test08MarsRoverMovesForwardHeadingWestIsLogged stamp: 'camila 10/29/2023 18:52:51'!
PASSED!
!MarsRover methodsFor: 'moving' stamp: 'camila 10/29/2023 19:12:09' prior: 50651808!
moveEast
	position updateAndLog: [position := position + (1@0)].
	"self moveAndLogPositionMovement: [position := position + (1@0)]."
	"position := position + (1@0)"! !

!testRun: #LoggerPositionTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/29/2023 19:12:24'!
PASSED!

!testRun: #LoggerPositionTest #test02MarsRoverMovesToNorthLogsNewPosition stamp: 'camila 10/29/2023 19:12:24'!
PASSED!

!testRun: #LoggerPositionTest #test03MarsRoverMovesToNorthTwice stamp: 'camila 10/29/2023 19:12:24'!
PASSED!

!testRun: #LoggerPositionTest #test04MarsRoverMovesBackward stamp: 'camila 10/29/2023 19:12:24'!
PASSED!

!testRun: #LoggerPositionTest #test05MarsRoverRotatesLeftIsntLogged stamp: 'camila 10/29/2023 19:12:24'!
PASSED!

!testRun: #LoggerPositionTest #test06MarsRoverRotatesRightIsntLogged stamp: 'camila 10/29/2023 19:12:24'!
PASSED!

!testRun: #LoggerPositionTest #test07MarsRoverMovesForwardHeadingEastIsLogged stamp: 'camila 10/29/2023 19:12:24'!
ERROR!

!testRun: #LoggerPositionTest #test08MarsRoverMovesForwardHeadingWestIsLogged stamp: 'camila 10/29/2023 19:12:24'!
PASSED!

!testRun: #LoggerPositionTest #test07MarsRoverMovesForwardHeadingEastIsLogged stamp: 'camila 10/29/2023 19:12:24'!
ERROR!

!testRun: #LoggerPositionTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/29/2023 19:12:45'!
PASSED!

!testRun: #LoggerPositionTest #test02MarsRoverMovesToNorthLogsNewPosition stamp: 'camila 10/29/2023 19:12:47'!
PASSED!

!testRun: #LoggerPositionTest #test07MarsRoverMovesForwardHeadingEastIsLogged stamp: 'camila 10/29/2023 19:12:54'!
ERROR!

!testRun: #LoggerPositionTest #test07MarsRoverMovesForwardHeadingEastIsLogged stamp: 'camila 10/29/2023 19:12:54'!
ERROR!

!classDefinition: #XXX category: 'MarsRover-WithHeading' stamp: 'camila 10/29/2023 19:14:40'!
Object subclass: #XXX
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MarsRover methodsFor: 'initialization' stamp: 'camila 10/29/2023 19:14:22' prior: 50652123!
initializeAt: aPosition heading: aHeadingType

	position := XXX with: aPosition.
	head := aHeadingType for: self .! !

!testRun: #LoggerPositionTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/29/2023 19:14:42'!
ERROR!
!XXX class methodsFor: 'instance creation' stamp: 'camila 10/29/2023 19:14:49'!
with: aPosition 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeWith: aPosition ! !
!XXX class methodsFor: 'instance creation' stamp: 'camila 10/29/2023 19:14:53' prior: 50654198!
with: aPosition 
	^self new initializeWith: aPosition ! !

!testRun: #LoggerPositionTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/29/2023 19:14:54'!
ERROR!

!classDefinition: #XXX category: 'MarsRover-WithHeading' stamp: 'camila 10/29/2023 19:14:57'!
Object subclass: #XXX
	instanceVariableNames: 'position'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!XXX methodsFor: 'initialization' stamp: 'camila 10/29/2023 19:14:57'!
initializeWith: aPosition 
	self shouldBeImplemented.
	position := aPosition.! !

!classDefinition: #XXX category: 'MarsRover-WithHeading' stamp: 'camila 10/29/2023 19:15:16'!
Object subclass: #XXX
	instanceVariableNames: 'position objectValue'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!XXX methodsFor: 'initialization' stamp: 'camila 10/29/2023 19:15:15' prior: 50654221!
initializeWith: aPosition 
	objectValue := aPosition.! !

!testRun: #LoggerPositionTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/29/2023 19:15:18'!
PASSED!

!testRun: #LoggerPositionTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/29/2023 19:15:20'!
PASSED!

!testRun: #LoggerPositionTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/29/2023 19:15:28'!
PASSED!

!testRun: #LoggerPositionTest #test02MarsRoverMovesToNorthLogsNewPosition stamp: 'camila 10/29/2023 19:15:33'!
ERROR!

!testRun: #LoggerPositionTest #test02MarsRoverMovesToNorthLogsNewPosition stamp: 'camila 10/29/2023 19:15:33'!
ERROR!
!MarsRover methodsFor: 'moving' stamp: 'camila 10/29/2023 19:16:24' prior: 50651614!
moveNorth
	position updateAndLog: [ position := position + (0@1)].
	"position := position + (0@1)"! !

!testRun: #LoggerPositionTest #test02MarsRoverMovesToNorthLogsNewPosition stamp: 'camila 10/29/2023 19:16:25'!
ERROR!
!XXX methodsFor: 'as yet unclassified' stamp: 'camila 10/29/2023 19:16:28'!
updateAndLog: aRenameMe1 
	self shouldBeImplemented.! !
!XXX methodsFor: 'as yet unclassified' stamp: 'camila 10/29/2023 19:17:13' prior: 50654266!
updateAndLog: aBlock 
	self shouldBeImplemented.! !
!XXX methodsFor: 'as yet unclassified' stamp: 'camila 10/29/2023 19:17:33' prior: 50654271!
updateAndLog: aBlock 
	aBlock value.! !

!testRun: #LoggerPositionTest #test02MarsRoverMovesToNorthLogsNewPosition stamp: 'camila 10/29/2023 19:17:35'!
ERROR!

!testRun: #LoggerPositionTest #test02MarsRoverMovesToNorthLogsNewPosition stamp: 'camila 10/29/2023 19:17:52'!
ERROR!
!MarsRover methodsFor: 'moving' stamp: 'camila 10/29/2023 19:19:09' prior: 50654256!
moveNorth
	position updateAndLog: [ :aPosition | aPosition + (0@1)].
	"position := position + (0@1)"! !

!testRun: #LoggerPositionTest #test02MarsRoverMovesToNorthLogsNewPosition stamp: 'camila 10/29/2023 19:19:11'!
ERROR!
!XXX methodsFor: 'as yet unclassified' stamp: 'camila 10/29/2023 19:19:19' prior: 50654276!
updateAndLog: aBlock 
	aBlock value: objectValue.! !

!testRun: #LoggerPositionTest #test02MarsRoverMovesToNorthLogsNewPosition stamp: 'camila 10/29/2023 19:19:19'!
FAILURE!

!testRun: #LoggerPositionTest #test02MarsRoverMovesToNorthLogsNewPosition stamp: 'camila 10/29/2023 19:20:45'!
FAILURE!
!MarsRover methodsFor: 'moving' stamp: 'camila 10/29/2023 19:24:21' prior: 50654288!
moveNorth
	position updateAndLog: [ position := position + (0@1)].
	"position := position + (0@1)"! !

!testRun: #LoggerPositionTest #test02MarsRoverMovesToNorthLogsNewPosition stamp: 'camila 10/29/2023 19:24:23'!
ERROR!
!XXX methodsFor: 'as yet unclassified' stamp: 'camila 10/29/2023 19:24:32' prior: 50654298!
updateAndLog: aBlock 
	aBlock value.! !
!XXX methodsFor: 'initialization' stamp: 'camila 10/29/2023 19:24:56' prior: 50654234!
initializeWith: aPosition 
	position := position.
	"objectValue := aPosition".! !
!XXX methodsFor: 'initialization' stamp: 'camila 10/29/2023 19:24:59' prior: 50654324!
initializeWith: aPosition 
	position := aPosition.
	"objectValue := aPosition".! !

!testRun: #LoggerPositionTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/29/2023 19:26:25'!
PASSED!

!testRun: #LoggerPositionTest #test02MarsRoverMovesToNorthLogsNewPosition stamp: 'camila 10/29/2023 19:26:25'!
ERROR!

!testRun: #LoggerPositionTest #test03MarsRoverMovesToNorthTwice stamp: 'camila 10/29/2023 19:26:25'!
ERROR!

!testRun: #LoggerPositionTest #test04MarsRoverMovesBackward stamp: 'camila 10/29/2023 19:26:25'!
ERROR!

!testRun: #LoggerPositionTest #test05MarsRoverRotatesLeftIsntLogged stamp: 'camila 10/29/2023 19:26:25'!
FAILURE!

!testRun: #LoggerPositionTest #test06MarsRoverRotatesRightIsntLogged stamp: 'camila 10/29/2023 19:26:25'!
FAILURE!

!testRun: #LoggerPositionTest #test07MarsRoverMovesForwardHeadingEastIsLogged stamp: 'camila 10/29/2023 19:26:25'!
ERROR!

!testRun: #LoggerPositionTest #test08MarsRoverMovesForwardHeadingWestIsLogged stamp: 'camila 10/29/2023 19:26:25'!
ERROR!

!testRun: #LoggerPositionTest #test02MarsRoverMovesToNorthLogsNewPosition stamp: 'camila 10/29/2023 19:26:27'!
ERROR!
!MarsRover methodsFor: 'moving' stamp: 'camila 10/29/2023 19:27:17' prior: 50654125!
moveEast
	position updateAndLog: (1@0).
	"self moveAndLogPositionMovement: [position := position + (1@0)]."
	"position := position + (1@0)"! !

!testRun: #LoggerPositionTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/29/2023 19:27:29'!
PASSED!

!testRun: #LoggerPositionTest #test02MarsRoverMovesToNorthLogsNewPosition stamp: 'camila 10/29/2023 19:27:29'!
ERROR!

!testRun: #LoggerPositionTest #test03MarsRoverMovesToNorthTwice stamp: 'camila 10/29/2023 19:27:29'!
ERROR!

!testRun: #LoggerPositionTest #test04MarsRoverMovesBackward stamp: 'camila 10/29/2023 19:27:29'!
ERROR!

!testRun: #LoggerPositionTest #test05MarsRoverRotatesLeftIsntLogged stamp: 'camila 10/29/2023 19:27:29'!
FAILURE!

!testRun: #LoggerPositionTest #test06MarsRoverRotatesRightIsntLogged stamp: 'camila 10/29/2023 19:27:29'!
FAILURE!

!testRun: #LoggerPositionTest #test07MarsRoverMovesForwardHeadingEastIsLogged stamp: 'camila 10/29/2023 19:27:29'!
FAILURE!

!testRun: #LoggerPositionTest #test08MarsRoverMovesForwardHeadingWestIsLogged stamp: 'camila 10/29/2023 19:27:29'!
ERROR!

!testRun: #LoggerPositionTest #test02MarsRoverMovesToNorthLogsNewPosition stamp: 'camila 10/29/2023 19:27:30'!
ERROR!
!MarsRover methodsFor: 'moving' stamp: 'camila 10/29/2023 19:31:33' prior: 50654368!
moveEast
":val | val := MarsRoverHeadingEast for: self ]
[block] value: objectValue"

	position updateAndLog:[:aPosition|  aPosition + (1@0)].
	"self moveAndLogPositionMovement: [position := position + (1@0)]."
	"position := position + (1@0)"! !
!XXX methodsFor: 'as yet unclassified' stamp: 'camila 10/29/2023 19:31:52' prior: 50654320!
updateAndLog: aBlock 
	aBlock value: objectValue .! !
!XXX methodsFor: 'initialization' stamp: 'camila 10/29/2023 19:32:01' prior: 50654330!
initializeWith: aPosition 
	
	objectValue := aPosition.! !
!XXX methodsFor: 'as yet unclassified' stamp: 'camila 10/29/2023 19:32:26' prior: 50654419!
updateAndLog: aBlock 
objectValue := aBlock value: objectValue! !

!testRun: #LoggerPositionTest #test02MarsRoverMovesToNorthLogsNewPosition stamp: 'camila 10/29/2023 19:32:32'!
ERROR!

!testRun: #LoggerPositionTest #test02MarsRoverMovesToNorthLogsNewPosition stamp: 'camila 10/29/2023 19:32:32'!
ERROR!
!MarsRover methodsFor: 'moving' stamp: 'camila 10/29/2023 19:33:04' prior: 50654310!
moveNorth
	position updateAndLog: [ :aPosition| aPosition + (0@1)].
	"position := position + (0@1)"! !

!testRun: #LoggerPositionTest #test02MarsRoverMovesToNorthLogsNewPosition stamp: 'camila 10/29/2023 19:33:05'!
FAILURE!
!XXX methodsFor: 'as yet unclassified' stamp: 'camila 10/29/2023 19:33:25' prior: 50654429!
updateAndLog: aBlock 
	objectValue := aBlock value: objectValue! !
!XXX methodsFor: 'as yet unclassified' stamp: 'camila 10/29/2023 19:33:26' prior: 50654452!
updateAndLog: aBlock 
	objectValue := aBlock value: objectValue.! !

!testRun: #LoggerPositionTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/29/2023 19:34:06'!
PASSED!

!testRun: #LoggerPositionTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/29/2023 19:34:47'!
PASSED!
!MarsRover methodsFor: 'log and update' stamp: 'camila 10/29/2023 19:35:28' prior: 50651224!
addLogger: aLogger 
	position addLogger: aLogger.! !

!testRun: #LoggerPositionTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/29/2023 19:35:29'!
ERROR!
!XXX methodsFor: 'as yet unclassified' stamp: 'camila 10/29/2023 19:35:32'!
addLogger: aLogger 
	self shouldBeImplemented.! !

!classDefinition: #XXX category: 'MarsRover-WithHeading' stamp: 'camila 10/29/2023 19:35:47'!
Object subclass: #XXX
	instanceVariableNames: 'position objectValue loggers'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!XXX methodsFor: 'as yet unclassified' stamp: 'camila 10/29/2023 19:35:45' prior: 50654477!
addLogger: aLogger 
	loggers add: aLogger.! !

!testRun: #LoggerPositionTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/29/2023 19:35:49'!
ERROR!
!XXX methodsFor: 'initialization' stamp: 'camila 10/29/2023 19:36:08' prior: 50654424!
initializeWith: aPosition 
	
	objectValue := aPosition.
	loggers := OrderedCollection new.! !

!testRun: #LoggerPositionTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/29/2023 19:36:46'!
PASSED!

!testRun: #LoggerPositionTest #test02MarsRoverMovesToNorthLogsNewPosition stamp: 'camila 10/29/2023 19:36:48'!
FAILURE!

!testRun: #LoggerPositionTest #test02MarsRoverMovesToNorthLogsNewPosition stamp: 'camila 10/29/2023 19:36:48'!
FAILURE!
!XXX methodsFor: 'as yet unclassified' stamp: 'camila 10/29/2023 19:37:21' prior: 50654457!
updateAndLog: aBlock 
	objectValue := aBlock value: objectValue.
	loggers do: [:aLogger | aLogger add: objectValue].! !
!XXX methodsFor: 'as yet unclassified' stamp: 'camila 10/29/2023 19:38:15' prior: 50654515!
updateAndLog: aBlock 
	objectValue := aBlock value: objectValue.
	loggers do: [:aLogger | aLogger logPosition: objectValue].! !

!testRun: #LoggerPositionTest #test02MarsRoverMovesToNorthLogsNewPosition stamp: 'camila 10/29/2023 19:38:16'!
FAILURE!

!testRun: #LoggerPositionTest #test02MarsRoverMovesToNorthLogsNewPosition stamp: 'camila 10/29/2023 19:38:46'!
FAILURE!

!testRun: #LoggerPositionTest #test02MarsRoverMovesToNorthLogsNewPosition stamp: 'camila 10/29/2023 19:38:48'!
PASSED!

!testRun: #LoggerPositionTest #test02MarsRoverMovesToNorthLogsNewPosition stamp: 'camila 10/29/2023 19:38:53'!
FAILURE!

!testRun: #LoggerPositionTest #test02MarsRoverMovesToNorthLogsNewPosition stamp: 'camila 10/29/2023 19:38:53'!
FAILURE!
!MarsRover methodsFor: 'testing' stamp: 'camila 10/29/2023 19:39:40' prior: 50650542!
isAt: aPosition heading: aHeadingType

	^position value  = aPosition and: [ head isHeading: aHeadingType ]! !

!testRun: #LoggerPositionTest #test02MarsRoverMovesToNorthLogsNewPosition stamp: 'camila 10/29/2023 19:39:41'!
FAILURE!
!MarsRover methodsFor: 'testing' stamp: 'camila 10/29/2023 19:41:54' prior: 50654548!
isAt: aPosition heading: aHeadingType

	^(position isValue: aPosition) and: [ head isHeading: aHeadingType ]! !

!testRun: #LoggerPositionTest #test02MarsRoverMovesToNorthLogsNewPosition stamp: 'camila 10/29/2023 19:42:08'!
ERROR!
!XXX methodsFor: 'as yet unclassified' stamp: 'camila 10/29/2023 19:42:13'!
isValue: aPosition 
	self shouldBeImplemented.! !
!XXX methodsFor: 'as yet unclassified' stamp: 'camila 10/29/2023 19:42:22' prior: 50654568!
isValue: aPosition 
	^aPosition = objectValue! !

!testRun: #LoggerPositionTest #test02MarsRoverMovesToNorthLogsNewPosition stamp: 'camila 10/29/2023 19:42:23'!
PASSED!

!testRun: #LoggerPositionTest #test02MarsRoverMovesToNorthLogsNewPosition stamp: 'camila 10/29/2023 19:42:29'!
PASSED!

!testRun: #LoggerPositionTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/29/2023 19:42:31'!
PASSED!

!testRun: #LoggerPositionTest #test03MarsRoverMovesToNorthTwice stamp: 'camila 10/29/2023 19:42:33'!
PASSED!

!testRun: #LoggerPositionTest #test04MarsRoverMovesBackward stamp: 'camila 10/29/2023 19:42:35'!
ERROR!

!testRun: #LoggerPositionTest #test04MarsRoverMovesBackward stamp: 'camila 10/29/2023 19:42:35'!
ERROR!
!MarsRover methodsFor: 'moving' stamp: 'camila 10/29/2023 19:43:10' prior: 50651621!
moveSouth
	position updateAndLog:[:aPosition|  aPosition + (0@-1)].
	"position := position + (0@-1)"! !

!testRun: #LoggerPositionTest #test04MarsRoverMovesBackward stamp: 'camila 10/29/2023 19:43:11'!
PASSED!

!testRun: #LoggerPositionTest #test03MarsRoverMovesToNorthTwice stamp: 'camila 10/29/2023 19:43:17'!
PASSED!

!testRun: #LoggerPositionTest #test04MarsRoverMovesBackward stamp: 'camila 10/29/2023 19:43:18'!
PASSED!

!testRun: #LoggerPositionTest #test05MarsRoverRotatesLeftIsntLogged stamp: 'camila 10/29/2023 19:43:19'!
PASSED!

!testRun: #LoggerPositionTest #test06MarsRoverRotatesRightIsntLogged stamp: 'camila 10/29/2023 19:43:21'!
PASSED!

!testRun: #LoggerPositionTest #test07MarsRoverMovesForwardHeadingEastIsLogged stamp: 'camila 10/29/2023 19:43:22'!
PASSED!

!testRun: #LoggerPositionTest #test08MarsRoverMovesForwardHeadingWestIsLogged stamp: 'camila 10/29/2023 19:43:23'!
ERROR!

!testRun: #LoggerPositionTest #test08MarsRoverMovesForwardHeadingWestIsLogged stamp: 'camila 10/29/2023 19:43:23'!
ERROR!
!MarsRover methodsFor: 'moving' stamp: 'camila 10/29/2023 19:43:42' prior: 50654408!
moveEast

	position updateAndLog:[:aPosition|  aPosition + (1@0)].
	"position := position + (1@0)"! !
!MarsRover methodsFor: 'moving' stamp: 'camila 10/29/2023 19:43:57' prior: 50652283!
moveWest
	position updateAndLog:[:aPosition|  aPosition + (-1@0)].
	"position := position + (-1@0)"! !

!testRun: #LoggerPositionTest #test08MarsRoverMovesForwardHeadingWestIsLogged stamp: 'camila 10/29/2023 19:43:58'!
PASSED!

!testRun: #LoggerPositionTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/29/2023 19:44:01'!
PASSED!

!testRun: #LoggerPositionTest #test02MarsRoverMovesToNorthLogsNewPosition stamp: 'camila 10/29/2023 19:44:01'!
PASSED!

!testRun: #LoggerPositionTest #test03MarsRoverMovesToNorthTwice stamp: 'camila 10/29/2023 19:44:01'!
PASSED!

!testRun: #LoggerPositionTest #test04MarsRoverMovesBackward stamp: 'camila 10/29/2023 19:44:01'!
PASSED!

!testRun: #LoggerPositionTest #test05MarsRoverRotatesLeftIsntLogged stamp: 'camila 10/29/2023 19:44:01'!
PASSED!

!testRun: #LoggerPositionTest #test06MarsRoverRotatesRightIsntLogged stamp: 'camila 10/29/2023 19:44:01'!
PASSED!

!testRun: #LoggerPositionTest #test07MarsRoverMovesForwardHeadingEastIsLogged stamp: 'camila 10/29/2023 19:44:01'!
PASSED!

!testRun: #LoggerPositionTest #test08MarsRoverMovesForwardHeadingWestIsLogged stamp: 'camila 10/29/2023 19:44:01'!
PASSED!

!testRun: #LoggerPositionTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/29/2023 19:44:10'!
PASSED!

!testRun: #LoggerPositionTest #test02MarsRoverMovesToNorthLogsNewPosition stamp: 'camila 10/29/2023 19:44:10'!
PASSED!

!testRun: #LoggerPositionTest #test03MarsRoverMovesToNorthTwice stamp: 'camila 10/29/2023 19:44:10'!
PASSED!

!testRun: #LoggerPositionTest #test04MarsRoverMovesBackward stamp: 'camila 10/29/2023 19:44:10'!
PASSED!

!testRun: #LoggerPositionTest #test05MarsRoverRotatesLeftIsntLogged stamp: 'camila 10/29/2023 19:44:10'!
PASSED!

!testRun: #LoggerPositionTest #test06MarsRoverRotatesRightIsntLogged stamp: 'camila 10/29/2023 19:44:10'!
PASSED!

!testRun: #LoggerPositionTest #test07MarsRoverMovesForwardHeadingEastIsLogged stamp: 'camila 10/29/2023 19:44:10'!
PASSED!

!testRun: #LoggerPositionTest #test08MarsRoverMovesForwardHeadingWestIsLogged stamp: 'camila 10/29/2023 19:44:10'!
PASSED!

!testRun: #LoggerPositionTest #test08MarsRoverMovesForwardHeadingWestIsLogged stamp: 'camila 10/29/2023 19:44:13'!
PASSED!

!testRun: #LoggerPositionTest #test07MarsRoverMovesForwardHeadingEastIsLogged stamp: 'camila 10/29/2023 19:44:15'!
PASSED!

!testRun: #LoggerPositionTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/29/2023 19:44:18'!
PASSED!

!testRun: #LoggerPositionTest #test02MarsRoverMovesToNorthLogsNewPosition stamp: 'camila 10/29/2023 19:44:18'!
PASSED!

!testRun: #LoggerPositionTest #test03MarsRoverMovesToNorthTwice stamp: 'camila 10/29/2023 19:44:18'!
PASSED!

!testRun: #LoggerPositionTest #test04MarsRoverMovesBackward stamp: 'camila 10/29/2023 19:44:18'!
PASSED!

!testRun: #LoggerPositionTest #test05MarsRoverRotatesLeftIsntLogged stamp: 'camila 10/29/2023 19:44:18'!
PASSED!

!testRun: #LoggerPositionTest #test06MarsRoverRotatesRightIsntLogged stamp: 'camila 10/29/2023 19:44:18'!
PASSED!

!testRun: #LoggerPositionTest #test07MarsRoverMovesForwardHeadingEastIsLogged stamp: 'camila 10/29/2023 19:44:18'!
PASSED!

!testRun: #LoggerPositionTest #test08MarsRoverMovesForwardHeadingWestIsLogged stamp: 'camila 10/29/2023 19:44:18'!
PASSED!

!testRun: #LoggerHeadingTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/29/2023 19:44:24'!
PASSED!
!MarsRover methodsFor: 'initialization' stamp: 'camila 10/29/2023 19:45:07' prior: 50654188!
initializeAt: aPosition heading: aHeadingType

	position := XXX with: aPosition.
	head := XXX with: (aHeadingType for: self) .! !

!testRun: #LoggerHeadingTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/29/2023 19:45:07'!
PASSED!

!testRun: #LoggerHeadingTest #test02MarsRoverRotatesLeftLogsWest stamp: 'camila 10/29/2023 19:46:03'!
ERROR!

!testRun: #LoggerHeadingTest #test02MarsRoverRotatesLeftLogsWest stamp: 'camila 10/29/2023 19:46:03'!
ERROR!
!MarsRover methodsFor: 'heading' stamp: 'camila 10/29/2023 19:47:07' prior: 50650534!
rotateLeft
	
	(head value) rotateLeft! !

!testRun: #LoggerHeadingTest #test02MarsRoverRotatesLeftLogsWest stamp: 'camila 10/29/2023 19:47:09'!
ERROR!
!MarsRover methodsFor: 'heading' stamp: 'camila 10/29/2023 19:47:36' prior: 50654765!
rotateLeft
	
	(head objectValue) rotateLeft! !

!testRun: #LoggerHeadingTest #test02MarsRoverRotatesLeftLogsWest stamp: 'camila 10/29/2023 19:47:38'!
ERROR!
!XXX methodsFor: 'as yet unclassified' stamp: 'camila 10/29/2023 19:47:44'!
objectValue
	self shouldBeImplemented.
	^objectValue! !
!XXX methodsFor: 'as yet unclassified' stamp: 'camila 10/29/2023 19:47:47' prior: 50654781!
objectValue
	^objectValue! !

!testRun: #LoggerHeadingTest #test02MarsRoverRotatesLeftLogsWest stamp: 'camila 10/29/2023 19:47:48'!
FAILURE!
!MarsRover methodsFor: 'heading' stamp: 'camila 10/29/2023 19:48:56' prior: 50652643!
headWest
	head rotateAndLog: [ MarsRoverHeadingWest for: self].
	"head := MarsRoverHeadingWest for: self" ! !
!MarsRover methodsFor: 'heading' stamp: 'camila 10/29/2023 19:49:06' prior: 50654794!
headWest
	head updateAndLog: [ MarsRoverHeadingWest for: self].
	"head := MarsRoverHeadingWest for: self" ! !

!testRun: #LoggerHeadingTest #test02MarsRoverRotatesLeftLogsWest stamp: 'camila 10/29/2023 19:49:15'!
ERROR!

!testRun: #LoggerHeadingTest #test02MarsRoverRotatesLeftLogsWest stamp: 'camila 10/29/2023 19:49:38'!
ERROR!
!MarsRover methodsFor: 'heading' stamp: 'camila 10/29/2023 19:49:54' prior: 50654801!
headWest
	head updateAndLog: [ :aHead | MarsRoverHeadingWest for: self].
	"head := MarsRoverHeadingWest for: self" ! !
!MarsRover methodsFor: 'heading' stamp: 'camila 10/29/2023 19:50:17' prior: 50654814!
headWest
	head updateAndLog: [  MarsRoverHeadingWest for: self].
	"head := MarsRoverHeadingWest for: self" ! !

!testRun: #LoggerHeadingTest #test02MarsRoverRotatesLeftLogsWest stamp: 'camila 10/29/2023 19:50:24'!
ERROR!
!MarsRover methodsFor: 'heading' stamp: 'camila 10/29/2023 19:50:40' prior: 50654821!
headWest
	head updateAndLog: [  :aHead | MarsRoverHeadingWest for: self].
	"head := MarsRoverHeadingWest for: self" ! !

!testRun: #LoggerHeadingTest #test02MarsRoverRotatesLeftLogsWest stamp: 'camila 10/29/2023 19:50:41'!
FAILURE!

!testRun: #LoggerHeadingTest #test02MarsRoverRotatesLeftLogsWest stamp: 'camila 10/29/2023 19:52:52'!
FAILURE!

!testRun: #LoggerPositionTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/29/2023 19:53:05'!
PASSED!

!testRun: #LoggerPositionTest #test02MarsRoverMovesToNorthLogsNewPosition stamp: 'camila 10/29/2023 19:53:05'!
ERROR!

!testRun: #LoggerPositionTest #test03MarsRoverMovesToNorthTwice stamp: 'camila 10/29/2023 19:53:05'!
ERROR!

!testRun: #LoggerPositionTest #test04MarsRoverMovesBackward stamp: 'camila 10/29/2023 19:53:05'!
ERROR!

!testRun: #LoggerPositionTest #test05MarsRoverRotatesLeftIsntLogged stamp: 'camila 10/29/2023 19:53:05'!
ERROR!

!testRun: #LoggerPositionTest #test06MarsRoverRotatesRightIsntLogged stamp: 'camila 10/29/2023 19:53:05'!
ERROR!

!testRun: #LoggerPositionTest #test07MarsRoverMovesForwardHeadingEastIsLogged stamp: 'camila 10/29/2023 19:53:05'!
ERROR!

!testRun: #LoggerPositionTest #test08MarsRoverMovesForwardHeadingWestIsLogged stamp: 'camila 10/29/2023 19:53:05'!
ERROR!
!XXX methodsFor: 'as yet unclassified' stamp: 'camila 10/29/2023 19:53:40' prior: 50654522!
updateAndLog: aBlock 
	objectValue := aBlock value: objectValue.
	loggers do: [:aLogger | aLogger log: objectValue].! !

!testRun: #LoggerHeadingTest #test02MarsRoverRotatesLeftLogsWest stamp: 'camila 10/29/2023 19:53:42'!
FAILURE!
!LoggerHeading methodsFor: 'as yet unclassified' stamp: 'camila 10/29/2023 19:54:29'!
log: aHeading 
	headingLog add: aHeading headingName.
	! !

!methodRemoval: LoggerHeading #logHeading: stamp: 'camila 10/29/2023 19:54:29'!
logHeading: aHeading 
	headingLog add: aHeading headingName.
	!

!testRun: #LoggerPositionTest #test02MarsRoverMovesToNorthLogsNewPosition stamp: 'camila 10/29/2023 19:54:35'!
ERROR!

!testRun: #LoggerPositionTest #test02MarsRoverMovesToNorthLogsNewPosition stamp: 'camila 10/29/2023 19:54:35'!
ERROR!

!testRun: #LoggerPositionTest #test02MarsRoverMovesToNorthLogsNewPosition stamp: 'camila 10/29/2023 19:54:42'!
ERROR!

!testRun: #LoggerPositionTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/29/2023 19:54:49'!
PASSED!
!MarsRover methodsFor: 'log and update' stamp: 'camila 10/29/2023 19:55:53' prior: 50654469!
addLogger: aLogger 
	position addLogger: aLogger.
	head addLogger: aLogger .! !
!MarsRover methodsFor: 'log and update' stamp: 'camila 10/29/2023 19:57:54' prior: 50654908!
addLogger: aLogger 
	position addLogger: aLogger.
	head addLogger: aLogger.! !
!MarsRover methodsFor: 'log and update' stamp: 'camila 10/29/2023 19:58:01' prior: 50654914!
addLogger: aLogger 
	position addLogger: aLogger.! !

!testRun: #LoggerHeadingTest #test02MarsRoverRotatesLeftLogsWest stamp: 'camila 10/29/2023 20:02:42'!
FAILURE!
!MarsRover methodsFor: 'log and update' stamp: 'camila 10/29/2023 20:03:24' prior: 50654920!
addLogger: aLogger 
	position addLogger: aLogger.
	head addLogger: aLogger .! !

!testRun: #LoggerPositionTest #test02MarsRoverMovesToNorthLogsNewPosition stamp: 'camila 10/29/2023 20:03:32'!
ERROR!

!testRun: #LoggerPositionTest #test02MarsRoverMovesToNorthLogsNewPosition stamp: 'camila 10/29/2023 20:03:32'!
ERROR!

!testRun: #LoggerPositionTest #test02MarsRoverMovesToNorthLogsNewPosition stamp: 'camila 10/29/2023 20:03:40'!
ERROR!
!MarsRover methodsFor: 'moving' stamp: 'camila 10/29/2023 20:04:28' prior: 50650572!
moveForward
	
	(head objectValue) moveForward! !

!testRun: #LoggerPositionTest #test02MarsRoverMovesToNorthLogsNewPosition stamp: 'camila 10/29/2023 20:04:31'!
ERROR!

!testRun: #LoggerHeadingTest #test02MarsRoverRotatesLeftLogsWest stamp: 'camila 10/29/2023 20:04:43'!
ERROR!

!testRun: #LoggerHeadingTest #test02MarsRoverRotatesLeftLogsWest stamp: 'camila 10/29/2023 20:04:43'!
ERROR!
!MarsRover methodsFor: 'testing' stamp: 'camila 10/29/2023 20:05:22' prior: 50654558!
isAt: aPosition heading: aHeadingType

	^(position isValue: aPosition) and: [ (head  objectValue) isHeading: aHeadingType ]! !

!testRun: #LoggerHeadingTest #test02MarsRoverRotatesLeftLogsWest stamp: 'camila 10/29/2023 20:05:23'!
PASSED!

!testRun: #LoggerHeadingTest #test02MarsRoverRotatesLeftLogsWest stamp: 'camila 10/29/2023 20:05:26'!
PASSED!

!testRun: #LoggerHeadingTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/29/2023 20:05:28'!
PASSED!

!testRun: #LoggerHeadingTest #test03MarsRoverRotatesRightLogsEast stamp: 'camila 10/29/2023 20:05:32'!
ERROR!

!testRun: #LoggerHeadingTest #test03MarsRoverRotatesRightLogsEast stamp: 'camila 10/29/2023 20:05:32'!
ERROR!
!MarsRover methodsFor: 'heading' stamp: 'camila 10/29/2023 20:05:45' prior: 50650538!
rotateRight
	
	(head objectValue) rotateRight! !

!testRun: #LoggerHeadingTest #test03MarsRoverRotatesRightLogsEast stamp: 'camila 10/29/2023 20:05:46'!
FAILURE!
!MarsRover methodsFor: 'heading' stamp: 'camila 10/29/2023 20:06:25' prior: 50652492!
headEast
	
	head updateAndLog: [:aHeading | MarsRoverHeadingEast for: self].
	"head := MarsRoverHeadingEast for: self"
	! !

!testRun: #LoggerHeadingTest #test03MarsRoverRotatesRightLogsEast stamp: 'camila 10/29/2023 20:06:26'!
PASSED!

!testRun: #LoggerHeadingTest #test03MarsRoverRotatesRightLogsEast stamp: 'camila 10/29/2023 20:06:29'!
PASSED!

!testRun: #LoggerHeadingTest #test02MarsRoverRotatesLeftLogsWest stamp: 'camila 10/29/2023 20:06:31'!
PASSED!

!testRun: #LoggerHeadingTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/29/2023 20:06:33'!
PASSED!

!testRun: #LoggerHeadingTest #test04MarsRoverRotatesNorthLogsNorth stamp: 'camila 10/29/2023 20:06:36'!
FAILURE!

!testRun: #LoggerHeadingTest #test04MarsRoverRotatesNorthLogsNorth stamp: 'camila 10/29/2023 20:06:36'!
FAILURE!
!MarsRover methodsFor: 'heading' stamp: 'camila 10/29/2023 20:07:19' prior: 50652787!
headNorth
	head updateAndLog: [:aHeading | MarsRoverHeadingNorth for: self].
	"head := MarsRoverHeadingNorth for: self" ! !

!testRun: #LoggerHeadingTest #test04MarsRoverRotatesNorthLogsNorth stamp: 'camila 10/29/2023 20:07:20'!
PASSED!

!testRun: #LoggerHeadingTest #test04MarsRoverRotatesNorthLogsNorth stamp: 'camila 10/29/2023 20:07:22'!
PASSED!

!testRun: #LoggerHeadingTest #test05MarsRoverRotatesSouthLogsSouth stamp: 'camila 10/29/2023 20:07:23'!
ERROR!

!testRun: #LoggerHeadingTest #test05MarsRoverRotatesSouthLogsSouth stamp: 'camila 10/29/2023 20:07:23'!
ERROR!
!MarsRover methodsFor: 'heading' stamp: 'camila 10/29/2023 20:08:18' prior: 50652879!
headSouth
	head updateAndLog: [:aHeading | MarsRoverHeadingSouth for: self].
	"head := MarsRoverHeadingSouth for: self"! !

!testRun: #LoggerHeadingTest #test05MarsRoverRotatesSouthLogsSouth stamp: 'camila 10/29/2023 20:08:19'!
ERROR!

!testRun: #LoggerHeadingTest #test05MarsRoverRotatesSouthLogsSouth stamp: 'camila 10/29/2023 20:09:16'!
ERROR!

!testRun: #LoggerHeadingTest #test05MarsRoverRotatesSouthLogsSouth stamp: 'camila 10/29/2023 20:09:35'!
ERROR!
!MarsRover methodsFor: 'log and update' stamp: 'camila 10/29/2023 20:16:18'!
addLogger: aLogger follow: collectionOfAttributes
	collectionOfAttributes do: [:anAttributeToFollow | 
		anAttributeToFollow = $p ifTrue: [position addLogger: aLogger].
		anAttributeToFollow  = $h ifTrue: [head addLogger: aLogger ].
		]
! !
!MarsRover methodsFor: 'log and update' stamp: 'camila 10/29/2023 20:16:39' prior: 50655059!
addLogger: aLogger follow: collectionOfAttributes

	collectionOfAttributes do: [:anAttributeToFollow | 
		anAttributeToFollow = $p ifTrue: [position addLogger: aLogger].
		anAttributeToFollow  = $h ifTrue: [head addLogger: aLogger ].
		]
! !
!LoggerHeadingTest methodsFor: 'testing' stamp: 'camila 10/29/2023 20:18:30' prior: 50652367!
test01NewMarsRoverWithEmptyLog
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north. 
	logger :=LoggerHeading with: marsRover  follow: {$h} .
	
	self assert: (logger printLog ) equals: OrderedCollection new.! !
!MarsRover methodsFor: 'log and update' stamp: 'camila 10/29/2023 20:18:42' prior: 50655070!
addLogger: aLogger follow: collectionOfAttributes

	collectionOfAttributes do: [:anAttributeToFollow | 
		anAttributeToFollow = $p ifTrue: [position addLogger: aLogger].
		anAttributeToFollow = $h ifTrue: [head addLogger: aLogger ].
		]
! !

!testRun: #LoggerHeadingTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/29/2023 20:18:49'!
ERROR!

!testRun: #LoggerHeadingTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/29/2023 20:18:49'!
ERROR!
!Logger class methodsFor: 'as yet unclassified' stamp: 'camila 10/29/2023 20:19:13'!
with: marsRover follow: aRenameMe1 
	self shouldBeImplemented.! !
!LoggerHeadingTest methodsFor: 'testing' stamp: 'camila 10/29/2023 20:19:16' prior: 50655081!
test01NewMarsRoverWithEmptyLog
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north. 
	logger :=Logger with: marsRover  follow: {$h} .
	
	self assert: (logger printLog ) equals: OrderedCollection new.! !

!testRun: #LoggerHeadingTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/29/2023 20:19:18'!
ERROR!

!testRun: #LoggerHeadingTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/29/2023 20:19:18'!
ERROR!
!Logger class methodsFor: 'as yet unclassified' stamp: 'camila 10/29/2023 20:20:01' prior: 50655109!
with: marsRover follow: attributes 
	self new initializeWith: marsRover follow: attributes.! !

!testRun: #LoggerHeadingTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/29/2023 20:20:06'!
ERROR!

!testRun: #LoggerHeadingTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/29/2023 20:20:06'!
ERROR!

!classDefinition: #Logger category: 'MarsRover-WithHeading' stamp: 'camila 10/29/2023 20:20:12'!
Object subclass: #Logger
	instanceVariableNames: 'marsRover_CHANGE_ME'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #Logger category: 'MarsRover-WithHeading' stamp: 'camila 10/29/2023 20:20:12'!
Object subclass: #Logger
	instanceVariableNames: 'marsRover_CHANGE_ME attributes_CHANGE_ME'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!Logger methodsFor: 'initialization' stamp: 'camila 10/29/2023 20:20:12'!
initializeWith: marsRover follow: attributes 
	self shouldBeImplemented.
	marsRover_CHANGE_ME := marsRover.
	attributes_CHANGE_ME := attributes.! !
!Logger methodsFor: 'initialization' stamp: 'camila 10/29/2023 20:20:19' prior: 50655160!
initializeWith: marsRover follow: attributes 
	marsRover_CHANGE_ME := marsRover.
	attributes_CHANGE_ME := attributes.! !

Object subclass: #Logger
	instanceVariableNames: 'marsRover attributes'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

Object subclass: #Logger
	instanceVariableNames: 'marsRover1 attributes'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

Object subclass: #Logger
	instanceVariableNames: 'marsRover1 attributes1'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #Logger category: 'MarsRover-WithHeading' stamp: 'camila 10/29/2023 20:21:28'!
Object subclass: #Logger
	instanceVariableNames: 'marsRover1 attributes1'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!Logger methodsFor: 'initialization' stamp: 'camila 10/29/2023 20:21:52' prior: 50655168!
initializeWith: aMarsRover follow: attributesToFollow 
	marsRover1 := aMarsRover .
	attributes1:= attributesToFollow .! !

!testRun: #LoggerHeadingTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/29/2023 20:22:06'!
ERROR!

!testRun: #LoggerHeadingTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/29/2023 20:22:06'!
ERROR!

!testRun: #LoggerHeadingTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/29/2023 20:22:33'!
ERROR!

Object subclass: #MarsRoverLogger
	instanceVariableNames: 'marsRover1 attributes1'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #MarsRoverLogger category: 'MarsRover-WithHeading' stamp: 'camila 10/29/2023 20:22:56'!
Object subclass: #MarsRoverLogger
	instanceVariableNames: 'marsRover1 attributes1'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classRemoval: #MarsRoverLogger stamp: 'camila 10/29/2023 20:23:17'!
Object subclass: #MarsRoverLogger
	instanceVariableNames: 'marsRover1 attributes1'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classRenamed: #Logger as: #MarsRoverLogger stamp: 'camila 10/29/2023 20:23:22'!
Smalltalk renameClassNamed: #Logger as: #MarsRoverLogger!
!LoggerHeadingTest methodsFor: 'as yet unclassified' stamp: 'camila 10/29/2023 20:23:22' prior: 50655114!
test01NewMarsRoverWithEmptyLog
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north. 
	logger :=MarsRoverLogger with: marsRover  follow: {$h} .
	
	self assert: (logger printLog ) equals: OrderedCollection new.! !

!testRun: #LoggerHeadingTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/29/2023 20:23:40'!
ERROR!

!testRun: #LoggerHeadingTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/29/2023 20:23:40'!
ERROR!

!classDefinition: #MarsRoverLogger category: 'MarsRover-WithHeading' stamp: 'camila 10/29/2023 20:24:52'!
Object subclass: #MarsRoverLogger
	instanceVariableNames: 'marsRover1 attributes1 log'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MarsRoverLogger methodsFor: 'initialization' stamp: 'camila 10/29/2023 20:24:50' prior: 50655198!
initializeWith: aMarsRover follow: attributesToFollow 
	marsRover1 := aMarsRover .
	attributes1:= attributesToFollow .
	aMarsRover addLogger: self with: attributesToFollow .
	log := OrderedCollection new.! !

!testRun: #LoggerHeadingTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/29/2023 20:24:54'!
ERROR!
!MarsRoverLogger methodsFor: 'initialization' stamp: 'camila 10/29/2023 20:25:11' prior: 50655267!
initializeWith: aMarsRover follow: attributesToFollow 
	marsRover1 := aMarsRover .
	attributes1:= attributesToFollow .
	aMarsRover addLogger: self follow: attributesToFollow .
	log := OrderedCollection new.! !

!testRun: #LoggerHeadingTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/29/2023 20:25:12'!
ERROR!
!MarsRoverLogger class methodsFor: 'as yet unclassified' stamp: 'camila 10/29/2023 20:25:18'!
printLog
	self shouldBeImplemented.! !

!classDefinition: 'MarsRoverLogger class' category: 'MarsRover-WithHeading' stamp: 'camila 10/29/2023 20:27:21'!
MarsRoverLogger class
	instanceVariableNames: 'log'!
!MarsRoverLogger class methodsFor: 'as yet unclassified' stamp: 'camila 10/29/2023 20:27:19' prior: 50655293!
printLog
	^log.! !

!testRun: #LoggerHeadingTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/29/2023 20:27:25'!
FAILURE!

!testRun: #LoggerHeadingTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/29/2023 20:27:37'!
FAILURE!

!testRun: #LoggerHeadingTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/29/2023 20:27:37'!
FAILURE!
!MarsRoverLogger methodsFor: 'initialization' stamp: 'camila 10/29/2023 20:30:00' prior: 50655280!
initializeWith: aMarsRover follow: attributesToFollow 
	marsRover1 := aMarsRover .
	attributes1:= attributesToFollow .
	aMarsRover addLogger: self follow: attributesToFollow .
	log := {}.! !

!testRun: #LoggerHeadingTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/29/2023 20:30:10'!
FAILURE!
!MarsRoverLogger methodsFor: 'initialization' stamp: 'camila 10/29/2023 20:31:07' prior: 50655317!
initializeWith: aMarsRover follow: attributesToFollow 
	marsRover1 := aMarsRover .
	aMarsRover addLogger: self follow: attributesToFollow .
	log := {}.! !
!MarsRoverLogger methodsFor: 'as yet unclassified' stamp: 'camila 10/29/2023 20:31:34' prior: 50654057!
printLog

	^log.! !

!testRun: #LoggerHeadingTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/29/2023 20:31:40'!
FAILURE!

!testRun: #LoggerHeadingTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/29/2023 20:31:40'!
FAILURE!

	self assert: (logger printLog ) equals: OrderedCollection new.!
!MarsRoverLogger methodsFor: 'as yet unclassified' stamp: 'camila 10/29/2023 20:33:25'!
printMarsRoverLog

	^log.! !
!MarsRoverLogger class methodsFor: 'as yet unclassified' stamp: 'camila 10/29/2023 20:33:25'!
printMarsRoverLog
	^log.! !
!LoggerHeading methodsFor: 'as yet unclassified' stamp: 'camila 10/29/2023 20:33:25' overrides: 50655352!
printMarsRoverLog
	^headingLog.! !
!LoggerHeadingPosition methodsFor: 'as yet unclassified' stamp: 'camila 10/29/2023 20:33:25' overrides: 50655352!
printMarsRoverLog
	^logHeadingPosition .! !
!LoggerPosition methodsFor: 'as yet unclassified' stamp: 'camila 10/29/2023 20:33:25' overrides: 50655352!
printMarsRoverLog
	^positionLog .! !
!LoggerHeadingPositionTest methodsFor: 'as yet unclassified' stamp: 'camila 10/29/2023 20:33:25' prior: 50653677!
test02MarsRoverMovesForwardAndRotatesEast

	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north. 
	logger :=LoggerHeadingPosition with: marsRover .
	
	marsRover process: 'fr'.
	
	self assert: (logger printMarsRoverLog ) equals: (OrderedCollection with: 1@2 with: 'East').! !
!LoggerPositionTest methodsFor: 'as yet unclassified' stamp: 'camila 10/29/2023 20:33:25' prior: 50653009!
test03MarsRoverMovesToNorthTwice
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	logger := LoggerPosition with: marsRover .
	
	marsRover process: 'ff'.
	
	self assert: (logger printMarsRoverLog) equals: (OrderedCollection with: 1@2 with: 1@3 ).
	self assert: (marsRover isAt: 1@3 heading: self north) 
	! !
!LoggerHeadingPositionTest methodsFor: 'as yet unclassified' stamp: 'camila 10/29/2023 20:33:25' prior: 50653409!
test01MarsRoverNewWithEmptyLog

	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north. 
	logger :=LoggerHeadingPosition with: marsRover .
	
	self assert: (logger printMarsRoverLog ) equals: OrderedCollection new.! !
!LoggerHeadingTest methodsFor: 'as yet unclassified' stamp: 'camila 10/29/2023 20:33:25' prior: 50652736!
test03MarsRoverRotatesRightLogsEast
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north. 
	logger :=LoggerHeading with: marsRover .
	
	marsRover process: 'r'.
	
	self assert: (logger printMarsRoverLog ) equals: (OrderedCollection with: 'East').
	self assert: (marsRover isAt: 1@1 heading: self east).! !
!LoggerPositionTest methodsFor: 'as yet unclassified' stamp: 'camila 10/29/2023 20:33:25' prior: 50652941!
test04MarsRoverMovesBackward
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	logger := LoggerPosition with: marsRover .
	
	marsRover process: 'b'.
	
	self assert: (logger printMarsRoverLog) equals: (OrderedCollection with: 1@0).
	self assert: (marsRover isAt: 1@0 heading: self north) 
	! !
!LoggerHeadingTest methodsFor: 'as yet unclassified' stamp: 'camila 10/29/2023 20:33:25' prior: 50652710!
test02MarsRoverRotatesLeftLogsWest
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north. 
	logger :=LoggerHeading with: marsRover .
	
	marsRover process: 'l'.
	
	self assert: (logger printMarsRoverLog ) equals: (OrderedCollection with: 'West').
	self assert: (marsRover isAt: 1@1 heading: self west).! !
!LoggerHeadingTest methodsFor: 'as yet unclassified' stamp: 'camila 10/29/2023 20:33:25' prior: 50653176!
test05MarsRoverRotatesSouthLogsSouth
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north. 
	logger :=LoggerHeading with: marsRover .
	
	marsRover process: 'rf'.
	
	self assert: (logger printMarsRoverLog ) equals: (OrderedCollection with: 'East').
	self assert: (marsRover isAt: 2@1 heading: self east).! !
!LoggerPositionTest methodsFor: 'as yet unclassified' stamp: 'camila 10/29/2023 20:33:25' prior: 50653023!
test01NewMarsRoverWithEmptyLog
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north. 
	logger :=LoggerPosition with: marsRover .
	
	self assert: (logger printMarsRoverLog ) equals: OrderedCollection new.! !
!LoggerHeadingTest methodsFor: 'as yet unclassified' stamp: 'camila 10/29/2023 20:33:25' prior: 50655241!
test01NewMarsRoverWithEmptyLog
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north. 
	logger :=MarsRoverLogger with: marsRover  follow: {$h} .
	
	self assert: (logger printMarsRoverLog ) equals: OrderedCollection new.! !
!LoggerPositionTest methodsFor: 'as yet unclassified' stamp: 'camila 10/29/2023 20:33:25' prior: 50652968!
test07MarsRoverMovesForwardHeadingEastIsLogged
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	logger := LoggerPosition with: marsRover .
	
	marsRover process: 'rf'.
	
	self assert: (logger printMarsRoverLog) equals: (OrderedCollection with: 2@1 ).
	self assert: (marsRover isAt: 2@1 heading: self east) 
	! !
!LoggerPositionTest methodsFor: 'as yet unclassified' stamp: 'camila 10/29/2023 20:33:25' prior: 50652996!
test06MarsRoverRotatesRightIsntLogged
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	logger := LoggerPosition with: marsRover .
	
	marsRover process: 'r'.
	
	self assert: (logger printMarsRoverLog) equals: (OrderedCollection new).
	self assert: (marsRover isAt: 1@1 heading: self east) 
	! !
!LoggerPositionTest methodsFor: 'as yet unclassified' stamp: 'camila 10/29/2023 20:33:25' prior: 50652954!
test02MarsRoverMovesToNorthLogsNewPosition
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	logger := LoggerPosition with: marsRover .
	
	marsRover process: 'f'.
	
	self assert: (logger printMarsRoverLog) equals: (OrderedCollection with: 1@2).
	self assert: (marsRover isAt: 1@2 heading: self north) 
	! !
!LoggerHeadingTest methodsFor: 'as yet unclassified' stamp: 'camila 10/29/2023 20:33:25' prior: 50652763!
test04MarsRoverRotatesNorthLogsNorth
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self east. 
	logger :=LoggerHeading with: marsRover .
	
	marsRover process: 'l'.
	
	self assert: (logger printMarsRoverLog ) equals: (OrderedCollection with: 'North').
	self assert: (marsRover isAt: 1@1 heading: self north).! !
!LoggerPositionTest methodsFor: 'as yet unclassified' stamp: 'camila 10/29/2023 20:33:25' prior: 50652982!
test08MarsRoverMovesForwardHeadingWestIsLogged
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	logger := LoggerPosition with: marsRover .
	
	marsRover process: 'lf'.
	
	self assert: (logger printMarsRoverLog) equals: (OrderedCollection with: 0@1 ).
	self assert: (marsRover isAt: 0@1 heading: self west) 
	! !
!LoggerPositionTest methodsFor: 'as yet unclassified' stamp: 'camila 10/29/2023 20:33:25' prior: 50652928!
test05MarsRoverRotatesLeftIsntLogged
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	logger := LoggerPosition with: marsRover .
	
	marsRover process: 'l'.
	
	self assert: (logger printMarsRoverLog) equals: (OrderedCollection new).
	self assert: (marsRover isAt: 1@1 heading: self west) 
	! !

!methodRemoval: MarsRoverLogger #printLog stamp: 'camila 10/29/2023 20:33:25'!
printLog

	^log.!

!methodRemoval: MarsRoverLogger class #printLog stamp: 'camila 10/29/2023 20:33:25'!
printLog
	^log.!

!methodRemoval: LoggerHeading #printLog stamp: 'camila 10/29/2023 20:33:25'!
printLog
	^headingLog.!

!methodRemoval: LoggerHeadingPosition #printLog stamp: 'camila 10/29/2023 20:33:25'!
printLog
	^logHeadingPosition .!

!methodRemoval: LoggerPosition #printLog stamp: 'camila 10/29/2023 20:33:25'!
printLog
	^positionLog .!

!methodRemoval: MarsRoverLogger class #printMarsRoverLog stamp: 'camila 10/29/2023 20:33:34'!
printMarsRoverLog
	^log.!

!testRun: #LoggerHeadingTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/29/2023 20:33:47'!
ERROR!

!testRun: #LoggerHeadingTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/29/2023 20:33:47'!
ERROR!
!MarsRoverLogger class methodsFor: 'as yet unclassified' stamp: 'camila 10/29/2023 20:34:04'!
printMarsRoverLog
	self shouldBeImplemented.! !
!MarsRoverLogger class methodsFor: 'as yet unclassified' stamp: 'camila 10/29/2023 20:34:08' prior: 50655603!
printMarsRoverLog
	^log! !

!testRun: #LoggerHeadingTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/29/2023 20:34:09'!
FAILURE!

!testRun: #LoggerHeadingTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/29/2023 20:34:12'!
PASSED!
!LoggerHeadingTest methodsFor: 'testing' stamp: 'camila 10/29/2023 20:34:59' prior: 50655482!
test01NewMarsRoverWithEmptyLog
	| marsRover logger resLogger |
	
	marsRover := MarsRover at: 1@1 heading: self north. 
	logger :=MarsRoverLogger with: marsRover  follow: {$h} .
	
	resLogger := logger printMarsRoverLog.
	
	self assert: (logger printMarsRoverLog ) equals: OrderedCollection new.! !

!testRun: #LoggerHeadingTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/29/2023 20:35:06'!
FAILURE!
!MarsRoverLogger methodsFor: 'as yet unclassified' stamp: 'camila 10/29/2023 20:35:49' prior: 50655352!
printMarsRoverLog

	^OrderedCollection new.! !

!testRun: #LoggerHeadingTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/29/2023 20:35:53'!
FAILURE!

!testRun: #LoggerHeadingTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/29/2023 20:35:53'!
FAILURE!
!LoggerHeadingTest methodsFor: 'testing' stamp: 'camila 10/29/2023 20:38:06' prior: 50655443!
test02MarsRoverRotatesLeftLogsWest
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north. 
	logger :=MarsRoverLogger with: marsRover  follow: {$h}.
	
	marsRover process: 'l'.
	
	self assert: (logger printMarsRoverLog ) equals: (OrderedCollection with: 'West').
	self assert: (marsRover isAt: 1@1 heading: self west).! !
!LoggerHeadingTest methodsFor: 'testing' stamp: 'camila 10/29/2023 20:38:15' prior: 50655415!
test03MarsRoverRotatesRightLogsEast
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north. 
	logger :=MarsRoverLogger with: marsRover  follow: {$h}.
	
	marsRover process: 'r'.
	
	self assert: (logger printMarsRoverLog ) equals: (OrderedCollection with: 'East').
	self assert: (marsRover isAt: 1@1 heading: self east).! !
!LoggerHeadingTest methodsFor: 'testing' stamp: 'camila 10/29/2023 20:38:20' prior: 50655535!
test04MarsRoverRotatesNorthLogsNorth
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self east. 
	logger :=MarsRoverLogger with: marsRover  follow: {$h}.
	
	marsRover process: 'l'.
	
	self assert: (logger printMarsRoverLog ) equals: (OrderedCollection with: 'North').
	self assert: (marsRover isAt: 1@1 heading: self north).! !
!LoggerHeadingTest methodsFor: 'testing' stamp: 'camila 10/29/2023 20:38:25' prior: 50655457!
test05MarsRoverRotatesSouthLogsSouth
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north. 
	logger :=MarsRoverLogger with: marsRover  follow: {$h}.
	
	marsRover process: 'rf'.
	
	self assert: (logger printMarsRoverLog ) equals: (OrderedCollection with: 'East').
	self assert: (marsRover isAt: 2@1 heading: self east).! !

!classRemoval: #LoggerHeading stamp: 'camila 10/29/2023 20:38:40'!
MarsRoverLogger subclass: #LoggerHeading
	instanceVariableNames: 'marsRover headingLog'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!testRun: #LoggerHeadingTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/29/2023 20:38:51'!
FAILURE!

!testRun: #LoggerHeadingTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/29/2023 20:38:51'!
FAILURE!

!testRun: #LoggerHeadingTest #test02MarsRoverRotatesLeftLogsWest stamp: 'camila 10/29/2023 20:38:54'!
ERROR!

!testRun: #LoggerHeadingTest #test02MarsRoverRotatesLeftLogsWest stamp: 'camila 10/29/2023 20:38:54'!
ERROR!
!MarsRoverLogger methodsFor: 'as yet unclassified' stamp: 'camila 10/29/2023 20:39:07'!
log: anObjectValue 
	self shouldBeImplemented.
	log := anObjectValue! !
!MarsRoverLogger methodsFor: 'as yet unclassified' stamp: 'camila 10/29/2023 20:39:20' prior: 50655724!
log: anObjectValue 
	log add: anObjectValue! !

!testRun: #LoggerHeadingTest #test02MarsRoverRotatesLeftLogsWest stamp: 'camila 10/29/2023 20:39:20'!
ERROR!
!MarsRoverLogger methodsFor: 'initialization' stamp: 'camila 10/29/2023 20:39:53' prior: 50655330!
initializeWith: aMarsRover follow: attributesToFollow 
	marsRover1 := aMarsRover .
	log := OrderedCollection new.
	aMarsRover addLogger: self follow: attributesToFollow .
	! !

!testRun: #LoggerHeadingTest #test02MarsRoverRotatesLeftLogsWest stamp: 'camila 10/29/2023 20:39:59'!
FAILURE!

!testRun: #LoggerHeadingTest #test02MarsRoverRotatesLeftLogsWest stamp: 'camila 10/29/2023 20:39:59'!
FAILURE!

----SNAPSHOT----(29 October 2023 20:40:40) CuisUniversity-5981.image priorSource: 10317222!

!classRenamed: #MarsRoverLogger as: #MarsRoverLogger1 stamp: 'camila 10/29/2023 20:41:03'!
Smalltalk renameClassNamed: #MarsRoverLogger as: #MarsRoverLogger1!
!LoggerHeadingTest methodsFor: 'as yet unclassified' stamp: 'camila 10/29/2023 20:41:03' prior: 50655661!
test03MarsRoverRotatesRightLogsEast
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north. 
	logger :=MarsRoverLogger1 with: marsRover  follow: {$h}.
	
	marsRover process: 'r'.
	
	self assert: (logger printMarsRoverLog ) equals: (OrderedCollection with: 'East').
	self assert: (marsRover isAt: 1@1 heading: self east).! !
!LoggerHeadingTest methodsFor: 'as yet unclassified' stamp: 'camila 10/29/2023 20:41:03' prior: 50655675!
test04MarsRoverRotatesNorthLogsNorth
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self east. 
	logger :=MarsRoverLogger1 with: marsRover  follow: {$h}.
	
	marsRover process: 'l'.
	
	self assert: (logger printMarsRoverLog ) equals: (OrderedCollection with: 'North').
	self assert: (marsRover isAt: 1@1 heading: self north).! !
!LoggerHeadingTest methodsFor: 'as yet unclassified' stamp: 'camila 10/29/2023 20:41:03' prior: 50655647!
test02MarsRoverRotatesLeftLogsWest
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north. 
	logger :=MarsRoverLogger1 with: marsRover  follow: {$h}.
	
	marsRover process: 'l'.
	
	self assert: (logger printMarsRoverLog ) equals: (OrderedCollection with: 'West').
	self assert: (marsRover isAt: 1@1 heading: self west).! !
!LoggerHeadingTest methodsFor: 'as yet unclassified' stamp: 'camila 10/29/2023 20:41:03' prior: 50655689!
test05MarsRoverRotatesSouthLogsSouth
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north. 
	logger :=MarsRoverLogger1 with: marsRover  follow: {$h}.
	
	marsRover process: 'rf'.
	
	self assert: (logger printMarsRoverLog ) equals: (OrderedCollection with: 'East').
	self assert: (marsRover isAt: 2@1 heading: self east).! !
!LoggerHeadingTest methodsFor: 'as yet unclassified' stamp: 'camila 10/29/2023 20:41:03' prior: 50655619!
test01NewMarsRoverWithEmptyLog
	| marsRover logger resLogger |
	
	marsRover := MarsRover at: 1@1 heading: self north. 
	logger :=MarsRoverLogger1 with: marsRover  follow: {$h} .
	
	resLogger := logger printMarsRoverLog.
	
	self assert: (logger printMarsRoverLog ) equals: OrderedCollection new.! !

Object subclass: #MarsRoverLogger
	instanceVariableNames: 'marsRover log '
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #MarsRoverLogger category: 'MarsRover-WithHeading' stamp: 'camila 10/29/2023 20:41:39'!
Object subclass: #MarsRoverLogger
	instanceVariableNames: 'marsRover log'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MarsRoverLogger methodsFor: 'no messages' stamp: 'camila 10/29/2023 20:41:56'!
initializeWith: aMarsRover follow: attributesToFollow 
	marsRover := aMarsRover .
	log := OrderedCollection new.
	aMarsRover addLogger: self follow: attributesToFollow .
	! !
!MarsRoverLogger methodsFor: 'as yet unclassified' stamp: 'camila 10/29/2023 20:42:20'!
log: anObjectValue 
	log add: anObjectValue
	! !
!MarsRoverLogger methodsFor: 'as yet unclassified' stamp: 'camila 10/29/2023 20:42:29'!
printMarsRoverLog

	^OrderedCollection new.! !
!LoggerHeadingTest methodsFor: 'testing' stamp: 'camila 10/29/2023 20:42:40' prior: 50655821!
test01NewMarsRoverWithEmptyLog
	| marsRover logger resLogger |
	
	marsRover := MarsRover at: 1@1 heading: self north. 
	logger :=MarsRoverLogger with: marsRover  follow: {$h} .
	
	resLogger := logger printMarsRoverLog.
	
	self assert: (logger printMarsRoverLog ) equals: OrderedCollection new.! !

!testRun: #LoggerHeadingTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/29/2023 20:42:49'!
ERROR!
!MarsRoverLogger class methodsFor: 'instance creation' stamp: 'camila 10/29/2023 20:42:58'!
with: marsRover follow: aRenameMe1 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeWith: marsRover follow: aRenameMe1 ! !
!MarsRoverLogger class methodsFor: 'instance creation' stamp: 'camila 10/29/2023 20:43:14' prior: 50655881!
with: aMarsRover follow: attributesToFollow 
	^self new initializeWith: aMarsRover follow: attributesToFollow ! !

!testRun: #LoggerHeadingTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/29/2023 20:43:15'!
PASSED!

!testRun: #LoggerHeadingTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/29/2023 20:43:18'!
PASSED!
!LoggerHeadingTest methodsFor: 'testing' stamp: 'camila 10/29/2023 20:43:29' prior: 50655792!
test02MarsRoverRotatesLeftLogsWest
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north. 
	logger :=MarsRoverLogger with: marsRover  follow: {$h}.
	
	marsRover process: 'l'.
	
	self assert: (logger printMarsRoverLog ) equals: (OrderedCollection with: 'West').
	self assert: (marsRover isAt: 1@1 heading: self west).! !

!testRun: #LoggerHeadingTest #test02MarsRoverRotatesLeftLogsWest stamp: 'camila 10/29/2023 20:43:31'!
FAILURE!
!MarsRoverLogger methodsFor: 'as yet unclassified' stamp: 'camila 10/29/2023 20:43:46' prior: 50655860!
printMarsRoverLog

	^log.! !

!testRun: #LoggerHeadingTest #test02MarsRoverRotatesLeftLogsWest stamp: 'camila 10/29/2023 20:43:46'!
FAILURE!
!MarsRoverLogger methodsFor: 'as yet unclassified' stamp: 'camila 10/29/2023 20:45:08' prior: 50655855!
log: anObjectValue 
	log add: (anObjectValue headingName)
	! !

!testRun: #LoggerHeadingTest #test02MarsRoverRotatesLeftLogsWest stamp: 'camila 10/29/2023 20:45:09'!
PASSED!

!testRun: #LoggerHeadingTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/29/2023 20:45:09'!
PASSED!

!testRun: #LoggerHeadingTest #test02MarsRoverRotatesLeftLogsWest stamp: 'camila 10/29/2023 20:45:09'!
PASSED!

!testRun: #LoggerHeadingTest #test03MarsRoverRotatesRightLogsEast stamp: 'camila 10/29/2023 20:45:09'!
FAILURE!

!testRun: #LoggerHeadingTest #test04MarsRoverRotatesNorthLogsNorth stamp: 'camila 10/29/2023 20:45:09'!
FAILURE!

!testRun: #LoggerHeadingTest #test05MarsRoverRotatesSouthLogsSouth stamp: 'camila 10/29/2023 20:45:09'!
FAILURE!

!testRun: #LoggerHeadingTest #test03MarsRoverRotatesRightLogsEast stamp: 'camila 10/29/2023 20:45:13'!
FAILURE!
!MarsRoverLogger1 methodsFor: 'as yet unclassified' stamp: 'camila 10/29/2023 20:45:46' prior: 50655730!
log: anObjectValue 
	log add: (anObjectValue headingName).! !

!testRun: #LoggerHeadingTest #test03MarsRoverRotatesRightLogsEast stamp: 'camila 10/29/2023 20:45:48'!
FAILURE!
!LoggerHeadingTest methodsFor: 'testing' stamp: 'camila 10/29/2023 20:46:05' prior: 50655762!
test03MarsRoverRotatesRightLogsEast
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north. 
	logger :=MarsRoverLogger with: marsRover  follow: {$h}.
	
	marsRover process: 'r'.
	
	self assert: (logger printMarsRoverLog ) equals: (OrderedCollection with: 'East').
	self assert: (marsRover isAt: 1@1 heading: self east).! !

!testRun: #LoggerHeadingTest #test03MarsRoverRotatesRightLogsEast stamp: 'camila 10/29/2023 20:46:07'!
PASSED!
!LoggerHeadingTest methodsFor: 'testing' stamp: 'camila 10/29/2023 20:46:14' prior: 50655777!
test04MarsRoverRotatesNorthLogsNorth
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self east. 
	logger :=MarsRoverLogger with: marsRover  follow: {$h}.
	
	marsRover process: 'l'.
	
	self assert: (logger printMarsRoverLog ) equals: (OrderedCollection with: 'North').
	self assert: (marsRover isAt: 1@1 heading: self north).! !
!LoggerHeadingTest methodsFor: 'testing' stamp: 'camila 10/29/2023 20:46:18' prior: 50655806!
test05MarsRoverRotatesSouthLogsSouth
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north. 
	logger :=MarsRoverLogger with: marsRover  follow: {$h}.
	
	marsRover process: 'rf'.
	
	self assert: (logger printMarsRoverLog ) equals: (OrderedCollection with: 'East').
	self assert: (marsRover isAt: 2@1 heading: self east).! !

!testRun: #LoggerHeadingTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/29/2023 20:46:20'!
PASSED!

!testRun: #LoggerHeadingTest #test02MarsRoverRotatesLeftLogsWest stamp: 'camila 10/29/2023 20:46:20'!
PASSED!

!testRun: #LoggerHeadingTest #test03MarsRoverRotatesRightLogsEast stamp: 'camila 10/29/2023 20:46:20'!
PASSED!

!testRun: #LoggerHeadingTest #test04MarsRoverRotatesNorthLogsNorth stamp: 'camila 10/29/2023 20:46:20'!
PASSED!

!testRun: #LoggerHeadingTest #test05MarsRoverRotatesSouthLogsSouth stamp: 'camila 10/29/2023 20:46:20'!
PASSED!

----SNAPSHOT----(29 October 2023 20:46:43) CuisUniversity-5981.image priorSource: 10371279!
!LoggerPositionTest methodsFor: 'testing' stamp: 'camila 10/29/2023 20:47:04' prior: 50655471!
test01NewMarsRoverWithEmptyLog
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north. 
	logger :=MarsRoverLogger with: marsRover follow: {$p} .
	
	self assert: (logger printMarsRoverLog ) equals: OrderedCollection new.! !

!testRun: #LoggerPositionTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/29/2023 20:47:07'!
PASSED!
!LoggerPositionTest methodsFor: 'testing' stamp: 'camila 10/29/2023 20:47:29' prior: 50655521!
test02MarsRoverMovesToNorthLogsNewPosition
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	logger := MarsRoverLogger with: marsRover  follow: {$p}.
	
	marsRover process: 'f'.
	
	self assert: (logger printMarsRoverLog) equals: (OrderedCollection with: 1@2).
	self assert: (marsRover isAt: 1@2 heading: self north) 
	! !

!testRun: #LoggerPositionTest #test02MarsRoverMovesToNorthLogsNewPosition stamp: 'camila 10/29/2023 20:47:32'!
ERROR!

!testRun: #LoggerPositionTest #test02MarsRoverMovesToNorthLogsNewPosition stamp: 'camila 10/29/2023 20:47:32'!
ERROR!

!testRun: #LoggerPositionTest #test02MarsRoverMovesToNorthLogsNewPosition stamp: 'camila 10/29/2023 20:48:08'!
ERROR!

!testRun: #LoggerPositionTest #test02MarsRoverMovesToNorthLogsNewPosition stamp: 'camila 10/29/2023 20:48:08'!
ERROR!

1@2 value!
!MarsRoverHeading methodsFor: 'heading' stamp: 'camila 10/29/2023 20:53:58' overrides: 16902254!
value

	self subclassResponsibility! !
!MarsRoverHeadingEast methodsFor: 'heading' stamp: 'camila 10/29/2023 20:53:58' overrides: 50656080!
value
	^'East'.! !
!MarsRoverHeadingNorth methodsFor: 'heading' stamp: 'camila 10/29/2023 20:53:58' overrides: 50656080!
value
	^ 'North'.! !
!MarsRoverHeadingSouth methodsFor: 'heading' stamp: 'camila 10/29/2023 20:53:58' overrides: 50656080!
value
	^ 'South'.! !
!MarsRoverHeadingWest methodsFor: 'heading' stamp: 'camila 10/29/2023 20:53:59' overrides: 50656080!
value
	^'West'.! !
!MarsRoverLogger1 methodsFor: 'as yet unclassified' stamp: 'camila 10/29/2023 20:53:59' prior: 50655961!
log: anObjectValue 
	log add: (anObjectValue value).! !
!LoggerHeadingPosition methodsFor: 'as yet unclassified' stamp: 'camila 10/29/2023 20:53:59' prior: 50653860 overrides: 50654047!
logHeading: aHeading
	logHeadingPosition add: aHeading value.! !
!MarsRoverLogger methodsFor: 'as yet unclassified' stamp: 'camila 10/29/2023 20:53:59' prior: 50655931!
log: anObjectValue 
	log add: (anObjectValue value)
	! !

!methodRemoval: MarsRoverHeading #headingName stamp: 'camila 10/29/2023 20:53:59'!
headingName

	self subclassResponsibility!

!methodRemoval: MarsRoverHeadingEast #headingName stamp: 'camila 10/29/2023 20:53:59'!
headingName
	^'East'.!

!methodRemoval: MarsRoverHeadingNorth #headingName stamp: 'camila 10/29/2023 20:53:59'!
headingName
	^ 'North'.!

!methodRemoval: MarsRoverHeadingSouth #headingName stamp: 'camila 10/29/2023 20:53:59'!
headingName
	^ 'South'.!

!methodRemoval: MarsRoverHeadingWest #headingName stamp: 'camila 10/29/2023 20:53:59'!
headingName
	^'West'.!

!testRun: #LoggerPositionTest #test02MarsRoverMovesToNorthLogsNewPosition stamp: 'camila 10/29/2023 20:54:15'!
PASSED!

!testRun: #LoggerPositionTest #test03MarsRoverMovesToNorthTwice stamp: 'camila 10/29/2023 20:54:17'!
ERROR!

!testRun: #LoggerPositionTest #test03MarsRoverMovesToNorthTwice stamp: 'camila 10/29/2023 20:54:17'!
ERROR!
!LoggerPositionTest methodsFor: 'testing' stamp: 'camila 10/29/2023 20:54:46' prior: 50655389!
test03MarsRoverMovesToNorthTwice
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	logger := MarsRoverLogger with: marsRover  follow: {$p}.
	
	marsRover process: 'ff'.
	
	self assert: (logger printMarsRoverLog) equals: (OrderedCollection with: 1@2 with: 1@3 ).
	self assert: (marsRover isAt: 1@3 heading: self north) 
	! !

!testRun: #LoggerPositionTest #test03MarsRoverMovesToNorthTwice stamp: 'camila 10/29/2023 20:54:47'!
PASSED!

!testRun: #LoggerPositionTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/29/2023 20:54:47'!
PASSED!

!testRun: #LoggerPositionTest #test02MarsRoverMovesToNorthLogsNewPosition stamp: 'camila 10/29/2023 20:54:47'!
PASSED!

!testRun: #LoggerPositionTest #test03MarsRoverMovesToNorthTwice stamp: 'camila 10/29/2023 20:54:48'!
PASSED!

!testRun: #LoggerPositionTest #test04MarsRoverMovesBackward stamp: 'camila 10/29/2023 20:54:48'!
ERROR!

!testRun: #LoggerPositionTest #test05MarsRoverRotatesLeftIsntLogged stamp: 'camila 10/29/2023 20:54:48'!
ERROR!

!testRun: #LoggerPositionTest #test06MarsRoverRotatesRightIsntLogged stamp: 'camila 10/29/2023 20:54:48'!
ERROR!

!testRun: #LoggerPositionTest #test07MarsRoverMovesForwardHeadingEastIsLogged stamp: 'camila 10/29/2023 20:54:48'!
ERROR!

!testRun: #LoggerPositionTest #test08MarsRoverMovesForwardHeadingWestIsLogged stamp: 'camila 10/29/2023 20:54:48'!
ERROR!
!LoggerPositionTest methodsFor: 'testing' stamp: 'camila 10/29/2023 20:54:54' prior: 50655429!
test04MarsRoverMovesBackward
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	logger := MarsRoverLogger with: marsRover  follow: {$p}.
	
	marsRover process: 'b'.
	
	self assert: (logger printMarsRoverLog) equals: (OrderedCollection with: 1@0).
	self assert: (marsRover isAt: 1@0 heading: self north) 
	! !
!LoggerPositionTest methodsFor: 'testing' stamp: 'camila 10/29/2023 20:54:59' prior: 50655563!
test05MarsRoverRotatesLeftIsntLogged
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	logger := MarsRoverLogger with: marsRover  follow: {$p}.
	
	marsRover process: 'l'.
	
	self assert: (logger printMarsRoverLog) equals: (OrderedCollection new).
	self assert: (marsRover isAt: 1@1 heading: self west) 
	! !
!LoggerPositionTest methodsFor: 'testing' stamp: 'camila 10/29/2023 20:55:04' prior: 50655507!
test06MarsRoverRotatesRightIsntLogged
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	logger := MarsRoverLogger with: marsRover  follow: {$p}.
	
	marsRover process: 'r'.
	
	self assert: (logger printMarsRoverLog) equals: (OrderedCollection new).
	self assert: (marsRover isAt: 1@1 heading: self east) 
	! !
!LoggerPositionTest methodsFor: 'testing' stamp: 'camila 10/29/2023 20:55:09' prior: 50655493!
test07MarsRoverMovesForwardHeadingEastIsLogged
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	logger := MarsRoverLogger with: marsRover  follow: {$p}.
	
	marsRover process: 'rf'.
	
	self assert: (logger printMarsRoverLog) equals: (OrderedCollection with: 2@1 ).
	self assert: (marsRover isAt: 2@1 heading: self east) 
	! !
!LoggerPositionTest methodsFor: 'testing' stamp: 'camila 10/29/2023 20:55:14' prior: 50655549!
test08MarsRoverMovesForwardHeadingWestIsLogged
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	logger := MarsRoverLogger with: marsRover  follow: {$p}.
	
	marsRover process: 'lf'.
	
	self assert: (logger printMarsRoverLog) equals: (OrderedCollection with: 0@1 ).
	self assert: (marsRover isAt: 0@1 heading: self west) 
	! !

!testRun: #LoggerPositionTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/29/2023 20:55:17'!
PASSED!

!testRun: #LoggerPositionTest #test02MarsRoverMovesToNorthLogsNewPosition stamp: 'camila 10/29/2023 20:55:17'!
PASSED!

!testRun: #LoggerPositionTest #test03MarsRoverMovesToNorthTwice stamp: 'camila 10/29/2023 20:55:17'!
PASSED!

!testRun: #LoggerPositionTest #test04MarsRoverMovesBackward stamp: 'camila 10/29/2023 20:55:17'!
ERROR!

!testRun: #LoggerPositionTest #test05MarsRoverRotatesLeftIsntLogged stamp: 'camila 10/29/2023 20:55:17'!
PASSED!

!testRun: #LoggerPositionTest #test06MarsRoverRotatesRightIsntLogged stamp: 'camila 10/29/2023 20:55:17'!
PASSED!

!testRun: #LoggerPositionTest #test07MarsRoverMovesForwardHeadingEastIsLogged stamp: 'camila 10/29/2023 20:55:17'!
PASSED!

!testRun: #LoggerPositionTest #test08MarsRoverMovesForwardHeadingWestIsLogged stamp: 'camila 10/29/2023 20:55:17'!
PASSED!

!testRun: #LoggerPositionTest #test04MarsRoverMovesBackward stamp: 'camila 10/29/2023 20:55:17'!
ERROR!
!MarsRover methodsFor: 'moving' stamp: 'camila 10/29/2023 20:55:38' prior: 50650564!
moveBackward
	
	(head objectValue) moveBackward! !

!testRun: #LoggerPositionTest #test04MarsRoverMovesBackward stamp: 'camila 10/29/2023 20:55:39'!
PASSED!

!testRun: #LoggerPositionTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/29/2023 20:55:42'!
PASSED!

!testRun: #LoggerPositionTest #test02MarsRoverMovesToNorthLogsNewPosition stamp: 'camila 10/29/2023 20:55:42'!
PASSED!

!testRun: #LoggerPositionTest #test03MarsRoverMovesToNorthTwice stamp: 'camila 10/29/2023 20:55:42'!
PASSED!

!testRun: #LoggerPositionTest #test04MarsRoverMovesBackward stamp: 'camila 10/29/2023 20:55:42'!
PASSED!

!testRun: #LoggerPositionTest #test05MarsRoverRotatesLeftIsntLogged stamp: 'camila 10/29/2023 20:55:42'!
PASSED!

!testRun: #LoggerPositionTest #test06MarsRoverRotatesRightIsntLogged stamp: 'camila 10/29/2023 20:55:42'!
PASSED!

!testRun: #LoggerPositionTest #test07MarsRoverMovesForwardHeadingEastIsLogged stamp: 'camila 10/29/2023 20:55:42'!
PASSED!

!testRun: #LoggerPositionTest #test08MarsRoverMovesForwardHeadingWestIsLogged stamp: 'camila 10/29/2023 20:55:42'!
PASSED!

!testRun: #LoggerHeadingTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/29/2023 20:55:45'!
PASSED!

!testRun: #LoggerHeadingTest #test02MarsRoverRotatesLeftLogsWest stamp: 'camila 10/29/2023 20:55:45'!
PASSED!

!testRun: #LoggerHeadingTest #test03MarsRoverRotatesRightLogsEast stamp: 'camila 10/29/2023 20:55:45'!
PASSED!

!testRun: #LoggerHeadingTest #test04MarsRoverRotatesNorthLogsNorth stamp: 'camila 10/29/2023 20:55:45'!
PASSED!

!testRun: #LoggerHeadingTest #test05MarsRoverRotatesSouthLogsSouth stamp: 'camila 10/29/2023 20:55:45'!
PASSED!

!testRun: #LoggerPositionTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/29/2023 20:55:47'!
PASSED!

!testRun: #LoggerPositionTest #test02MarsRoverMovesToNorthLogsNewPosition stamp: 'camila 10/29/2023 20:55:47'!
PASSED!

!testRun: #LoggerPositionTest #test03MarsRoverMovesToNorthTwice stamp: 'camila 10/29/2023 20:55:47'!
PASSED!

!testRun: #LoggerPositionTest #test04MarsRoverMovesBackward stamp: 'camila 10/29/2023 20:55:47'!
PASSED!

!testRun: #LoggerPositionTest #test05MarsRoverRotatesLeftIsntLogged stamp: 'camila 10/29/2023 20:55:47'!
PASSED!

!testRun: #LoggerPositionTest #test06MarsRoverRotatesRightIsntLogged stamp: 'camila 10/29/2023 20:55:47'!
PASSED!

!testRun: #LoggerPositionTest #test07MarsRoverMovesForwardHeadingEastIsLogged stamp: 'camila 10/29/2023 20:55:47'!
PASSED!

!testRun: #LoggerPositionTest #test08MarsRoverMovesForwardHeadingWestIsLogged stamp: 'camila 10/29/2023 20:55:47'!
PASSED!

!testRun: #LoggerHeadingTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/29/2023 20:55:49'!
PASSED!

!testRun: #LoggerHeadingTest #test02MarsRoverRotatesLeftLogsWest stamp: 'camila 10/29/2023 20:55:49'!
PASSED!

!testRun: #LoggerHeadingTest #test03MarsRoverRotatesRightLogsEast stamp: 'camila 10/29/2023 20:55:49'!
PASSED!

!testRun: #LoggerHeadingTest #test04MarsRoverRotatesNorthLogsNorth stamp: 'camila 10/29/2023 20:55:49'!
PASSED!

!testRun: #LoggerHeadingTest #test05MarsRoverRotatesSouthLogsSouth stamp: 'camila 10/29/2023 20:55:49'!
PASSED!
!LoggerHeadingPositionTest methodsFor: 'as yet unclassified' stamp: 'camila 10/29/2023 20:56:09' prior: 50655376!
test02MarsRoverMovesForwardAndRotatesEast

	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north. 
	logger :=MarsRoverLogger with: marsRover  follow: {$h, $p} .
	marsRover process: 'fr'.
	
	self assert: (logger printMarsRoverLog ) equals: (OrderedCollection with: 1@2 with: 'East').! !

----SNAPSHOT----(29 October 2023 20:56:12) CuisUniversity-5981.image priorSource: 10380227!

----SNAPSHOT----(29 October 2023 20:56:25) CuisUniversity-5981.image priorSource: 10392306!

!testRun: #LoggerHeadingPositionTest #test01MarsRoverNewWithEmptyLog stamp: 'camila 10/29/2023 20:56:28'!
PASSED!

!testRun: #LoggerHeadingPositionTest #test02MarsRoverMovesForwardAndRotatesEast stamp: 'camila 10/29/2023 20:56:32'!
ERROR!

!testRun: #LoggerHeadingPositionTest #test02MarsRoverMovesForwardAndRotatesEast stamp: 'camila 10/29/2023 20:56:32'!
ERROR!
!LoggerHeadingPositionTest methodsFor: 'as yet unclassified' stamp: 'camila 10/29/2023 20:56:47' prior: 50655404!
test01MarsRoverNewWithEmptyLog

	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north. 
	logger :=MarsRoverLogger with: marsRover  follow: {$h, $p} .
	
	self assert: (logger printMarsRoverLog ) equals: OrderedCollection new.! !

!testRun: #LoggerHeadingPositionTest #test01MarsRoverNewWithEmptyLog stamp: 'camila 10/29/2023 20:56:50'!
ERROR!

!testRun: #LoggerHeadingPositionTest #test01MarsRoverNewWithEmptyLog stamp: 'camila 10/29/2023 20:56:50'!
ERROR!
!LoggerHeadingPositionTest methodsFor: 'as yet unclassified' stamp: 'camila 10/29/2023 20:57:18' prior: 50656429!
test01MarsRoverNewWithEmptyLog

	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north. 
	logger :=MarsRoverLogger with: marsRover  follow: (OrderedCollection with: $h with:$p).
	
	self assert: (logger printMarsRoverLog ) equals: OrderedCollection new.! !

!testRun: #LoggerHeadingPositionTest #test01MarsRoverNewWithEmptyLog stamp: 'camila 10/29/2023 20:57:20'!
PASSED!

!testRun: #LoggerHeadingPositionTest #test01MarsRoverNewWithEmptyLog stamp: 'camila 10/29/2023 20:57:20'!
PASSED!

!testRun: #LoggerHeadingPositionTest #test02MarsRoverMovesForwardAndRotatesEast stamp: 'camila 10/29/2023 20:57:20'!
ERROR!

!testRun: #LoggerHeadingPositionTest #test02MarsRoverMovesForwardAndRotatesEast stamp: 'camila 10/29/2023 20:57:20'!
ERROR!
!LoggerHeadingPositionTest methodsFor: 'as yet unclassified' stamp: 'camila 10/29/2023 20:57:31' prior: 50656398!
test02MarsRoverMovesForwardAndRotatesEast

	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north. 
	logger :=MarsRoverLogger with: marsRover  follow: (OrderedCollection with: $h with:$p).
	marsRover process: 'fr'.
	
	self assert: (logger printMarsRoverLog ) equals: (OrderedCollection with: 1@2 with: 'East').! !

!testRun: #LoggerHeadingPositionTest #test02MarsRoverMovesForwardAndRotatesEast stamp: 'camila 10/29/2023 20:57:32'!
PASSED!

!testRun: #LoggerHeadingPositionTest #test01MarsRoverNewWithEmptyLog stamp: 'camila 10/29/2023 20:57:32'!
PASSED!

!testRun: #LoggerHeadingPositionTest #test02MarsRoverMovesForwardAndRotatesEast stamp: 'camila 10/29/2023 20:57:32'!
PASSED!

!testRun: #LoggerHeadingTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/29/2023 20:57:35'!
PASSED!

!testRun: #LoggerHeadingTest #test02MarsRoverRotatesLeftLogsWest stamp: 'camila 10/29/2023 20:57:35'!
PASSED!

!testRun: #LoggerHeadingTest #test03MarsRoverRotatesRightLogsEast stamp: 'camila 10/29/2023 20:57:35'!
PASSED!

!testRun: #LoggerHeadingTest #test04MarsRoverRotatesNorthLogsNorth stamp: 'camila 10/29/2023 20:57:35'!
PASSED!

!testRun: #LoggerHeadingTest #test05MarsRoverRotatesSouthLogsSouth stamp: 'camila 10/29/2023 20:57:35'!
PASSED!

!testRun: #LoggerPositionTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/29/2023 20:57:37'!
PASSED!

!testRun: #LoggerPositionTest #test02MarsRoverMovesToNorthLogsNewPosition stamp: 'camila 10/29/2023 20:57:37'!
PASSED!

!testRun: #LoggerPositionTest #test03MarsRoverMovesToNorthTwice stamp: 'camila 10/29/2023 20:57:37'!
PASSED!

!testRun: #LoggerPositionTest #test04MarsRoverMovesBackward stamp: 'camila 10/29/2023 20:57:37'!
PASSED!

!testRun: #LoggerPositionTest #test05MarsRoverRotatesLeftIsntLogged stamp: 'camila 10/29/2023 20:57:37'!
PASSED!

!testRun: #LoggerPositionTest #test06MarsRoverRotatesRightIsntLogged stamp: 'camila 10/29/2023 20:57:37'!
PASSED!

!testRun: #LoggerPositionTest #test07MarsRoverMovesForwardHeadingEastIsLogged stamp: 'camila 10/29/2023 20:57:37'!
PASSED!

!testRun: #LoggerPositionTest #test08MarsRoverMovesForwardHeadingWestIsLogged stamp: 'camila 10/29/2023 20:57:37'!
PASSED!

!testRun: #LoggerHeadingPositionTest #test01MarsRoverNewWithEmptyLog stamp: 'camila 10/29/2023 20:57:39'!
PASSED!

!testRun: #LoggerHeadingPositionTest #test02MarsRoverMovesForwardAndRotatesEast stamp: 'camila 10/29/2023 20:57:39'!
PASSED!

----SNAPSHOT----(29 October 2023 20:57:48) CuisUniversity-5981.image priorSource: 10392399!

!classRemoval: #LoggerHeadingPosition stamp: 'camila 10/29/2023 20:58:00'!
MarsRoverLogger1 subclass: #LoggerHeadingPosition
	instanceVariableNames: 'logHeadingPosition marsRover'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classRemoval: #LoggerPosition stamp: 'camila 10/29/2023 20:58:00'!
MarsRoverLogger1 subclass: #LoggerPosition
	instanceVariableNames: 'marsRover positionLog'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classRemoval: #MarsRoverLogger1 stamp: 'camila 10/29/2023 20:58:00'!
Object subclass: #MarsRoverLogger1
	instanceVariableNames: 'marsRover1 attributes1 log'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!testRun: #LoggerPositionTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/29/2023 20:58:03'!
PASSED!

!testRun: #LoggerPositionTest #test02MarsRoverMovesToNorthLogsNewPosition stamp: 'camila 10/29/2023 20:58:03'!
PASSED!

!testRun: #LoggerPositionTest #test03MarsRoverMovesToNorthTwice stamp: 'camila 10/29/2023 20:58:03'!
PASSED!

!testRun: #LoggerPositionTest #test04MarsRoverMovesBackward stamp: 'camila 10/29/2023 20:58:03'!
PASSED!

!testRun: #LoggerPositionTest #test05MarsRoverRotatesLeftIsntLogged stamp: 'camila 10/29/2023 20:58:03'!
PASSED!

!testRun: #LoggerPositionTest #test06MarsRoverRotatesRightIsntLogged stamp: 'camila 10/29/2023 20:58:03'!
PASSED!

!testRun: #LoggerPositionTest #test07MarsRoverMovesForwardHeadingEastIsLogged stamp: 'camila 10/29/2023 20:58:03'!
PASSED!

!testRun: #LoggerPositionTest #test08MarsRoverMovesForwardHeadingWestIsLogged stamp: 'camila 10/29/2023 20:58:03'!
PASSED!

!testRun: #LoggerHeadingTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/29/2023 20:58:04'!
PASSED!

!testRun: #LoggerHeadingTest #test02MarsRoverRotatesLeftLogsWest stamp: 'camila 10/29/2023 20:58:04'!
PASSED!

!testRun: #LoggerHeadingTest #test03MarsRoverRotatesRightLogsEast stamp: 'camila 10/29/2023 20:58:04'!
PASSED!

!testRun: #LoggerHeadingTest #test04MarsRoverRotatesNorthLogsNorth stamp: 'camila 10/29/2023 20:58:04'!
PASSED!

!testRun: #LoggerHeadingTest #test05MarsRoverRotatesSouthLogsSouth stamp: 'camila 10/29/2023 20:58:04'!
PASSED!

!testRun: #LoggerHeadingPositionTest #test01MarsRoverNewWithEmptyLog stamp: 'camila 10/29/2023 20:58:05'!
PASSED!

!testRun: #LoggerHeadingPositionTest #test02MarsRoverMovesForwardAndRotatesEast stamp: 'camila 10/29/2023 20:58:05'!
PASSED!

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'camila 10/29/2023 20:58:08'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'camila 10/29/2023 20:58:08'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'camila 10/29/2023 20:58:08'!
PASSED!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'camila 10/29/2023 20:58:08'!
PASSED!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'camila 10/29/2023 20:58:08'!
PASSED!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'camila 10/29/2023 20:58:08'!
PASSED!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'camila 10/29/2023 20:58:08'!
PASSED!

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'camila 10/29/2023 20:58:08'!
PASSED!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'camila 10/29/2023 20:58:08'!
PASSED!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'camila 10/29/2023 20:58:08'!
PASSED!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'camila 10/29/2023 20:58:08'!
PASSED!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'camila 10/29/2023 20:58:08'!
PASSED!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'camila 10/29/2023 20:58:08'!
PASSED!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'camila 10/29/2023 20:58:08'!
PASSED!

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'camila 10/29/2023 20:58:08'!
PASSED!

----SNAPSHOT----(29 October 2023 20:58:12) CuisUniversity-5981.image priorSource: 10396914!

----SNAPSHOT----(29 October 2023 21:00:18) CuisUniversity-5981.image priorSource: 10401278!

----STARTUP---- (29 October 2023 23:05:35) as /home/camila/Desktop/CUIS MARS ROVER 2/linux64/CuisUniversity-5981.image!


TestCase subclass: #WindowLoggerTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #WindowLoggerTest category: 'MarsRover-WithHeading' stamp: 'camila 10/29/2023 23:06:41'!
TestCase subclass: #WindowLoggerTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!WindowLoggerTest methodsFor: 'no messages' stamp: 'camila 10/29/2023 23:06:54'!
east

	^ MarsRoverHeadingEast ! !
!WindowLoggerTest methodsFor: 'as yet unclassified' stamp: 'camila 10/29/2023 23:07:06'!
north

	^ MarsRoverHeadingNorth ! !
!WindowLoggerTest methodsFor: 'as yet unclassified' stamp: 'camila 10/29/2023 23:07:20'!
south

	^ MarsRoverHeadingSouth ! !
!WindowLoggerTest methodsFor: 'as yet unclassified' stamp: 'camila 10/29/2023 23:07:30'!
west

	^ MarsRoverHeadingWest ! !

!classDefinition: #MarsRoverWindowLogger category: 'MarsRover-WithHeading' stamp: 'camila 10/29/2023 23:09:57'!
Object subclass: #MarsRoverWindowLogger
	instanceVariableNames: 'marsRover log'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!WindowLoggerTest methodsFor: 'as yet unclassified' stamp: 'camila 10/29/2023 23:09:44'!
test01NewMarsRoverWithEmptyWindowLog
	| marsRover logger |
	
	marsRover := MarsRover at: 1@1 heading: self north. 
	logger :=MarsRoverWindowLogger with: marsRover  follow: {$h} .
	
	
	self assert: (logger printMarsRoverLog ) equals: OrderedCollection new.! !

!testRun: #WindowLoggerTest #test01NewMarsRoverWithEmptyWindowLog stamp: 'camila 10/29/2023 23:10:50'!
ERROR!
!MarsRoverWindowLogger class methodsFor: 'instance creation' stamp: 'camila 10/29/2023 23:10:58'!
with: marsRover follow: aRenameMe1 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeWith: marsRover follow: aRenameMe1 ! !
!MarsRoverWindowLogger class methodsFor: 'instance creation' stamp: 'camila 10/29/2023 23:11:17' prior: 50656753!
with: marsRover follow: attributesToFollow 
	^self new initializeWith: marsRover follow: attributesToFollow ! !

!testRun: #WindowLoggerTest #test01NewMarsRoverWithEmptyWindowLog stamp: 'camila 10/29/2023 23:11:18'!
ERROR!

!classDefinition: #MarsRoverWindowLogger category: 'MarsRover-WithHeading' stamp: 'camila 10/29/2023 23:11:24'!
Object subclass: #MarsRoverWindowLogger
	instanceVariableNames: 'marsRover log marsRover_CHANGE_ME'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #MarsRoverWindowLogger category: 'MarsRover-WithHeading' stamp: 'camila 10/29/2023 23:11:24'!
Object subclass: #MarsRoverWindowLogger
	instanceVariableNames: 'marsRover log marsRover_CHANGE_ME attributesToFollow_CHANGE_ME'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MarsRoverWindowLogger class methodsFor: 'instance creation' stamp: 'camila 10/29/2023 23:11:44' prior: 50656763!
with: aMarsRover follow: attributesToFollow 
	^self new initializeWith: aMarsRover follow: attributesToFollow ! !

!testRun: #WindowLoggerTest #test01NewMarsRoverWithEmptyWindowLog stamp: 'camila 10/29/2023 23:11:50'!
ERROR!

!testRun: #WindowLoggerTest #test01NewMarsRoverWithEmptyWindowLog stamp: 'camila 10/29/2023 23:11:50'!
ERROR!
!MarsRoverWindowLogger methodsFor: 'initialization' stamp: 'camila 10/29/2023 23:11:55'!
initializeWith: aMarsRover follow: attributesToFollow 
	self shouldBeImplemented.
	marsRover := aMarsRover.
	attributesToFollow_CHANGE_ME := attributesToFollow.! !
!MarsRoverWindowLogger methodsFor: 'initialization' stamp: 'camila 10/29/2023 23:12:33' prior: 50656807!
initializeWith: aMarsRover follow: attributesToFollow 
	marsRover := aMarsRover .
	log := OrderedCollection new.
	aMarsRover addLogger: self follow: attributesToFollow .! !

!testRun: #WindowLoggerTest #test01NewMarsRoverWithEmptyWindowLog stamp: 'camila 10/29/2023 23:12:35'!
ERROR!
!MarsRoverWindowLogger methodsFor: 'as yet unclassified' stamp: 'camila 10/29/2023 23:12:42'!
printMarsRoverLog
	self shouldBeImplemented.! !
!MarsRoverWindowLogger methodsFor: 'as yet unclassified' stamp: 'camila 10/29/2023 23:12:45' prior: 50656828!
printMarsRoverLog
	^log.! !

!testRun: #WindowLoggerTest #test01NewMarsRoverWithEmptyWindowLog stamp: 'camila 10/29/2023 23:12:47'!
PASSED!

!testRun: #WindowLoggerTest #test01NewMarsRoverWithEmptyWindowLog stamp: 'camila 10/29/2023 23:12:56'!
PASSED!
!WindowLoggerTest methodsFor: 'as yet unclassified' stamp: 'camila 10/29/2023 23:14:04'!
test02WindowLoggerUpdatesNewPositionForward
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	logger := MarsRoverLogger with: marsRover  follow: {$p}.
	
	marsRover process: 'f'.
	
	self assert: (logger printMarsRoverLog) equals: (OrderedCollection with: 1@2).
	self assert: (marsRover isAt: 1@2 heading: self north) ! !
!WindowLoggerTest methodsFor: 'as yet unclassified' stamp: 'camila 10/29/2023 23:14:46'!
test02MarsRoverMovesForwardOnce
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	logger := MarsRoverLogger with: marsRover  follow: {$p}.
	
	marsRover process: 'f'.
	
	self assert: (logger printMarsRoverLog) equals: (OrderedCollection with: 1@2).
	self assert: (marsRover isAt: 1@2 heading: self north) ! !

!methodRemoval: WindowLoggerTest #test02WindowLoggerUpdatesNewPositionForward stamp: 'camila 10/29/2023 23:14:46'!
test02WindowLoggerUpdatesNewPositionForward
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	logger := MarsRoverLogger with: marsRover  follow: {$p}.
	
	marsRover process: 'f'.
	
	self assert: (logger printMarsRoverLog) equals: (OrderedCollection with: 1@2).
	self assert: (marsRover isAt: 1@2 heading: self north) !
!WindowLoggerTest methodsFor: 'as yet unclassified' stamp: 'camila 10/29/2023 23:14:56' prior: 50656738!
test01NewMarsRoverWithEmptyWindowLog
	| marsRover logger |
	
	marsRover := MarsRover at: 1@1 heading: self north. 
	logger :=MarsRoverWindowLogger with: marsRover  follow: {$p} .
	
	
	self assert: (logger printMarsRoverLog ) equals: OrderedCollection new.! !

!testRun: #WindowLoggerTest #test01NewMarsRoverWithEmptyWindowLog stamp: 'camila 10/29/2023 23:14:58'!
PASSED!

!testRun: #WindowLoggerTest #test01NewMarsRoverWithEmptyWindowLog stamp: 'camila 10/29/2023 23:14:58'!
PASSED!

!testRun: #WindowLoggerTest #test02MarsRoverMovesForwardOnce stamp: 'camila 10/29/2023 23:14:58'!
PASSED!

----End fileIn of /home/camila/Desktop/CUIS MARS ROVER 2/linux64/Packages/TerseGuide.pck.st----!
!WindowLoggerTest methodsFor: 'as yet unclassified' stamp: 'camila 10/29/2023 23:18:05' prior: 50656887!
test01NewMarsRoverWithEmptyWindowLog
	| marsRover logger |
	
	marsRover := MarsRover at: 1@1 heading: self north. 
	logger :=MarsRoverWindowLogger with: marsRover  follow: {$p} .
	
	
	self assert: (logger printMarsRoverLog ) equals: ''.! !

!testRun: #WindowLoggerTest #test01NewMarsRoverWithEmptyWindowLog stamp: 'camila 10/29/2023 23:18:07'!
FAILURE!

!classDefinition: #MarsRoverWindowLogger category: 'MarsRover-WithHeading' stamp: 'camila 10/29/2023 23:19:02'!
Object subclass: #MarsRoverWindowLogger
	instanceVariableNames: 'marsRover log marsRover_CHANGE_ME attributesToFollow_CHANGE_ME headingWindow'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #MarsRoverWindowLogger category: 'MarsRover-WithHeading' stamp: 'camila 10/29/2023 23:19:03'!
Object subclass: #MarsRoverWindowLogger
	instanceVariableNames: 'marsRover log marsRover_CHANGE_ME attributesToFollow_CHANGE_ME headingWindow positionWindow'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MarsRoverWindowLogger methodsFor: 'initialization' stamp: 'camila 10/29/2023 23:19:00' prior: 50656816!
initializeWith: aMarsRover follow: attributesToFollow 
	marsRover := aMarsRover .
	log := OrderedCollection new.
	headingWindow := ''.
	positionWindow := ''.
	aMarsRover addLogger: self follow: attributesToFollow .! !

!testRun: #WindowLoggerTest #test01NewMarsRoverWithEmptyWindowLog stamp: 'camila 10/29/2023 23:19:05'!
FAILURE!
!MarsRoverWindowLogger methodsFor: 'as yet unclassified' stamp: 'camila 10/29/2023 23:19:47'!
printPositionWindow
	^positionWindow .! !
!MarsRoverWindowLogger methodsFor: 'as yet unclassified' stamp: 'camila 10/29/2023 23:19:58'!
printHeadingWindow
	^headingWindow .! !

!methodRemoval: MarsRoverWindowLogger #printMarsRoverLog stamp: 'camila 10/29/2023 23:20:07'!
printMarsRoverLog
	^log.!
!WindowLoggerTest methodsFor: 'as yet unclassified' stamp: 'camila 10/29/2023 23:20:20' prior: 50659829!
test01NewMarsRoverWithEmptyWindowLog
	| marsRover logger |
	
	marsRover := MarsRover at: 1@1 heading: self north. 
	logger :=MarsRoverWindowLogger with: marsRover  follow: {$p} .
	
	self assert: (logger printPositionWindow ) equals: ''.! !

!testRun: #WindowLoggerTest #test01NewMarsRoverWithEmptyWindowLog stamp: 'camila 10/29/2023 23:20:21'!
PASSED!

!testRun: #WindowLoggerTest #test01NewMarsRoverWithEmptyWindowLog stamp: 'camila 10/29/2023 23:20:21'!
PASSED!

!testRun: #WindowLoggerTest #test02MarsRoverMovesForwardOnce stamp: 'camila 10/29/2023 23:20:21'!
PASSED!
!WindowLoggerTest methodsFor: 'as yet unclassified' stamp: 'camila 10/29/2023 23:20:53' prior: 50656858!
test02MarsRoverMovesForwardOnce
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	logger := MarsRoverWindowLogger with: marsRover  follow: {$p}.
	
	marsRover process: 'f'.
	
	self assert: (logger printPositionWindow ) equals: ('1@2').
	self assert: (marsRover isAt: 1@2 heading: self north) ! !
!WindowLoggerTest methodsFor: 'as yet unclassified' stamp: 'camila 10/29/2023 23:20:59' prior: 50659915!
test02MarsRoverMovesForwardOnce
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	logger := MarsRoverWindowLogger with: marsRover  follow: {$p}.
	
	marsRover process: 'f'.
	
	self assert: (logger printPositionWindow ) equals: (1@2).
	self assert: (marsRover isAt: 1@2 heading: self north) ! !

!testRun: #WindowLoggerTest #test02MarsRoverMovesForwardOnce stamp: 'camila 10/29/2023 23:21:01'!
ERROR!

!testRun: #WindowLoggerTest #test02MarsRoverMovesForwardOnce stamp: 'camila 10/29/2023 23:21:37'!
ERROR!

!testRun: #WindowLoggerTest #test02MarsRoverMovesForwardOnce stamp: 'camila 10/29/2023 23:21:44'!
ERROR!
!MarsRoverWindowLogger methodsFor: 'as yet unclassified' stamp: 'camila 10/29/2023 23:21:55'!
log: anObjectValue 
	self shouldBeImplemented.
	log := anObjectValue! !
!MarsRoverWindowLogger methodsFor: 'as yet unclassified' stamp: 'camila 10/29/2023 23:22:24' prior: 50659952!
log: anObjectValue 
	positionWindow  := anObjectValue value.! !

!testRun: #WindowLoggerTest #test02MarsRoverMovesForwardOnce stamp: 'camila 10/29/2023 23:22:25'!
PASSED!

!testRun: #WindowLoggerTest #test01NewMarsRoverWithEmptyWindowLog stamp: 'camila 10/29/2023 23:22:25'!
PASSED!

!testRun: #WindowLoggerTest #test02MarsRoverMovesForwardOnce stamp: 'camila 10/29/2023 23:22:25'!
PASSED!
!WindowLoggerTest methodsFor: 'as yet unclassified' stamp: 'camila 10/29/2023 23:22:47'!
test02MarsRoverMovesForwardTwiceUpdatesCorrectly
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	logger := MarsRoverWindowLogger with: marsRover  follow: {$p}.
	
	marsRover process: 'ff'.
	
	self assert: (logger printPositionWindow ) equals: (1@3).
	self assert: (marsRover isAt: 1@3 heading: self north) ! !

!testRun: #WindowLoggerTest #test02MarsRoverMovesForwardTwiceUpdatesCorrectly stamp: 'camila 10/29/2023 23:22:48'!
PASSED!

!testRun: #WindowLoggerTest #test01NewMarsRoverWithEmptyWindowLog stamp: 'camila 10/29/2023 23:22:48'!
PASSED!

!testRun: #WindowLoggerTest #test02MarsRoverMovesForwardOnce stamp: 'camila 10/29/2023 23:22:48'!
PASSED!

!testRun: #WindowLoggerTest #test02MarsRoverMovesForwardTwiceUpdatesCorrectly stamp: 'camila 10/29/2023 23:22:48'!
PASSED!
!WindowLoggerTest methodsFor: 'as yet unclassified' stamp: 'camila 10/29/2023 23:24:14'!
test02MarsRoverRotatesLeftOnce
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	logger := MarsRoverWindowLogger with: marsRover  follow: {$h}.
	
	marsRover process: 'r'.
	
	self assert: (logger printHeadingWindow ) equals: 'Este'.
	self assert: (marsRover isAt: 1@1 heading: self east) ! !
!WindowLoggerTest methodsFor: 'as yet unclassified' stamp: 'camila 10/29/2023 23:24:21'!
test04MarsRoverRotatesLeftOnce
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	logger := MarsRoverWindowLogger with: marsRover  follow: {$h}.
	
	marsRover process: 'r'.
	
	self assert: (logger printHeadingWindow ) equals: 'Este'.
	self assert: (marsRover isAt: 1@1 heading: self east) ! !

!methodRemoval: WindowLoggerTest #test02MarsRoverRotatesLeftOnce stamp: 'camila 10/29/2023 23:24:24'!
test02MarsRoverRotatesLeftOnce
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	logger := MarsRoverWindowLogger with: marsRover  follow: {$h}.
	
	marsRover process: 'r'.
	
	self assert: (logger printHeadingWindow ) equals: 'Este'.
	self assert: (marsRover isAt: 1@1 heading: self east) !
!WindowLoggerTest methodsFor: 'as yet unclassified' stamp: 'camila 10/29/2023 23:24:28'!
test03MarsRoverMovesForwardTwiceUpdatesCorrectly
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	logger := MarsRoverWindowLogger with: marsRover  follow: {$p}.
	
	marsRover process: 'ff'.
	
	self assert: (logger printPositionWindow ) equals: (1@3).
	self assert: (marsRover isAt: 1@3 heading: self north) ! !

!methodRemoval: WindowLoggerTest #test02MarsRoverMovesForwardTwiceUpdatesCorrectly stamp: 'camila 10/29/2023 23:24:31'!
test02MarsRoverMovesForwardTwiceUpdatesCorrectly
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	logger := MarsRoverWindowLogger with: marsRover  follow: {$p}.
	
	marsRover process: 'ff'.
	
	self assert: (logger printPositionWindow ) equals: (1@3).
	self assert: (marsRover isAt: 1@3 heading: self north) !

!testRun: #WindowLoggerTest #test04MarsRoverRotatesLeftOnce stamp: 'camila 10/29/2023 23:24:34'!
FAILURE!

!classDefinition: #MarsRoverWindowLogger category: 'MarsRover-WithHeading' stamp: 'camila 10/29/2023 23:25:13'!
Object subclass: #MarsRoverWindowLogger
	instanceVariableNames: 'marsRover log marsRover_CHANGE_ME attributesToFollow_CHANGE_ME headingWindow positionWindow attributes'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MarsRoverWindowLogger methodsFor: 'initialization' stamp: 'camila 10/29/2023 23:25:11' prior: 50659865!
initializeWith: aMarsRover follow: attributesToFollow 
	marsRover := aMarsRover .
	log := OrderedCollection new.
	headingWindow := ''.
	positionWindow := ''.
	attributes := attributesToFollow .
	aMarsRover addLogger: self follow: attributesToFollow .! !

!testRun: #WindowLoggerTest #test04MarsRoverRotatesLeftOnce stamp: 'camila 10/29/2023 23:25:15'!
FAILURE!
!MarsRoverWindowLogger methodsFor: 'as yet unclassified' stamp: 'camila 10/29/2023 23:27:13' prior: 50659958!
log: anObjectValue 
	attributes do: 
		[:anAttribute | 
					anAttribute = $p ifTrue: [positionWindow := anObjectValue value].
					anAttribute = $h ifTrue: [headingWindow := anObjectValue value].]! !

!testRun: #WindowLoggerTest #test04MarsRoverRotatesLeftOnce stamp: 'camila 10/29/2023 23:27:15'!
FAILURE!
!WindowLoggerTest methodsFor: 'as yet unclassified' stamp: 'camila 10/29/2023 23:27:26' prior: 50660014!
test04MarsRoverRotatesLeftOnce
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	logger := MarsRoverWindowLogger with: marsRover  follow: {$h}.
	
	marsRover process: 'r'.
	
	self assert: (logger printHeadingWindow ) equals: 'East'.
	self assert: (marsRover isAt: 1@1 heading: self east) ! !

!testRun: #WindowLoggerTest #test04MarsRoverRotatesLeftOnce stamp: 'camila 10/29/2023 23:27:27'!
PASSED!

!testRun: #WindowLoggerTest #test01NewMarsRoverWithEmptyWindowLog stamp: 'camila 10/29/2023 23:27:27'!
PASSED!

!testRun: #WindowLoggerTest #test02MarsRoverMovesForwardOnce stamp: 'camila 10/29/2023 23:27:27'!
PASSED!

!testRun: #WindowLoggerTest #test03MarsRoverMovesForwardTwiceUpdatesCorrectly stamp: 'camila 10/29/2023 23:27:27'!
PASSED!

!testRun: #WindowLoggerTest #test04MarsRoverRotatesLeftOnce stamp: 'camila 10/29/2023 23:27:27'!
PASSED!
!WindowLoggerTest methodsFor: 'as yet unclassified' stamp: 'camila 10/29/2023 23:27:57'!
test05MarsRoverRotatesRightOnce
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	logger := MarsRoverWindowLogger with: marsRover  follow: {$h}.
	
	marsRover process: 'r'.
	
	self assert: (logger printHeadingWindow ) equals: 'East'.
	self assert: (marsRover isAt: 1@1 heading: self east) ! !

!testRun: #WindowLoggerTest #test05MarsRoverRotatesRightOnce stamp: 'camila 10/29/2023 23:27:58'!
PASSED!

!testRun: #WindowLoggerTest #test01NewMarsRoverWithEmptyWindowLog stamp: 'camila 10/29/2023 23:27:58'!
PASSED!

!testRun: #WindowLoggerTest #test02MarsRoverMovesForwardOnce stamp: 'camila 10/29/2023 23:27:58'!
PASSED!

!testRun: #WindowLoggerTest #test03MarsRoverMovesForwardTwiceUpdatesCorrectly stamp: 'camila 10/29/2023 23:27:58'!
PASSED!

!testRun: #WindowLoggerTest #test04MarsRoverRotatesLeftOnce stamp: 'camila 10/29/2023 23:27:58'!
PASSED!

!testRun: #WindowLoggerTest #test05MarsRoverRotatesRightOnce stamp: 'camila 10/29/2023 23:27:58'!
PASSED!
!WindowLoggerTest methodsFor: 'as yet unclassified' stamp: 'camila 10/29/2023 23:28:21' prior: 50660111!
test04MarsRoverRotatesLeftOnce
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	logger := MarsRoverWindowLogger with: marsRover  follow: {$h}.
	
	marsRover process: 'l'.
	
	self assert: (logger printHeadingWindow ) equals: 'West'.
	self assert: (marsRover isAt: 1@1 heading: self west) ! !

!testRun: #WindowLoggerTest #test04MarsRoverRotatesLeftOnce stamp: 'camila 10/29/2023 23:28:22'!
PASSED!

!testRun: #WindowLoggerTest #test01NewMarsRoverWithEmptyWindowLog stamp: 'camila 10/29/2023 23:28:22'!
PASSED!

!testRun: #WindowLoggerTest #test02MarsRoverMovesForwardOnce stamp: 'camila 10/29/2023 23:28:22'!
PASSED!

!testRun: #WindowLoggerTest #test03MarsRoverMovesForwardTwiceUpdatesCorrectly stamp: 'camila 10/29/2023 23:28:22'!
PASSED!

!testRun: #WindowLoggerTest #test04MarsRoverRotatesLeftOnce stamp: 'camila 10/29/2023 23:28:22'!
PASSED!

!testRun: #WindowLoggerTest #test05MarsRoverRotatesRightOnce stamp: 'camila 10/29/2023 23:28:22'!
PASSED!
!WindowLoggerTest methodsFor: 'as yet unclassified' stamp: 'camila 10/29/2023 23:29:57'!
test06MarsRoverForwardRotateRightForwardWithBothWindows
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	logger := MarsRoverWindowLogger with: marsRover  follow: (OrderedCollection with: $h with: $p).
	
	marsRover process: 'frf'.
	
	self assert: (logger printHeadingWindow ) equals: 'East'.
	self assert: (logger printPositionWindow ) equals: 2@2.
	self assert: (marsRover isAt: 2@2 heading: self east) ! !

!testRun: #WindowLoggerTest #test06MarsRoverForwardRotateRightForwardWithBothWindows stamp: 'camila 10/29/2023 23:29:58'!
FAILURE!

!testRun: #WindowLoggerTest #test06MarsRoverForwardRotateRightForwardWithBothWindows stamp: 'camila 10/29/2023 23:30:08'!
FAILURE!

!testRun: #WindowLoggerTest #test06MarsRoverForwardRotateRightForwardWithBothWindows stamp: 'camila 10/29/2023 23:30:08'!
FAILURE!
!MarsRoverWindowLogger methodsFor: 'as yet unclassified' stamp: 'camila 10/29/2023 23:34:05' prior: 50660098!
log: anObjectValue 
	attributes do: 
		[:anAttribute | 
					(anAttribute = $p and: (anAttribute isKindOf: Point)) ifTrue: [positionWindow := anObjectValue value].
					(anAttribute = $h and: (anAttribute isKindOf: Point) not) ifTrue: [headingWindow := anObjectValue value].]! !

!testRun: #WindowLoggerTest #test06MarsRoverForwardRotateRightForwardWithBothWindows stamp: 'camila 10/29/2023 23:34:14'!
FAILURE!

!testRun: #WindowLoggerTest #test06MarsRoverForwardRotateRightForwardWithBothWindows stamp: 'camila 10/29/2023 23:34:17'!
FAILURE!

!testRun: #WindowLoggerTest #test06MarsRoverForwardRotateRightForwardWithBothWindows stamp: 'camila 10/29/2023 23:34:22'!
FAILURE!
!MarsRoverWindowLogger methodsFor: 'as yet unclassified' stamp: 'camila 10/29/2023 23:35:17' prior: 50660241!
log: anObjectValue 
	attributes do: 
		[:anAttribute | 
					(anAttribute = $p and: (anAttribute isKindOf: Point)) ifTrue: [positionWindow := anObjectValue value].
					self halt.
					(anAttribute = $h and: (anAttribute isKindOf: Point) not) ifTrue: [headingWindow := anObjectValue value].]! !
!MarsRoverWindowLogger methodsFor: 'as yet unclassified' stamp: 'camila 10/29/2023 23:37:30' prior: 50660266!
log: anObjectValue 

	(anObjectValue isKindOf: Point) ifTrue: [positionWindow := anObjectValue value].
	headingWindow := anObjectValue value.! !

!testRun: #WindowLoggerTest #test06MarsRoverForwardRotateRightForwardWithBothWindows stamp: 'camila 10/29/2023 23:37:31'!
FAILURE!

!testRun: #WindowLoggerTest #test06MarsRoverForwardRotateRightForwardWithBothWindows stamp: 'camila 10/29/2023 23:37:37'!
FAILURE!

!testRun: #WindowLoggerTest #test06MarsRoverForwardRotateRightForwardWithBothWindows stamp: 'camila 10/29/2023 23:37:37'!
FAILURE!
!MarsRoverWindowLogger methodsFor: 'as yet unclassified' stamp: 'camila 10/29/2023 23:39:07' prior: 50660279!
log: anObjectValue 

	(anObjectValue isKindOf: Point)
		 ifTrue: [positionWindow := anObjectValue value]
		 ifFalse: [headingWindow := anObjectValue value.]! !

!testRun: #WindowLoggerTest #test06MarsRoverForwardRotateRightForwardWithBothWindows stamp: 'camila 10/29/2023 23:39:09'!
PASSED!

!testRun: #WindowLoggerTest #test06MarsRoverForwardRotateRightForwardWithBothWindows stamp: 'camila 10/29/2023 23:39:15'!
PASSED!

!testRun: #WindowLoggerTest #test01NewMarsRoverWithEmptyWindowLog stamp: 'camila 10/29/2023 23:39:18'!
PASSED!

!testRun: #WindowLoggerTest #test02MarsRoverMovesForwardOnce stamp: 'camila 10/29/2023 23:39:18'!
PASSED!

!testRun: #WindowLoggerTest #test03MarsRoverMovesForwardTwiceUpdatesCorrectly stamp: 'camila 10/29/2023 23:39:18'!
PASSED!

!testRun: #WindowLoggerTest #test04MarsRoverRotatesLeftOnce stamp: 'camila 10/29/2023 23:39:18'!
PASSED!

!testRun: #WindowLoggerTest #test05MarsRoverRotatesRightOnce stamp: 'camila 10/29/2023 23:39:18'!
PASSED!

!testRun: #WindowLoggerTest #test06MarsRoverForwardRotateRightForwardWithBothWindows stamp: 'camila 10/29/2023 23:39:18'!
PASSED!
!MarsRoverWindowLogger methodsFor: 'initialization' stamp: 'camila 10/29/2023 23:40:18' prior: 50660083!
initializeWith: aMarsRover follow: attributesToFollow 
	marsRover := aMarsRover.
	headingWindow := ''.
	positionWindow := ''.
	aMarsRover addLogger: self follow: attributesToFollow .! !

Object subclass: #MarsRoverWindowLogger
	instanceVariableNames: 'marsRover  headingWindow positionWindow'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #MarsRoverWindowLogger category: 'MarsRover-WithHeading' stamp: 'camila 10/29/2023 23:40:35'!
Object subclass: #MarsRoverWindowLogger
	instanceVariableNames: 'marsRover headingWindow positionWindow'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classRenamed: #XXX as: #ValueUpdater stamp: 'camila 10/29/2023 23:42:57'!
Smalltalk renameClassNamed: #XXX as: #ValueUpdater!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'camila 10/29/2023 23:42:57' prior: 50654748!
initializeAt: aPosition heading: aHeadingType

	position := ValueUpdater with: aPosition.
	head := ValueUpdater with: (aHeadingType for: self) .! !

!testRun: #WindowLoggerTest #test01NewMarsRoverWithEmptyWindowLog stamp: 'camila 10/29/2023 23:43:04'!
PASSED!

!testRun: #WindowLoggerTest #test02MarsRoverMovesForwardOnce stamp: 'camila 10/29/2023 23:43:04'!
PASSED!

!testRun: #WindowLoggerTest #test03MarsRoverMovesForwardTwiceUpdatesCorrectly stamp: 'camila 10/29/2023 23:43:04'!
PASSED!

!testRun: #WindowLoggerTest #test04MarsRoverRotatesLeftOnce stamp: 'camila 10/29/2023 23:43:04'!
PASSED!

!testRun: #WindowLoggerTest #test05MarsRoverRotatesRightOnce stamp: 'camila 10/29/2023 23:43:04'!
PASSED!

!testRun: #WindowLoggerTest #test06MarsRoverForwardRotateRightForwardWithBothWindows stamp: 'camila 10/29/2023 23:43:04'!
PASSED!

!testRun: #LoggerPositionTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/29/2023 23:43:08'!
PASSED!

!testRun: #LoggerPositionTest #test02MarsRoverMovesToNorthLogsNewPosition stamp: 'camila 10/29/2023 23:43:08'!
PASSED!

!testRun: #LoggerPositionTest #test03MarsRoverMovesToNorthTwice stamp: 'camila 10/29/2023 23:43:08'!
PASSED!

!testRun: #LoggerPositionTest #test04MarsRoverMovesBackward stamp: 'camila 10/29/2023 23:43:08'!
PASSED!

!testRun: #LoggerPositionTest #test05MarsRoverRotatesLeftIsntLogged stamp: 'camila 10/29/2023 23:43:08'!
PASSED!

!testRun: #LoggerPositionTest #test06MarsRoverRotatesRightIsntLogged stamp: 'camila 10/29/2023 23:43:08'!
PASSED!

!testRun: #LoggerPositionTest #test07MarsRoverMovesForwardHeadingEastIsLogged stamp: 'camila 10/29/2023 23:43:08'!
PASSED!

!testRun: #LoggerPositionTest #test08MarsRoverMovesForwardHeadingWestIsLogged stamp: 'camila 10/29/2023 23:43:08'!
PASSED!

!testRun: #LoggerHeadingTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/29/2023 23:43:10'!
PASSED!

!testRun: #LoggerHeadingTest #test02MarsRoverRotatesLeftLogsWest stamp: 'camila 10/29/2023 23:43:10'!
PASSED!

!testRun: #LoggerHeadingTest #test03MarsRoverRotatesRightLogsEast stamp: 'camila 10/29/2023 23:43:10'!
PASSED!

!testRun: #LoggerHeadingTest #test04MarsRoverRotatesNorthLogsNorth stamp: 'camila 10/29/2023 23:43:10'!
PASSED!

!testRun: #LoggerHeadingTest #test05MarsRoverRotatesSouthLogsSouth stamp: 'camila 10/29/2023 23:43:10'!
PASSED!

!testRun: #LoggerHeadingPositionTest #test01MarsRoverNewWithEmptyLog stamp: 'camila 10/29/2023 23:43:11'!
PASSED!

!testRun: #LoggerHeadingPositionTest #test02MarsRoverMovesForwardAndRotatesEast stamp: 'camila 10/29/2023 23:43:11'!
PASSED!

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'camila 10/29/2023 23:43:14'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'camila 10/29/2023 23:43:14'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'camila 10/29/2023 23:43:14'!
PASSED!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'camila 10/29/2023 23:43:14'!
PASSED!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'camila 10/29/2023 23:43:14'!
PASSED!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'camila 10/29/2023 23:43:14'!
PASSED!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'camila 10/29/2023 23:43:14'!
PASSED!

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'camila 10/29/2023 23:43:14'!
PASSED!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'camila 10/29/2023 23:43:14'!
PASSED!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'camila 10/29/2023 23:43:14'!
PASSED!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'camila 10/29/2023 23:43:14'!
PASSED!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'camila 10/29/2023 23:43:14'!
PASSED!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'camila 10/29/2023 23:43:14'!
PASSED!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'camila 10/29/2023 23:43:14'!
PASSED!

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'camila 10/29/2023 23:43:14'!
PASSED!

!methodRemoval: MarsRover #addLogger: stamp: 'camila 10/29/2023 23:45:00'!
addLogger: aLogger 
	position addLogger: aLogger.
	head addLogger: aLogger .!

!testRun: #LoggerPositionTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/29/2023 23:45:04'!
PASSED!

!testRun: #LoggerPositionTest #test02MarsRoverMovesToNorthLogsNewPosition stamp: 'camila 10/29/2023 23:45:04'!
PASSED!

!testRun: #LoggerPositionTest #test03MarsRoverMovesToNorthTwice stamp: 'camila 10/29/2023 23:45:04'!
PASSED!

!testRun: #LoggerPositionTest #test04MarsRoverMovesBackward stamp: 'camila 10/29/2023 23:45:04'!
PASSED!

!testRun: #LoggerPositionTest #test05MarsRoverRotatesLeftIsntLogged stamp: 'camila 10/29/2023 23:45:04'!
PASSED!

!testRun: #LoggerPositionTest #test06MarsRoverRotatesRightIsntLogged stamp: 'camila 10/29/2023 23:45:04'!
PASSED!

!testRun: #LoggerPositionTest #test07MarsRoverMovesForwardHeadingEastIsLogged stamp: 'camila 10/29/2023 23:45:04'!
PASSED!

!testRun: #LoggerPositionTest #test08MarsRoverMovesForwardHeadingWestIsLogged stamp: 'camila 10/29/2023 23:45:04'!
PASSED!

!testRun: #LoggerHeadingTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/29/2023 23:45:06'!
PASSED!

!testRun: #LoggerHeadingTest #test02MarsRoverRotatesLeftLogsWest stamp: 'camila 10/29/2023 23:45:06'!
PASSED!

!testRun: #LoggerHeadingTest #test03MarsRoverRotatesRightLogsEast stamp: 'camila 10/29/2023 23:45:06'!
PASSED!

!testRun: #LoggerHeadingTest #test04MarsRoverRotatesNorthLogsNorth stamp: 'camila 10/29/2023 23:45:06'!
PASSED!

!testRun: #LoggerHeadingTest #test05MarsRoverRotatesSouthLogsSouth stamp: 'camila 10/29/2023 23:45:06'!
PASSED!

!testRun: #LoggerHeadingPositionTest #test01MarsRoverNewWithEmptyLog stamp: 'camila 10/29/2023 23:45:07'!
PASSED!

!testRun: #LoggerHeadingPositionTest #test02MarsRoverMovesForwardAndRotatesEast stamp: 'camila 10/29/2023 23:45:07'!
PASSED!

!classRenamed: #WindowLoggerTest as: #LoggerWindowTest stamp: 'camila 10/29/2023 23:45:24'!
Smalltalk renameClassNamed: #WindowLoggerTest as: #LoggerWindowTest!

!testRun: #LoggerWindowTest #test01NewMarsRoverWithEmptyWindowLog stamp: 'camila 10/29/2023 23:45:27'!
PASSED!

!testRun: #LoggerWindowTest #test02MarsRoverMovesForwardOnce stamp: 'camila 10/29/2023 23:45:27'!
PASSED!

!testRun: #LoggerWindowTest #test03MarsRoverMovesForwardTwiceUpdatesCorrectly stamp: 'camila 10/29/2023 23:45:27'!
PASSED!

!testRun: #LoggerWindowTest #test04MarsRoverRotatesLeftOnce stamp: 'camila 10/29/2023 23:45:27'!
PASSED!

!testRun: #LoggerWindowTest #test05MarsRoverRotatesRightOnce stamp: 'camila 10/29/2023 23:45:27'!
PASSED!

!testRun: #LoggerWindowTest #test06MarsRoverForwardRotateRightForwardWithBothWindows stamp: 'camila 10/29/2023 23:45:27'!
PASSED!

!classRenamed: #MarsRoverLogger as: #MarsRoverLogLogger stamp: 'camila 10/29/2023 23:48:22'!
Smalltalk renameClassNamed: #MarsRoverLogger as: #MarsRoverLogLogger!
!LoggerPositionTest methodsFor: 'as yet unclassified' stamp: 'camila 10/29/2023 23:48:22' prior: 50656147!
test03MarsRoverMovesToNorthTwice
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	logger := MarsRoverLogLogger with: marsRover  follow: {$p}.
	
	marsRover process: 'ff'.
	
	self assert: (logger printMarsRoverLog) equals: (OrderedCollection with: 1@2 with: 1@3 ).
	self assert: (marsRover isAt: 1@3 heading: self north) 
	! !
!LoggerPositionTest methodsFor: 'as yet unclassified' stamp: 'camila 10/29/2023 23:48:22' prior: 50656208!
test05MarsRoverRotatesLeftIsntLogged
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	logger := MarsRoverLogLogger with: marsRover  follow: {$p}.
	
	marsRover process: 'l'.
	
	self assert: (logger printMarsRoverLog) equals: (OrderedCollection new).
	self assert: (marsRover isAt: 1@1 heading: self west) 
	! !
!LoggerPositionTest methodsFor: 'as yet unclassified' stamp: 'camila 10/29/2023 23:48:22' prior: 50656251!
test08MarsRoverMovesForwardHeadingWestIsLogged
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	logger := MarsRoverLogLogger with: marsRover  follow: {$p}.
	
	marsRover process: 'lf'.
	
	self assert: (logger printMarsRoverLog) equals: (OrderedCollection with: 0@1 ).
	self assert: (marsRover isAt: 0@1 heading: self west) 
	! !
!LoggerHeadingTest methodsFor: 'as yet unclassified' stamp: 'camila 10/29/2023 23:48:22' prior: 50655970!
test03MarsRoverRotatesRightLogsEast
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north. 
	logger :=MarsRoverLogLogger with: marsRover  follow: {$h}.
	
	marsRover process: 'r'.
	
	self assert: (logger printMarsRoverLog ) equals: (OrderedCollection with: 'East').
	self assert: (marsRover isAt: 1@1 heading: self east).! !
!LoggerPositionTest methodsFor: 'as yet unclassified' stamp: 'camila 10/29/2023 23:48:22' prior: 50656036!
test01NewMarsRoverWithEmptyLog
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north. 
	logger :=MarsRoverLogLogger with: marsRover follow: {$p} .
	
	self assert: (logger printMarsRoverLog ) equals: OrderedCollection new.! !
!LoggerHeadingTest methodsFor: 'as yet unclassified' stamp: 'camila 10/29/2023 23:48:22' prior: 50655865!
test01NewMarsRoverWithEmptyLog
	| marsRover logger resLogger |
	
	marsRover := MarsRover at: 1@1 heading: self north. 
	logger :=MarsRoverLogLogger with: marsRover  follow: {$h} .
	
	resLogger := logger printMarsRoverLog.
	
	self assert: (logger printMarsRoverLog ) equals: OrderedCollection new.! !
!LoggerHeadingTest methodsFor: 'as yet unclassified' stamp: 'camila 10/29/2023 23:48:22' prior: 50655905!
test02MarsRoverRotatesLeftLogsWest
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north. 
	logger :=MarsRoverLogLogger with: marsRover  follow: {$h}.
	
	marsRover process: 'l'.
	
	self assert: (logger printMarsRoverLog ) equals: (OrderedCollection with: 'West').
	self assert: (marsRover isAt: 1@1 heading: self west).! !
!LoggerHeadingTest methodsFor: 'as yet unclassified' stamp: 'camila 10/29/2023 23:48:22' prior: 50656002!
test05MarsRoverRotatesSouthLogsSouth
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north. 
	logger :=MarsRoverLogLogger with: marsRover  follow: {$h}.
	
	marsRover process: 'rf'.
	
	self assert: (logger printMarsRoverLog ) equals: (OrderedCollection with: 'East').
	self assert: (marsRover isAt: 2@1 heading: self east).! !
!LoggerHeadingTest methodsFor: 'as yet unclassified' stamp: 'camila 10/29/2023 23:48:22' prior: 50655988!
test04MarsRoverRotatesNorthLogsNorth
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self east. 
	logger :=MarsRoverLogLogger with: marsRover  follow: {$h}.
	
	marsRover process: 'l'.
	
	self assert: (logger printMarsRoverLog ) equals: (OrderedCollection with: 'North').
	self assert: (marsRover isAt: 1@1 heading: self north).! !
!LoggerPositionTest methodsFor: 'as yet unclassified' stamp: 'camila 10/29/2023 23:48:22' prior: 50656194!
test04MarsRoverMovesBackward
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	logger := MarsRoverLogLogger with: marsRover  follow: {$p}.
	
	marsRover process: 'b'.
	
	self assert: (logger printMarsRoverLog) equals: (OrderedCollection with: 1@0).
	self assert: (marsRover isAt: 1@0 heading: self north) 
	! !
!LoggerHeadingPositionTest methodsFor: 'as yet unclassified' stamp: 'camila 10/29/2023 23:48:22' prior: 50656476!
test02MarsRoverMovesForwardAndRotatesEast

	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north. 
	logger :=MarsRoverLogLogger with: marsRover  follow: (OrderedCollection with: $h with:$p).
	marsRover process: 'fr'.
	
	self assert: (logger printMarsRoverLog ) equals: (OrderedCollection with: 1@2 with: 'East').! !
!LoggerHeadingPositionTest methodsFor: 'as yet unclassified' stamp: 'camila 10/29/2023 23:48:22' prior: 50656448!
test01MarsRoverNewWithEmptyLog

	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north. 
	logger :=MarsRoverLogLogger with: marsRover  follow: (OrderedCollection with: $h with:$p).
	
	self assert: (logger printMarsRoverLog ) equals: OrderedCollection new.! !
!LoggerPositionTest methodsFor: 'as yet unclassified' stamp: 'camila 10/29/2023 23:48:22' prior: 50656222!
test06MarsRoverRotatesRightIsntLogged
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	logger := MarsRoverLogLogger with: marsRover  follow: {$p}.
	
	marsRover process: 'r'.
	
	self assert: (logger printMarsRoverLog) equals: (OrderedCollection new).
	self assert: (marsRover isAt: 1@1 heading: self east) 
	! !
!LoggerPositionTest methodsFor: 'as yet unclassified' stamp: 'camila 10/29/2023 23:48:22' prior: 50656050!
test02MarsRoverMovesToNorthLogsNewPosition
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	logger := MarsRoverLogLogger with: marsRover  follow: {$p}.
	
	marsRover process: 'f'.
	
	self assert: (logger printMarsRoverLog) equals: (OrderedCollection with: 1@2).
	self assert: (marsRover isAt: 1@2 heading: self north) 
	! !
!LoggerPositionTest methodsFor: 'as yet unclassified' stamp: 'camila 10/29/2023 23:48:22' prior: 50656236!
test07MarsRoverMovesForwardHeadingEastIsLogged
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	logger := MarsRoverLogLogger with: marsRover  follow: {$p}.
	
	marsRover process: 'rf'.
	
	self assert: (logger printMarsRoverLog) equals: (OrderedCollection with: 2@1 ).
	self assert: (marsRover isAt: 2@1 heading: self east) 
	! !

!testRun: #LoggerWindowTest #test01NewMarsRoverWithEmptyWindowLog stamp: 'camila 10/29/2023 23:48:30'!
PASSED!

!testRun: #LoggerWindowTest #test02MarsRoverMovesForwardOnce stamp: 'camila 10/29/2023 23:48:30'!
PASSED!

!testRun: #LoggerWindowTest #test03MarsRoverMovesForwardTwiceUpdatesCorrectly stamp: 'camila 10/29/2023 23:48:30'!
PASSED!

!testRun: #LoggerWindowTest #test04MarsRoverRotatesLeftOnce stamp: 'camila 10/29/2023 23:48:30'!
PASSED!

!testRun: #LoggerWindowTest #test05MarsRoverRotatesRightOnce stamp: 'camila 10/29/2023 23:48:30'!
PASSED!

!testRun: #LoggerWindowTest #test06MarsRoverForwardRotateRightForwardWithBothWindows stamp: 'camila 10/29/2023 23:48:30'!
PASSED!

!testRun: #LoggerPositionTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/29/2023 23:48:32'!
PASSED!

!testRun: #LoggerPositionTest #test02MarsRoverMovesToNorthLogsNewPosition stamp: 'camila 10/29/2023 23:48:32'!
PASSED!

!testRun: #LoggerPositionTest #test03MarsRoverMovesToNorthTwice stamp: 'camila 10/29/2023 23:48:32'!
PASSED!

!testRun: #LoggerPositionTest #test04MarsRoverMovesBackward stamp: 'camila 10/29/2023 23:48:32'!
PASSED!

!testRun: #LoggerPositionTest #test05MarsRoverRotatesLeftIsntLogged stamp: 'camila 10/29/2023 23:48:32'!
PASSED!

!testRun: #LoggerPositionTest #test06MarsRoverRotatesRightIsntLogged stamp: 'camila 10/29/2023 23:48:32'!
PASSED!

!testRun: #LoggerPositionTest #test07MarsRoverMovesForwardHeadingEastIsLogged stamp: 'camila 10/29/2023 23:48:32'!
PASSED!

!testRun: #LoggerPositionTest #test08MarsRoverMovesForwardHeadingWestIsLogged stamp: 'camila 10/29/2023 23:48:32'!
PASSED!

!testRun: #LoggerHeadingTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/29/2023 23:48:33'!
PASSED!

!testRun: #LoggerHeadingTest #test02MarsRoverRotatesLeftLogsWest stamp: 'camila 10/29/2023 23:48:33'!
PASSED!

!testRun: #LoggerHeadingTest #test03MarsRoverRotatesRightLogsEast stamp: 'camila 10/29/2023 23:48:33'!
PASSED!

!testRun: #LoggerHeadingTest #test04MarsRoverRotatesNorthLogsNorth stamp: 'camila 10/29/2023 23:48:33'!
PASSED!

!testRun: #LoggerHeadingTest #test05MarsRoverRotatesSouthLogsSouth stamp: 'camila 10/29/2023 23:48:33'!
PASSED!

!testRun: #LoggerHeadingPositionTest #test01MarsRoverNewWithEmptyLog stamp: 'camila 10/29/2023 23:48:33'!
PASSED!

!testRun: #LoggerHeadingPositionTest #test02MarsRoverMovesForwardAndRotatesEast stamp: 'camila 10/29/2023 23:48:33'!
PASSED!

Object subclass: #MarsRoverLogger
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #MarsRoverLogger category: 'MarsRover-WithHeading' stamp: 'camila 10/29/2023 23:48:50'!
Object subclass: #MarsRoverLogger
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

MarsRoverLogger subclass: #MarsRoverLogLogger
	instanceVariableNames: 'marsRover log'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #MarsRoverLogLogger category: 'MarsRover-WithHeading' stamp: 'camila 10/29/2023 23:48:57'!
MarsRoverLogger subclass: #MarsRoverLogLogger
	instanceVariableNames: 'marsRover log'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

MarsRoverLogger subclass: #MarsRoverWindowLogger
	instanceVariableNames: 'marsRover headingWindow positionWindow'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #MarsRoverWindowLogger category: 'MarsRover-WithHeading' stamp: 'camila 10/29/2023 23:49:01'!
MarsRoverLogger subclass: #MarsRoverWindowLogger
	instanceVariableNames: 'marsRover headingWindow positionWindow'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MarsRoverLogger methodsFor: 'initialization' stamp: 'camila 10/29/2023 23:49:10'!
initializeWith: aMarsRover follow: attributesToFollow

	self subclassResponsibility! !
!MarsRoverLogger methodsFor: 'logging' stamp: 'camila 10/29/2023 23:49:15'!
log: anObjectValue

	self subclassResponsibility! !

----SNAPSHOT----(29 October 2023 23:50:25) CuisUniversity-5981.image priorSource: 10401371!

Object subclass: #ValueUpdater
	instanceVariableNames: 'objectValue loggers'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

Object subclass: #ValueUpdater
	instanceVariableNames: ' objectValue loggers'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #ValueUpdater category: 'MarsRover-WithHeading' stamp: 'camila 10/29/2023 23:52:02'!
Object subclass: #ValueUpdater
	instanceVariableNames: 'objectValue loggers'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!testRun: #LoggerWindowTest #test01NewMarsRoverWithEmptyWindowLog stamp: 'camila 10/29/2023 23:52:06'!
PASSED!

!testRun: #LoggerWindowTest #test02MarsRoverMovesForwardOnce stamp: 'camila 10/29/2023 23:52:06'!
PASSED!

!testRun: #LoggerWindowTest #test03MarsRoverMovesForwardTwiceUpdatesCorrectly stamp: 'camila 10/29/2023 23:52:06'!
PASSED!

!testRun: #LoggerWindowTest #test04MarsRoverRotatesLeftOnce stamp: 'camila 10/29/2023 23:52:06'!
PASSED!

!testRun: #LoggerWindowTest #test05MarsRoverRotatesRightOnce stamp: 'camila 10/29/2023 23:52:06'!
PASSED!

!testRun: #LoggerWindowTest #test06MarsRoverForwardRotateRightForwardWithBothWindows stamp: 'camila 10/29/2023 23:52:06'!
PASSED!

!testRun: #LoggerPositionTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/29/2023 23:52:08'!
PASSED!

!testRun: #LoggerPositionTest #test02MarsRoverMovesToNorthLogsNewPosition stamp: 'camila 10/29/2023 23:52:08'!
PASSED!

!testRun: #LoggerPositionTest #test03MarsRoverMovesToNorthTwice stamp: 'camila 10/29/2023 23:52:08'!
PASSED!

!testRun: #LoggerPositionTest #test04MarsRoverMovesBackward stamp: 'camila 10/29/2023 23:52:08'!
PASSED!

!testRun: #LoggerPositionTest #test05MarsRoverRotatesLeftIsntLogged stamp: 'camila 10/29/2023 23:52:08'!
PASSED!

!testRun: #LoggerPositionTest #test06MarsRoverRotatesRightIsntLogged stamp: 'camila 10/29/2023 23:52:08'!
PASSED!

!testRun: #LoggerPositionTest #test07MarsRoverMovesForwardHeadingEastIsLogged stamp: 'camila 10/29/2023 23:52:08'!
PASSED!

!testRun: #LoggerPositionTest #test08MarsRoverMovesForwardHeadingWestIsLogged stamp: 'camila 10/29/2023 23:52:08'!
PASSED!

!testRun: #LoggerHeadingTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/29/2023 23:52:10'!
PASSED!

!testRun: #LoggerHeadingTest #test02MarsRoverRotatesLeftLogsWest stamp: 'camila 10/29/2023 23:52:10'!
PASSED!

!testRun: #LoggerHeadingTest #test03MarsRoverRotatesRightLogsEast stamp: 'camila 10/29/2023 23:52:10'!
PASSED!

!testRun: #LoggerHeadingTest #test04MarsRoverRotatesNorthLogsNorth stamp: 'camila 10/29/2023 23:52:10'!
PASSED!

!testRun: #LoggerHeadingTest #test05MarsRoverRotatesSouthLogsSouth stamp: 'camila 10/29/2023 23:52:10'!
PASSED!

!testRun: #LoggerHeadingPositionTest #test01MarsRoverNewWithEmptyLog stamp: 'camila 10/29/2023 23:52:12'!
PASSED!

!testRun: #LoggerHeadingPositionTest #test02MarsRoverMovesForwardAndRotatesEast stamp: 'camila 10/29/2023 23:52:12'!
PASSED!

!classDefinition: #MarsRoverLogLogger category: 'MarsRover-WithHeading' stamp: 'camila 10/29/2023 23:52:44'!
MarsRoverLogger subclass: #MarsRoverLogLogger
	instanceVariableNames: 'log'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #MarsRoverWindowLogger category: 'MarsRover-WithHeading' stamp: 'camila 10/29/2023 23:52:44'!
MarsRoverLogger subclass: #MarsRoverWindowLogger
	instanceVariableNames: 'headingWindow positionWindow'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #MarsRoverLogger category: 'MarsRover-WithHeading' stamp: 'camila 10/29/2023 23:52:44'!
Object subclass: #MarsRoverLogger
	instanceVariableNames: 'marsRover'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!testRun: #LoggerWindowTest #test01NewMarsRoverWithEmptyWindowLog stamp: 'camila 10/29/2023 23:52:52'!
PASSED!

!testRun: #LoggerWindowTest #test02MarsRoverMovesForwardOnce stamp: 'camila 10/29/2023 23:52:52'!
PASSED!

!testRun: #LoggerWindowTest #test03MarsRoverMovesForwardTwiceUpdatesCorrectly stamp: 'camila 10/29/2023 23:52:52'!
PASSED!

!testRun: #LoggerWindowTest #test04MarsRoverRotatesLeftOnce stamp: 'camila 10/29/2023 23:52:52'!
PASSED!

!testRun: #LoggerWindowTest #test05MarsRoverRotatesRightOnce stamp: 'camila 10/29/2023 23:52:52'!
PASSED!

!testRun: #LoggerWindowTest #test06MarsRoverForwardRotateRightForwardWithBothWindows stamp: 'camila 10/29/2023 23:52:52'!
PASSED!

!testRun: #LoggerPositionTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/29/2023 23:52:53'!
PASSED!

!testRun: #LoggerPositionTest #test02MarsRoverMovesToNorthLogsNewPosition stamp: 'camila 10/29/2023 23:52:53'!
PASSED!

!testRun: #LoggerPositionTest #test03MarsRoverMovesToNorthTwice stamp: 'camila 10/29/2023 23:52:53'!
PASSED!

!testRun: #LoggerPositionTest #test04MarsRoverMovesBackward stamp: 'camila 10/29/2023 23:52:53'!
PASSED!

!testRun: #LoggerPositionTest #test05MarsRoverRotatesLeftIsntLogged stamp: 'camila 10/29/2023 23:52:53'!
PASSED!

!testRun: #LoggerPositionTest #test06MarsRoverRotatesRightIsntLogged stamp: 'camila 10/29/2023 23:52:53'!
PASSED!

!testRun: #LoggerPositionTest #test07MarsRoverMovesForwardHeadingEastIsLogged stamp: 'camila 10/29/2023 23:52:53'!
PASSED!

!testRun: #LoggerPositionTest #test08MarsRoverMovesForwardHeadingWestIsLogged stamp: 'camila 10/29/2023 23:52:53'!
PASSED!

!testRun: #LoggerHeadingTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/29/2023 23:52:55'!
PASSED!

!testRun: #LoggerHeadingTest #test02MarsRoverRotatesLeftLogsWest stamp: 'camila 10/29/2023 23:52:55'!
PASSED!

!testRun: #LoggerHeadingTest #test03MarsRoverRotatesRightLogsEast stamp: 'camila 10/29/2023 23:52:55'!
PASSED!

!testRun: #LoggerHeadingTest #test04MarsRoverRotatesNorthLogsNorth stamp: 'camila 10/29/2023 23:52:55'!
PASSED!

!testRun: #LoggerHeadingTest #test05MarsRoverRotatesSouthLogsSouth stamp: 'camila 10/29/2023 23:52:55'!
PASSED!

!testRun: #LoggerHeadingPositionTest #test01MarsRoverNewWithEmptyLog stamp: 'camila 10/29/2023 23:52:56'!
PASSED!

!testRun: #LoggerHeadingPositionTest #test02MarsRoverMovesForwardAndRotatesEast stamp: 'camila 10/29/2023 23:52:56'!
PASSED!

!classRenamed: #LoggerPositionTest as: #LoggerLogPositionTest stamp: 'camila 10/29/2023 23:53:35'!
Smalltalk renameClassNamed: #LoggerPositionTest as: #LoggerLogPositionTest!

!classRenamed: #LoggerHeadingTest as: #LoggerLogHeadingTest stamp: 'camila 10/29/2023 23:53:43'!
Smalltalk renameClassNamed: #LoggerHeadingTest as: #LoggerLogHeadingTest!

!classRenamed: #LoggerHeadingPositionTest as: #LoggerLogHeadingPositionTest stamp: 'camila 10/29/2023 23:53:52'!
Smalltalk renameClassNamed: #LoggerHeadingPositionTest as: #LoggerLogHeadingPositionTest!

----SNAPSHOT----(29 October 2023 23:54:13) CuisUniversity-5981.image priorSource: 10537235!
!MarsRoverWindowLogger methodsFor: 'logging' stamp: 'camila 10/29/2023 23:54:37' prior: 50660300 overrides: 50660935!
log: anObjectValue 
	
	"feo estos ifs"
	(anObjectValue isKindOf: Point)
		 ifTrue: [positionWindow := anObjectValue value]
		 ifFalse: [headingWindow := anObjectValue value.]! !
!MarsRover methodsFor: 'log and update' stamp: 'camila 10/29/2023 23:55:22' prior: 50655092!
addLogger: aLogger follow: collectionOfAttributes

	collectionOfAttributes do: 
		[:anAttributeToFollow | 
			anAttributeToFollow = $p ifTrue: [position addLogger: aLogger].
			anAttributeToFollow = $h ifTrue: [head addLogger: aLogger ].]
! !

----QUIT----(29 October 2023 23:56:01) CuisUniversity-5981.image priorSource: 10544100!

----STARTUP---- (30 October 2023 15:32:31) as /home/camila/Desktop/CUIS MARS ROVER 2/linux64/CuisUniversity-5981.image!

!MarsRoverWindowLogger methodsFor: 'logging' stamp: 'camila 10/30/2023 15:32:59' prior: 50661158 overrides: 50660935!
log: anObjectValue 
	
	"feo estos ifs"
	(anObjectValue isKindOf: Point)
		 ifTrue: [positionWindow := anObjectValue value]
		 ifFalse: [headingWindow := 'Apuntando al', anObjectValue value.]! !
!LoggerWindowTest methodsFor: 'testing' stamp: 'camila 10/30/2023 15:33:18' prior: 50660177!
test04MarsRoverRotatesLeftOnce
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	logger := MarsRoverWindowLogger with: marsRover  follow: {$h}.
	
	marsRover process: 'l'.
	
	self assert: (logger printHeadingWindow ) equals: 'Apuntando al West'.
	self assert: (marsRover isAt: 1@1 heading: self west) ! !

!testRun: #LoggerWindowTest #test04MarsRoverRotatesLeftOnce stamp: 'camila 10/30/2023 15:33:18'!
FAILURE!
!LoggerWindowTest methodsFor: 'testing' stamp: 'camila 10/30/2023 15:33:32' prior: 50660142!
test05MarsRoverRotatesRightOnce
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	logger := MarsRoverWindowLogger with: marsRover  follow: {$h}.
	
	marsRover process: 'r'.
	
	self assert: (logger printHeadingWindow ) equals: 'Apuntando al East'.
	self assert: (marsRover isAt: 1@1 heading: self east) ! !
!MarsRoverWindowLogger methodsFor: 'logging' stamp: 'camila 10/30/2023 15:33:42' prior: 50661185 overrides: 50660935!
log: anObjectValue 
	
	"feo estos ifs"
	(anObjectValue isKindOf: Point)
		 ifTrue: [positionWindow := anObjectValue value]
		 ifFalse: [headingWindow := 'Apuntando al ', anObjectValue value.]! !

!testRun: #LoggerWindowTest #test01NewMarsRoverWithEmptyWindowLog stamp: 'camila 10/30/2023 15:33:46'!
PASSED!

!testRun: #LoggerWindowTest #test02MarsRoverMovesForwardOnce stamp: 'camila 10/30/2023 15:33:47'!
PASSED!

!testRun: #LoggerWindowTest #test03MarsRoverMovesForwardTwiceUpdatesCorrectly stamp: 'camila 10/30/2023 15:33:47'!
PASSED!

!testRun: #LoggerWindowTest #test04MarsRoverRotatesLeftOnce stamp: 'camila 10/30/2023 15:33:47'!
PASSED!

!testRun: #LoggerWindowTest #test05MarsRoverRotatesRightOnce stamp: 'camila 10/30/2023 15:33:47'!
PASSED!

!testRun: #LoggerWindowTest #test06MarsRoverForwardRotateRightForwardWithBothWindows stamp: 'camila 10/30/2023 15:33:47'!
FAILURE!

!testRun: #LoggerWindowTest #test06MarsRoverForwardRotateRightForwardWithBothWindows stamp: 'camila 10/30/2023 15:33:47'!
FAILURE!
!LoggerWindowTest methodsFor: 'testing' stamp: 'camila 10/30/2023 15:33:58' prior: 50660211!
test06MarsRoverForwardRotateRightForwardWithBothWindows
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	logger := MarsRoverWindowLogger with: marsRover  follow: (OrderedCollection with: $h with: $p).
	
	marsRover process: 'frf'.
	
	self assert: (logger printHeadingWindow ) equals: 'Apuntando al East'.
	self assert: (logger printPositionWindow ) equals: 2@2.
	self assert: (marsRover isAt: 2@2 heading: self east) ! !

!testRun: #LoggerWindowTest #test06MarsRoverForwardRotateRightForwardWithBothWindows stamp: 'camila 10/30/2023 15:33:59'!
PASSED!

!testRun: #LoggerWindowTest #test01NewMarsRoverWithEmptyWindowLog stamp: 'camila 10/30/2023 15:34:01'!
PASSED!

!testRun: #LoggerWindowTest #test02MarsRoverMovesForwardOnce stamp: 'camila 10/30/2023 15:34:01'!
PASSED!

!testRun: #LoggerWindowTest #test03MarsRoverMovesForwardTwiceUpdatesCorrectly stamp: 'camila 10/30/2023 15:34:01'!
PASSED!

!testRun: #LoggerWindowTest #test04MarsRoverRotatesLeftOnce stamp: 'camila 10/30/2023 15:34:01'!
PASSED!

!testRun: #LoggerWindowTest #test05MarsRoverRotatesRightOnce stamp: 'camila 10/30/2023 15:34:01'!
PASSED!

!testRun: #LoggerWindowTest #test06MarsRoverForwardRotateRightForwardWithBothWindows stamp: 'camila 10/30/2023 15:34:01'!
PASSED!

----QUIT----(30 October 2023 15:35:03) CuisUniversity-5981.image priorSource: 10544850!