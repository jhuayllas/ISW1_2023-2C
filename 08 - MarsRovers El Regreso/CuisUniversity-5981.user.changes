

----QUIT----(13 August 2023 19:14:09) CuisUniversity-5981.image priorSource: 5713367!

----STARTUP---- (13 August 2023 19:14:10) as /Users/hernan/Documents/Cuis/5.0-64Bits/Cuis-University-Installer/CuisUniversity-5981.image!


----QUIT----(13 August 2023 19:14:10) CuisUniversity-5981.image priorSource: 10197065!

----STARTUP---- (26 October 2023 20:10:25) as /home/camila/Desktop/CUIS MARS ROVER 2/linux64/CuisUniversity-5981.image!


----End fileIn of /home/camila/Desktop/CUIS MARS ROVER 2/linux64/MarsRover-WithHeading.st----!

----SNAPSHOT----(26 October 2023 20:12:22) CuisUniversity-5981.image priorSource: 10197292!

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'camila 10/26/2023 20:21:25'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'camila 10/26/2023 20:21:25'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'camila 10/26/2023 20:21:25'!
PASSED!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'camila 10/26/2023 20:21:25'!
PASSED!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'camila 10/26/2023 20:21:25'!
PASSED!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'camila 10/26/2023 20:21:25'!
PASSED!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'camila 10/26/2023 20:21:25'!
PASSED!

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'camila 10/26/2023 20:21:25'!
PASSED!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'camila 10/26/2023 20:21:25'!
PASSED!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'camila 10/26/2023 20:21:25'!
PASSED!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'camila 10/26/2023 20:21:25'!
PASSED!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'camila 10/26/2023 20:21:25'!
PASSED!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'camila 10/26/2023 20:21:25'!
PASSED!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'camila 10/26/2023 20:21:25'!
PASSED!

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'camila 10/26/2023 20:21:25'!
PASSED!

TestCase subclass: #XXXTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #XXXTest category: 'MarsRover-WithHeading' stamp: 'camila 10/26/2023 20:35:50'!
TestCase subclass: #XXXTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!XXXTest methodsFor: 'no messages' stamp: 'camila 10/26/2023 20:35:59'!
test01
	! !

TestCase subclass: #LoggerTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #LoggerTest category: 'MarsRover-WithHeading' stamp: 'camila 10/26/2023 20:36:55'!
TestCase subclass: #LoggerTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classRemoval: #XXXTest stamp: 'camila 10/26/2023 20:36:58'!
TestCase subclass: #XXXTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!LoggerTest methodsFor: 'no messages' stamp: 'camila 10/26/2023 20:38:16'!
test01
	! !
!LoggerTest methodsFor: 'testing' stamp: 'camila 10/26/2023 20:39:43'!
test01NewMarsRoverWIthEmptyLog
	| marsRover |
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	! !

!methodRemoval: LoggerTest #test01 stamp: 'camila 10/26/2023 20:39:48'!
test01
	!
!LoggerTest methodsFor: 'testing' stamp: 'camila 10/26/2023 20:40:32'!
east

	^ MarsRoverHeadingEast ! !
!LoggerTest methodsFor: 'testing' stamp: 'camila 10/26/2023 20:40:42'!
north

	^ MarsRoverHeadingNorth ! !
!LoggerTest methodsFor: 'testing' stamp: 'camila 10/26/2023 20:40:56'!
south

	^ MarsRoverHeadingSouth ! !
!LoggerTest methodsFor: 'testing' stamp: 'camila 10/26/2023 20:41:07'!
west

	^ MarsRoverHeadingWest ! !
!LoggerTest methodsFor: 'testing' stamp: 'camila 10/26/2023 20:41:31'!
test01NewMarsRoverWithEmptyLog
	| marsRover |
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	! !

!methodRemoval: LoggerTest #test01NewMarsRoverWIthEmptyLog stamp: 'camila 10/26/2023 20:41:35'!
test01NewMarsRoverWIthEmptyLog
	| marsRover |
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	!

!testRun: #LoggerTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/27/2023 18:02:40'!
PASSED!

!classDefinition: #Logger category: 'MarsRover-WithHeading' stamp: 'camila 10/27/2023 18:14:05'!
Object subclass: #Logger
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!LoggerTest methodsFor: 'testing' stamp: 'camila 10/27/2023 18:14:56' prior: 50650930!
test01NewMarsRoverWithEmptyLog
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	logger := Logger with: marsRover .
	! !
!LoggerTest methodsFor: 'testing' stamp: 'camila 10/27/2023 18:15:31' prior: 50650953!
test01NewMarsRoverWithEmptyLog
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	logger := Logger with: marsRover .
	
	self assert: (logger printLog) equals: OrderedCollection new.! !

!testRun: #LoggerTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/27/2023 18:15:40'!
ERROR!

!testRun: #LoggerTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/27/2023 18:15:40'!
ERROR!
!Logger class methodsFor: 'instance creation' stamp: 'camila 10/27/2023 18:15:49'!
with: marsRover 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeWith: marsRover ! !
!Logger class methodsFor: 'instance creation' stamp: 'camila 10/27/2023 18:15:56' prior: 50650977!
with: marsRover 
	^self new initializeWith: marsRover ! !

!testRun: #LoggerTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/27/2023 18:15:57'!
ERROR!

!classDefinition: #Logger category: 'MarsRover-WithHeading' stamp: 'camila 10/27/2023 18:16:05'!
Object subclass: #Logger
	instanceVariableNames: 'marsRover_CHANGE_ME'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!Logger methodsFor: 'initialization' stamp: 'camila 10/27/2023 18:16:05'!
initializeWith: marsRover 
	self shouldBeImplemented.
	marsRover_CHANGE_ME := marsRover.! !

Object subclass: #Logger
	instanceVariableNames: 'marsRover'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

Object subclass: #Logger
	instanceVariableNames: 'marsRoverForLogging'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #Logger category: 'MarsRover-WithHeading' stamp: 'camila 10/27/2023 18:17:09'!
Object subclass: #Logger
	instanceVariableNames: 'marsRoverForLogging'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!Logger methodsFor: 'initialization' stamp: 'camila 10/27/2023 18:17:24' prior: 50651001!
initializeWith: marsRover 
	marsRoverForLogging := marsRover.! !
!Logger methodsFor: 'initialization' stamp: 'camila 10/27/2023 18:17:33' prior: 50651024!
initializeWith: aMarsRover 
	marsRoverForLogging := aMarsRover.! !
!Logger class methodsFor: 'instance creation' stamp: 'camila 10/27/2023 18:17:38' prior: 50650985!
with: aMarsRover 
	^self new initializeWith: aMarsRover ! !

!classDefinition: #Logger category: 'MarsRover-WithHeading' stamp: 'camila 10/27/2023 18:17:48'!
Object subclass: #Logger
	instanceVariableNames: 'marsRover'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!Logger methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 18:17:48' prior: 50651029!
initializeWith: aMarsRover 
	marsRover := aMarsRover.! !

!testRun: #LoggerTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/27/2023 18:17:59'!
ERROR!

!testRun: #LoggerTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/27/2023 18:17:59'!
ERROR!
!Logger methodsFor: 'print' stamp: 'camila 10/27/2023 18:18:10'!
printLog
	self shouldBeImplemented.! !
!Logger methodsFor: 'print' stamp: 'camila 10/27/2023 18:18:16' prior: 50651058!
printLog
	^OrderedCollection new.! !

!testRun: #LoggerTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/27/2023 18:18:17'!
PASSED!

!testRun: #LoggerTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/27/2023 18:18:19'!
PASSED!

!testRun: #LoggerTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/27/2023 18:18:19'!
PASSED!
!LoggerTest methodsFor: 'testing' stamp: 'camila 10/27/2023 18:20:31'!
test02MarsRoverMovesToNorthLogsNewPosition
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	logger := Logger with: marsRover .
	
	self assert: (logger printLog) equals: OrderedCollection new.! !
!LoggerTest methodsFor: 'testing' stamp: 'camila 10/27/2023 18:23:07' prior: 50651075!
test02MarsRoverMovesToNorthLogsNewPosition
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	logger := Logger with: marsRover .
	
	marsRover
	
	self assert: (logger printLog) equals: OrderedCollection new.! !
!LoggerTest methodsFor: 'testing' stamp: 'camila 10/27/2023 18:23:53' prior: 50651085!
test02MarsRoverMovesToNorthLogsNewPosition
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	logger := Logger with: marsRover .
	
	marsRover process: 'f'.
	
	self assert: (logger printLog) equals: (OrderedCollection with: 1@2).! !

!testRun: #LoggerTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/27/2023 18:25:50'!
PASSED!

!testRun: #LoggerTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/27/2023 18:25:50'!
PASSED!

!testRun: #LoggerTest #test02MarsRoverMovesToNorthLogsNewPosition stamp: 'camila 10/27/2023 18:25:50'!
FAILURE!

!testRun: #LoggerTest #test02MarsRoverMovesToNorthLogsNewPosition stamp: 'camila 10/27/2023 18:25:50'!
FAILURE!

!testRun: #LoggerTest #test02MarsRoverMovesToNorthLogsNewPosition stamp: 'camila 10/27/2023 18:26:21'!
FAILURE!

!testRun: #LoggerTest #test02MarsRoverMovesToNorthLogsNewPosition stamp: 'camila 10/27/2023 18:26:21'!
FAILURE!

!testRun: #LoggerTest #test02MarsRoverMovesToNorthLogsNewPosition stamp: 'camila 10/27/2023 18:27:08'!
FAILURE!

!testRun: #LoggerTest #test02MarsRoverMovesToNorthLogsNewPosition stamp: 'camila 10/27/2023 18:27:08'!
FAILURE!
!MarsRover methodsFor: 'moving' stamp: 'camila 10/27/2023 18:32:10' prior: 50650576!
moveNorth
	self moveAndLogNorth: [ :marsRoverPosition | marsRoverPosition + (0@1)].
	"position := position + (0@1)"! !

!testRun: #LoggerTest #test02MarsRoverMovesToNorthLogsNewPosition stamp: 'camila 10/27/2023 18:32:48'!
ERROR!
!MarsRover methodsFor: 'moving' stamp: 'camila 10/27/2023 18:36:00' prior: 50651135!
moveNorth
	self moveAndLogNorth: [ position + (0@1)].
	"position := position + (0@1)"! !

!testRun: #LoggerTest #test02MarsRoverMovesToNorthLogsNewPosition stamp: 'camila 10/27/2023 18:36:02'!
ERROR!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 18:36:48'!
moveAndLogNorth: aRenameMe1 
	self shouldBeImplemented.! !
!MarsRover methodsFor: 'moving' stamp: 'camila 10/27/2023 18:37:32' prior: 50651145!
moveNorth
	self moveAndLogNorth: [ position := position + (0@1)].
	"position := position + (0@1)"! !

!classDefinition: #MarsRover category: 'MarsRover-WithHeading' stamp: 'camila 10/27/2023 18:39:06'!
Object subclass: #MarsRover
	instanceVariableNames: 'position head logger'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 18:39:03' prior: 50651154!
moveAndLogNorth: aBlock
	
	aBlock value.
	logger logNorth.! !

!testRun: #LoggerTest #test02MarsRoverMovesToNorthLogsNewPosition stamp: 'camila 10/27/2023 18:39:16'!
ERROR!
!MarsRover methodsFor: 'initialization' stamp: 'camila 10/27/2023 18:39:57' prior: 50650512!
initializeAt: aPosition heading: aHeadingType

	position := aPosition.
	head := aHeadingType for: self .
	logger := Logger new.! !
!LoggerTest methodsFor: 'testing' stamp: 'camila 10/27/2023 18:42:08' prior: 50650961!
test01NewMarsRoverWithEmptyLog
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north. 
	Logger with: marsRover .
	
	self assert: (marsRover printLog) equals: OrderedCollection new.! !
!LoggerTest methodsFor: 'testing' stamp: 'camila 10/27/2023 18:42:12' prior: 50651190!
test01NewMarsRoverWithEmptyLog
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north. 
	Logger with: marsRover .
	
	self assert: (logger printLog) equals: OrderedCollection new.! !
!Logger methodsFor: 'initialization' stamp: 'camila 10/27/2023 18:42:41' prior: 50651048!
initializeWith: aMarsRover 
	marsRover := aMarsRover.
	aMarsRover addLogger: self.! !

!testRun: #LoggerTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/27/2023 18:42:44'!
ERROR!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 18:42:49'!
addLogger: aLogger 
	self shouldBeImplemented.! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 18:42:54' prior: 50651219!
addLogger: aLogger 
	logger := aLogger .! !

!testRun: #LoggerTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/27/2023 18:42:56'!
ERROR!
!LoggerTest methodsFor: 'testing' stamp: 'camila 10/27/2023 18:43:18' prior: 50651200!
test01NewMarsRoverWithEmptyLog
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north. 
	logger :=Logger with: marsRover .
	
	self assert: (logger printLog ) equals: OrderedCollection new.! !

!testRun: #LoggerTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/27/2023 18:43:21'!
PASSED!

!testRun: #LoggerTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/27/2023 18:43:21'!
PASSED!

!testRun: #LoggerTest #test02MarsRoverMovesToNorthLogsNewPosition stamp: 'camila 10/27/2023 18:43:21'!
ERROR!

!testRun: #LoggerTest #test02MarsRoverMovesToNorthLogsNewPosition stamp: 'camila 10/27/2023 18:43:21'!
ERROR!

!testRun: #LoggerTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/27/2023 18:43:25'!
PASSED!
!Logger methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 18:44:06'!
logNorth
	self shouldBeImplemented.! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 18:45:01' prior: 50651174!
moveAndLogNorth: aBlock
	
	aBlock value.
	logger logNorth: aBlock.! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 18:46:09' prior: 50651263!
moveAndLogNorth: aBlock
	
	aBlock value.
	logger logNorth: (self position).! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 18:46:45' prior: 50651269!
moveAndLogNorth: aBlock
	
	aBlock value.
	logger logNorth: position.! !

!testRun: #LoggerTest #test02MarsRoverMovesToNorthLogsNewPosition stamp: 'camila 10/27/2023 18:46:53'!
ERROR!
!Logger methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 18:46:57'!
logNorth: aPosition 
	self shouldBeImplemented.! !

!classDefinition: #Logger category: 'MarsRover-WithHeading' stamp: 'camila 10/27/2023 18:47:37'!
Object subclass: #Logger
	instanceVariableNames: 'marsRover positionLog'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!Logger methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 18:47:35' prior: 50651284!
logNorth: aPosition 
	positionLog add: aPosition .! !

!testRun: #LoggerTest #test02MarsRoverMovesToNorthLogsNewPosition stamp: 'camila 10/27/2023 18:47:39'!
ERROR!

Object subclass: #Logger
	instanceVariableNames: 'marsRover positionLog'
	classVariableNames: 'positionLog'
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

Object subclass: #Logger
	instanceVariableNames: 'marsRover positionLog'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #Logger category: 'MarsRover-WithHeading' stamp: 'camila 10/27/2023 18:48:11'!
Object subclass: #Logger
	instanceVariableNames: 'marsRover positionLog'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!Logger methodsFor: 'initialization' stamp: 'camila 10/27/2023 18:48:18' prior: 50651210!
initializeWith: aMarsRover 
	marsRover := aMarsRover.
	aMarsRover addLogger: self.
	positionLog := OrderedCollection new.! !

!testRun: #LoggerTest #test02MarsRoverMovesToNorthLogsNewPosition stamp: 'camila 10/27/2023 18:48:25'!
FAILURE!

!testRun: #LoggerTest #test02MarsRoverMovesToNorthLogsNewPosition stamp: 'camila 10/27/2023 18:48:25'!
FAILURE!
!Logger methodsFor: 'print' stamp: 'camila 10/27/2023 18:49:24' prior: 50651062!
printLog
	^positionLog .! !

!testRun: #LoggerTest #test02MarsRoverMovesToNorthLogsNewPosition stamp: 'camila 10/27/2023 18:49:26'!
PASSED!

!testRun: #LoggerTest #test02MarsRoverMovesToNorthLogsNewPosition stamp: 'camila 10/27/2023 18:49:29'!
PASSED!

!testRun: #LoggerTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/27/2023 18:49:31'!
PASSED!
!LoggerTest methodsFor: 'testing' stamp: 'camila 10/27/2023 18:49:55' prior: 50651096!
test02MarsRoverMovesToNorthLogsNewPosition
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	logger := Logger with: marsRover .
	
	marsRover process: 'f'.
	
	self assert: (logger printLog) equals: (OrderedCollection with: 1@2).
	! !
!LoggerTest methodsFor: 'testing' stamp: 'camila 10/27/2023 18:51:02' prior: 50651351!
test02MarsRoverMovesToNorthLogsNewPosition
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	logger := Logger with: marsRover .
	
	marsRover process: 'f'.
	
	self assert: (logger printLog) equals: (OrderedCollection with: 1@2).
	self assert: (marsRover isAt: 1@2 heading: self north) 
	! !

!testRun: #LoggerTest #test02MarsRoverMovesToNorthLogsNewPosition stamp: 'camila 10/27/2023 18:51:03'!
PASSED!

!testRun: #LoggerTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/27/2023 18:51:03'!
PASSED!

!testRun: #LoggerTest #test02MarsRoverMovesToNorthLogsNewPosition stamp: 'camila 10/27/2023 18:51:03'!
PASSED!
!LoggerTest methodsFor: 'testing' stamp: 'camila 10/27/2023 18:51:47'!
test03MarsRoverMovesToNorthTwice
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	logger := Logger with: marsRover .
	
	marsRover process: 'ff'.
	
	self assert: (logger printLog) equals: (OrderedCollection with: 1@3).
	self assert: (marsRover isAt: 1@3 heading: self north) 
	! !

!testRun: #LoggerTest #test03MarsRoverMovesToNorthTwice stamp: 'camila 10/27/2023 18:51:48'!
FAILURE!
!LoggerTest methodsFor: 'testing' stamp: 'camila 10/27/2023 18:52:00' prior: 50651385!
test03MarsRoverMovesToNorthTwice
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	logger := Logger with: marsRover .
	
	marsRover process: 'ff'.
	
	self assert: (logger printLog) equals: (OrderedCollection with: 1@2 with: 1@3 ).
	self assert: (marsRover isAt: 1@3 heading: self north) 
	! !

!testRun: #LoggerTest #test03MarsRoverMovesToNorthTwice stamp: 'camila 10/27/2023 18:52:01'!
PASSED!

!testRun: #LoggerTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/27/2023 18:52:01'!
PASSED!

!testRun: #LoggerTest #test02MarsRoverMovesToNorthLogsNewPosition stamp: 'camila 10/27/2023 18:52:01'!
PASSED!

!testRun: #LoggerTest #test03MarsRoverMovesToNorthTwice stamp: 'camila 10/27/2023 18:52:01'!
PASSED!
!LoggerTest methodsFor: 'testing' stamp: 'camila 10/27/2023 18:53:15'!
test04MarsRoverMovesBackward
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	logger := Logger with: marsRover .
	
	marsRover process: 'b'.
	
	self assert: (logger printLog) equals: (OrderedCollection with: 1@0).
	self assert: (marsRover isAt: 1@0 heading: self north) 
	! !

!testRun: #LoggerTest #test04MarsRoverMovesBackward stamp: 'camila 10/27/2023 18:53:16'!
FAILURE!
!MarsRover methodsFor: 'moving' stamp: 'camila 10/27/2023 18:54:23' prior: 50650580!
moveSouth
	self moveAndLogSouth: [position := position + (0@-1)].
	"position := position + (0@-1)"! !

!testRun: #LoggerTest #test04MarsRoverMovesBackward stamp: 'camila 10/27/2023 18:54:28'!
ERROR!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 18:54:31'!
moveAndLogSouth: aRenameMe1 
	self shouldBeImplemented.! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 18:54:57' prior: 50651452!
moveAndLogSouth: aBlock
	aBlock value.
	logger logSouth: position. 
	! !

!testRun: #LoggerTest #test04MarsRoverMovesBackward stamp: 'camila 10/27/2023 18:55:02'!
ERROR!
!Logger methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 18:55:07'!
logSouth: aPosition 
	self shouldBeImplemented.! !
!Logger methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 18:55:14' prior: 50651465!
logSouth: aPosition 
	positionLog add: aPosition .! !

!testRun: #LoggerTest #test04MarsRoverMovesBackward stamp: 'camila 10/27/2023 18:55:15'!
PASSED!

!testRun: #LoggerTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/27/2023 18:55:15'!
PASSED!

!testRun: #LoggerTest #test02MarsRoverMovesToNorthLogsNewPosition stamp: 'camila 10/27/2023 18:55:15'!
PASSED!

!testRun: #LoggerTest #test03MarsRoverMovesToNorthTwice stamp: 'camila 10/27/2023 18:55:15'!
PASSED!

!testRun: #LoggerTest #test04MarsRoverMovesBackward stamp: 'camila 10/27/2023 18:55:15'!
PASSED!

!testRun: #LoggerTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/27/2023 18:55:21'!
PASSED!

!testRun: #LoggerTest #test02MarsRoverMovesToNorthLogsNewPosition stamp: 'camila 10/27/2023 18:55:21'!
PASSED!

!testRun: #LoggerTest #test03MarsRoverMovesToNorthTwice stamp: 'camila 10/27/2023 18:55:21'!
PASSED!

!testRun: #LoggerTest #test04MarsRoverMovesBackward stamp: 'camila 10/27/2023 18:55:21'!
PASSED!
!LoggerTest methodsFor: 'testing' stamp: 'camila 10/27/2023 18:56:58'!
test05MarsRoverRotatesIsntLogged
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	logger := Logger with: marsRover .
	
	marsRover process: 'l'.
	
	self assert: (logger printLog) equals: (OrderedCollection with: 1@0).
	self assert: (marsRover isAt: 1@0 heading: self north) 
	! !
!LoggerTest methodsFor: 'testing' stamp: 'camila 10/27/2023 18:59:11' prior: 50651503!
test05MarsRoverRotatesIsntLogged
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	logger := Logger with: marsRover .
	
	marsRover process: 'l'.
	
	self assert: (logger printLog) equals: (OrderedCollection new).
	self assert: (marsRover isAt: 1@1 heading: self west) 
	! !

!testRun: #LoggerTest #test05MarsRoverRotatesIsntLogged stamp: 'camila 10/27/2023 18:59:20'!
PASSED!

!testRun: #LoggerTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/27/2023 18:59:20'!
PASSED!

!testRun: #LoggerTest #test02MarsRoverMovesToNorthLogsNewPosition stamp: 'camila 10/27/2023 18:59:20'!
PASSED!

!testRun: #LoggerTest #test03MarsRoverMovesToNorthTwice stamp: 'camila 10/27/2023 18:59:20'!
PASSED!

!testRun: #LoggerTest #test04MarsRoverMovesBackward stamp: 'camila 10/27/2023 18:59:20'!
PASSED!

!testRun: #LoggerTest #test05MarsRoverRotatesIsntLogged stamp: 'camila 10/27/2023 18:59:20'!
PASSED!
!LoggerTest methodsFor: 'testing' stamp: 'camila 10/27/2023 18:59:26'!
test05MarsRoverRotatesLeftIsntLogged
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	logger := Logger with: marsRover .
	
	marsRover process: 'l'.
	
	self assert: (logger printLog) equals: (OrderedCollection new).
	self assert: (marsRover isAt: 1@1 heading: self west) 
	! !

!methodRemoval: LoggerTest #test05MarsRoverRotatesIsntLogged stamp: 'camila 10/27/2023 18:59:27'!
test05MarsRoverRotatesIsntLogged
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	logger := Logger with: marsRover .
	
	marsRover process: 'l'.
	
	self assert: (logger printLog) equals: (OrderedCollection new).
	self assert: (marsRover isAt: 1@1 heading: self west) 
	!
!LoggerTest methodsFor: 'testing' stamp: 'camila 10/27/2023 18:59:37'!
test05MarsRoverRotatesRightIsntLogged
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	logger := Logger with: marsRover .
	
	marsRover process: 'r'.
	
	self assert: (logger printLog) equals: (OrderedCollection new).
	self assert: (marsRover isAt: 1@1 heading: self east) 
	! !

!testRun: #LoggerTest #test05MarsRoverRotatesRightIsntLogged stamp: 'camila 10/27/2023 18:59:38'!
PASSED!

!testRun: #LoggerTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/27/2023 18:59:38'!
PASSED!

!testRun: #LoggerTest #test02MarsRoverMovesToNorthLogsNewPosition stamp: 'camila 10/27/2023 18:59:38'!
PASSED!

!testRun: #LoggerTest #test03MarsRoverMovesToNorthTwice stamp: 'camila 10/27/2023 18:59:38'!
PASSED!

!testRun: #LoggerTest #test04MarsRoverMovesBackward stamp: 'camila 10/27/2023 18:59:38'!
PASSED!

!testRun: #LoggerTest #test05MarsRoverRotatesLeftIsntLogged stamp: 'camila 10/27/2023 18:59:38'!
PASSED!

!testRun: #LoggerTest #test05MarsRoverRotatesRightIsntLogged stamp: 'camila 10/27/2023 18:59:38'!
PASSED!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 19:00:09'!
moveAndLogPositionMovement: aBlock
	aBlock value.
	logger log: position. 
	! !
!MarsRover methodsFor: 'moving' stamp: 'camila 10/27/2023 19:00:37' prior: 50651159!
moveNorth
	self moveAndLogPositionMovement: [ position := position + (0@1)].
	"position := position + (0@1)"! !
!MarsRover methodsFor: 'moving' stamp: 'camila 10/27/2023 19:00:55' prior: 50651443!
moveSouth
	self moveAndLogPositionMovement: [position := position + (0@-1)].
	"position := position + (0@-1)"! !

!methodRemoval: MarsRover #moveAndLogSouth: stamp: 'camila 10/27/2023 19:00:59'!
moveAndLogSouth: aBlock
	aBlock value.
	logger logSouth: position. 
	!

!methodRemoval: MarsRover #moveAndLogNorth: stamp: 'camila 10/27/2023 19:01:00'!
moveAndLogNorth: aBlock
	
	aBlock value.
	logger logNorth: position.!
!Logger methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 19:01:17'!
log: aPosition 
	positionLog add: aPosition .! !

!methodRemoval: Logger #logNorth stamp: 'camila 10/27/2023 19:01:18'!
logNorth
	self shouldBeImplemented.!

!methodRemoval: Logger #logNorth: stamp: 'camila 10/27/2023 19:01:19'!
logNorth: aPosition 
	positionLog add: aPosition .!

!methodRemoval: Logger #log: stamp: 'camila 10/27/2023 19:01:21'!
log: aPosition 
	positionLog add: aPosition .!

!methodRemoval: Logger #logSouth: stamp: 'camila 10/27/2023 19:01:21'!
logSouth: aPosition 
	positionLog add: aPosition .!

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'camila 10/27/2023 19:01:23'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'camila 10/27/2023 19:01:23'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'camila 10/27/2023 19:01:23'!
PASSED!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'camila 10/27/2023 19:01:23'!
ERROR!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'camila 10/27/2023 19:01:23'!
ERROR!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'camila 10/27/2023 19:01:23'!
PASSED!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'camila 10/27/2023 19:01:23'!
PASSED!

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'camila 10/27/2023 19:01:23'!
PASSED!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'camila 10/27/2023 19:01:23'!
ERROR!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'camila 10/27/2023 19:01:23'!
PASSED!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'camila 10/27/2023 19:01:23'!
PASSED!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'camila 10/27/2023 19:01:23'!
PASSED!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'camila 10/27/2023 19:01:23'!
PASSED!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'camila 10/27/2023 19:01:23'!
ERROR!

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'camila 10/27/2023 19:01:23'!
PASSED!

!testRun: #LoggerTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/27/2023 19:01:32'!
PASSED!

!testRun: #LoggerTest #test02MarsRoverMovesToNorthLogsNewPosition stamp: 'camila 10/27/2023 19:01:32'!
ERROR!

!testRun: #LoggerTest #test03MarsRoverMovesToNorthTwice stamp: 'camila 10/27/2023 19:01:32'!
ERROR!

!testRun: #LoggerTest #test04MarsRoverMovesBackward stamp: 'camila 10/27/2023 19:01:32'!
ERROR!

!testRun: #LoggerTest #test05MarsRoverRotatesLeftIsntLogged stamp: 'camila 10/27/2023 19:01:32'!
PASSED!

!testRun: #LoggerTest #test05MarsRoverRotatesRightIsntLogged stamp: 'camila 10/27/2023 19:01:32'!
PASSED!

!testRun: #LoggerTest #test02MarsRoverMovesToNorthLogsNewPosition stamp: 'camila 10/27/2023 19:01:38'!
ERROR!
!Logger methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 19:02:36'!
log: aPosition 
	self shouldBeImplemented.! !
!Logger methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 19:02:42' prior: 50651735!
log: aPosition 
	positionLog add: aPosition .! !

!testRun: #LoggerTest #test02MarsRoverMovesToNorthLogsNewPosition stamp: 'camila 10/27/2023 19:02:43'!
FAILURE!

!testRun: #LoggerTest #test02MarsRoverMovesToNorthLogsNewPosition stamp: 'camila 10/27/2023 19:03:31'!
PASSED!

!testRun: #LoggerTest #test03MarsRoverMovesToNorthTwice stamp: 'camila 10/27/2023 19:03:33'!
PASSED!

!testRun: #LoggerTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/27/2023 19:03:34'!
PASSED!

!testRun: #LoggerTest #test02MarsRoverMovesToNorthLogsNewPosition stamp: 'camila 10/27/2023 19:03:34'!
PASSED!

!testRun: #LoggerTest #test03MarsRoverMovesToNorthTwice stamp: 'camila 10/27/2023 19:03:34'!
PASSED!

!testRun: #LoggerTest #test04MarsRoverMovesBackward stamp: 'camila 10/27/2023 19:03:34'!
PASSED!

!testRun: #LoggerTest #test05MarsRoverRotatesLeftIsntLogged stamp: 'camila 10/27/2023 19:03:34'!
PASSED!

!testRun: #LoggerTest #test05MarsRoverRotatesRightIsntLogged stamp: 'camila 10/27/2023 19:03:34'!
PASSED!

!testRun: #LoggerTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/27/2023 19:03:38'!
PASSED!

!testRun: #LoggerTest #test02MarsRoverMovesToNorthLogsNewPosition stamp: 'camila 10/27/2023 19:03:38'!
PASSED!

!testRun: #LoggerTest #test03MarsRoverMovesToNorthTwice stamp: 'camila 10/27/2023 19:03:38'!
PASSED!

!testRun: #LoggerTest #test04MarsRoverMovesBackward stamp: 'camila 10/27/2023 19:03:38'!
PASSED!

!testRun: #LoggerTest #test05MarsRoverRotatesLeftIsntLogged stamp: 'camila 10/27/2023 19:03:38'!
PASSED!

!testRun: #LoggerTest #test05MarsRoverRotatesRightIsntLogged stamp: 'camila 10/27/2023 19:03:38'!
PASSED!
!LoggerTest methodsFor: 'testing' stamp: 'camila 10/27/2023 19:06:06'!
testX
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	logger := Logger with: marsRover .
	
	marsRover process: 'rf'.
	
	self assert: (logger printLog) equals: (OrderedCollection with: 2@1 ).
	self assert: (marsRover isAt: 2@1 heading: self east) 
	! !

!testRun: #LoggerTest #testX stamp: 'camila 10/27/2023 19:06:08'!
FAILURE!
!MarsRover methodsFor: 'moving' stamp: 'camila 10/27/2023 19:07:38' prior: 50650568!
moveEast
	self moveAndLogPositionMovement: [position := position + (1@0)].
	"position := position + (1@0)"! !

!testRun: #LoggerTest #testX stamp: 'camila 10/27/2023 19:07:40'!
FAILURE!

!testRun: #LoggerTest #testX stamp: 'camila 10/27/2023 19:07:57'!
PASSED!
!LoggerTest methodsFor: 'testing' stamp: 'camila 10/27/2023 19:08:06'!
test06MarsRoverRotatesRightIsntLogged
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	logger := Logger with: marsRover .
	
	marsRover process: 'r'.
	
	self assert: (logger printLog) equals: (OrderedCollection new).
	self assert: (marsRover isAt: 1@1 heading: self east) 
	! !

!methodRemoval: LoggerTest #test05MarsRoverRotatesRightIsntLogged stamp: 'camila 10/27/2023 19:08:10'!
test05MarsRoverRotatesRightIsntLogged
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	logger := Logger with: marsRover .
	
	marsRover process: 'r'.
	
	self assert: (logger printLog) equals: (OrderedCollection new).
	self assert: (marsRover isAt: 1@1 heading: self east) 
	!
!LoggerTest methodsFor: 'testing' stamp: 'camila 10/27/2023 19:08:46'!
test07MarsRoverMovesForwardHeadingEastIsLogged
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	logger := Logger with: marsRover .
	
	marsRover process: 'rf'.
	
	self assert: (logger printLog) equals: (OrderedCollection with: 2@1 ).
	self assert: (marsRover isAt: 2@1 heading: self east) 
	! !

!methodRemoval: LoggerTest #testX stamp: 'camila 10/27/2023 19:08:48'!
testX
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	logger := Logger with: marsRover .
	
	marsRover process: 'rf'.
	
	self assert: (logger printLog) equals: (OrderedCollection with: 2@1 ).
	self assert: (marsRover isAt: 2@1 heading: self east) 
	!

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'camila 10/27/2023 19:08:51'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'camila 10/27/2023 19:08:51'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'camila 10/27/2023 19:08:51'!
PASSED!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'camila 10/27/2023 19:08:51'!
ERROR!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'camila 10/27/2023 19:08:51'!
ERROR!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'camila 10/27/2023 19:08:51'!
PASSED!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'camila 10/27/2023 19:08:51'!
PASSED!

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'camila 10/27/2023 19:08:51'!
PASSED!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'camila 10/27/2023 19:08:51'!
ERROR!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'camila 10/27/2023 19:08:51'!
ERROR!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'camila 10/27/2023 19:08:51'!
PASSED!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'camila 10/27/2023 19:08:51'!
PASSED!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'camila 10/27/2023 19:08:51'!
PASSED!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'camila 10/27/2023 19:08:51'!
ERROR!

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'camila 10/27/2023 19:08:51'!
ERROR!

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'camila 10/27/2023 19:09:10'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'camila 10/27/2023 19:09:10'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'camila 10/27/2023 19:09:10'!
PASSED!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'camila 10/27/2023 19:09:10'!
ERROR!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'camila 10/27/2023 19:09:10'!
ERROR!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'camila 10/27/2023 19:09:10'!
PASSED!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'camila 10/27/2023 19:09:10'!
PASSED!

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'camila 10/27/2023 19:09:10'!
PASSED!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'camila 10/27/2023 19:09:10'!
ERROR!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'camila 10/27/2023 19:09:10'!
ERROR!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'camila 10/27/2023 19:09:10'!
PASSED!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'camila 10/27/2023 19:09:10'!
PASSED!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'camila 10/27/2023 19:09:10'!
PASSED!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'camila 10/27/2023 19:09:10'!
ERROR!

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'camila 10/27/2023 19:09:10'!
ERROR!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'camila 10/27/2023 19:09:12'!
ERROR!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'camila 10/27/2023 19:09:42'!
ERROR!

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'camila 10/27/2023 19:10:16'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'camila 10/27/2023 19:10:16'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'camila 10/27/2023 19:10:16'!
PASSED!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'camila 10/27/2023 19:10:16'!
ERROR!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'camila 10/27/2023 19:10:16'!
ERROR!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'camila 10/27/2023 19:10:16'!
PASSED!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'camila 10/27/2023 19:10:16'!
PASSED!

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'camila 10/27/2023 19:10:16'!
PASSED!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'camila 10/27/2023 19:10:16'!
ERROR!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'camila 10/27/2023 19:10:16'!
ERROR!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'camila 10/27/2023 19:10:16'!
PASSED!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'camila 10/27/2023 19:10:16'!
PASSED!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'camila 10/27/2023 19:10:16'!
PASSED!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'camila 10/27/2023 19:10:16'!
ERROR!

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'camila 10/27/2023 19:10:16'!
ERROR!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'camila 10/27/2023 19:10:20'!
ERROR!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 19:12:20' prior: 50651608!
moveAndLogPositionMovement: aBlock
	aBlock value.
	logger isNotEmpty: [logger log: position]. 
	! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 19:13:21' prior: 50652049!
moveAndLogPositionMovement: aBlock
	aBlock value.
	logger ifNotNil: [logger log: position]. 
	! !

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'camila 10/27/2023 19:13:28'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'camila 10/27/2023 19:13:28'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'camila 10/27/2023 19:13:28'!
PASSED!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'camila 10/27/2023 19:13:28'!
ERROR!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'camila 10/27/2023 19:13:28'!
ERROR!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'camila 10/27/2023 19:13:28'!
PASSED!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'camila 10/27/2023 19:13:28'!
PASSED!

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'camila 10/27/2023 19:13:28'!
PASSED!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'camila 10/27/2023 19:13:28'!
ERROR!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'camila 10/27/2023 19:13:28'!
ERROR!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'camila 10/27/2023 19:13:28'!
PASSED!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'camila 10/27/2023 19:13:28'!
PASSED!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'camila 10/27/2023 19:13:28'!
PASSED!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'camila 10/27/2023 19:13:28'!
ERROR!

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'camila 10/27/2023 19:13:28'!
ERROR!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'camila 10/27/2023 19:13:31'!
ERROR!
!MarsRover methodsFor: 'initialization' stamp: 'camila 10/27/2023 19:13:55' prior: 50651183!
initializeAt: aPosition heading: aHeadingType

	position := aPosition.
	head := aHeadingType for: self .! !

!testRun: #MarsRoverTest #test01DoesNotMoveWhenNoCommand stamp: 'camila 10/27/2023 19:13:58'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtFailsForDifferentPosition stamp: 'camila 10/27/2023 19:13:58'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtFailsForDifferentHeading stamp: 'camila 10/27/2023 19:13:58'!
PASSED!

!testRun: #MarsRoverTest #test04IncrementsYAfterMovingForwardWhenHeadingNorth stamp: 'camila 10/27/2023 19:13:58'!
PASSED!

!testRun: #MarsRoverTest #test06DecrementsYAfterMovingBackwardsWhenHeadingNorth stamp: 'camila 10/27/2023 19:13:58'!
PASSED!

!testRun: #MarsRoverTest #test07PointToEashAfterRotatingRightWhenHeadingNorth stamp: 'camila 10/27/2023 19:13:58'!
PASSED!

!testRun: #MarsRoverTest #test08PointsToWestAfterRotatingLeftWhenPointingNorth stamp: 'camila 10/27/2023 19:13:58'!
PASSED!

!testRun: #MarsRoverTest #test09DoesNotProcessInvalidCommand stamp: 'camila 10/27/2023 19:13:58'!
PASSED!

!testRun: #MarsRoverTest #test10CanProcessMoreThanOneCommand stamp: 'camila 10/27/2023 19:13:58'!
PASSED!

!testRun: #MarsRoverTest #test11IncrementsXAfterMovingForwareWhenHeadingEast stamp: 'camila 10/27/2023 19:13:58'!
PASSED!

!testRun: #MarsRoverTest #test12DecrementsXAfterMovingBackwardWhenHeadingEast stamp: 'camila 10/27/2023 19:13:58'!
PASSED!

!testRun: #MarsRoverTest #test13PointsToSouthAfterRotatingRightWhenHeadingEast stamp: 'camila 10/27/2023 19:13:58'!
PASSED!

!testRun: #MarsRoverTest #test14PointsToNorthAfterRotatingLeftWhenPointingEast stamp: 'camila 10/27/2023 19:13:58'!
PASSED!

!testRun: #MarsRoverTest #test15ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingSouth stamp: 'camila 10/27/2023 19:13:58'!
PASSED!

!testRun: #MarsRoverTest #test16ForwardBackwardsAndRotateRightWorkAsExpectedWhenPointingWest stamp: 'camila 10/27/2023 19:13:58'!
PASSED!

!testRun: #LoggerTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/27/2023 19:14:02'!
PASSED!

!testRun: #LoggerTest #test02MarsRoverMovesToNorthLogsNewPosition stamp: 'camila 10/27/2023 19:14:02'!
PASSED!

!testRun: #LoggerTest #test03MarsRoverMovesToNorthTwice stamp: 'camila 10/27/2023 19:14:02'!
PASSED!

!testRun: #LoggerTest #test04MarsRoverMovesBackward stamp: 'camila 10/27/2023 19:14:02'!
PASSED!

!testRun: #LoggerTest #test05MarsRoverRotatesLeftIsntLogged stamp: 'camila 10/27/2023 19:14:02'!
PASSED!

!testRun: #LoggerTest #test06MarsRoverRotatesRightIsntLogged stamp: 'camila 10/27/2023 19:14:02'!
PASSED!

!testRun: #LoggerTest #test07MarsRoverMovesForwardHeadingEastIsLogged stamp: 'camila 10/27/2023 19:14:02'!
PASSED!
!LoggerTest methodsFor: 'testing' stamp: 'camila 10/27/2023 19:14:18'!
test08MarsRoverMovesForwardHeadingWestIsLogged
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	logger := Logger with: marsRover .
	
	marsRover process: 'lf'.
	
	self assert: (logger printLog) equals: (OrderedCollection with: 2@1 ).
	self assert: (marsRover isAt: 2@1 heading: self east) 
	! !
!LoggerTest methodsFor: 'testing' stamp: 'camila 10/27/2023 19:14:50' prior: 50652209!
test08MarsRoverMovesForwardHeadingWestIsLogged
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	logger := Logger with: marsRover .
	
	marsRover process: 'lf'.
	
	self assert: (logger printLog) equals: (OrderedCollection with: 0@1 ).
	self assert: (marsRover isAt: 0@1 heading: self west) 
	! !

!testRun: #LoggerTest #test08MarsRoverMovesForwardHeadingWestIsLogged stamp: 'camila 10/27/2023 19:14:51'!
FAILURE!
!MarsRover methodsFor: 'moving' stamp: 'camila 10/27/2023 19:15:44' prior: 50650584!
moveWest
	self moveAndLogPositionMovement: [position + (-1@0)].
	"position := position + (-1@0)"! !

!testRun: #LoggerTest #test08MarsRoverMovesForwardHeadingWestIsLogged stamp: 'camila 10/27/2023 19:15:45'!
PASSED!

!testRun: #LoggerTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/27/2023 19:15:45'!
PASSED!

!testRun: #LoggerTest #test02MarsRoverMovesToNorthLogsNewPosition stamp: 'camila 10/27/2023 19:15:45'!
PASSED!

!testRun: #LoggerTest #test03MarsRoverMovesToNorthTwice stamp: 'camila 10/27/2023 19:15:45'!
PASSED!

!testRun: #LoggerTest #test04MarsRoverMovesBackward stamp: 'camila 10/27/2023 19:15:45'!
PASSED!

!testRun: #LoggerTest #test05MarsRoverRotatesLeftIsntLogged stamp: 'camila 10/27/2023 19:15:45'!
PASSED!

!testRun: #LoggerTest #test06MarsRoverRotatesRightIsntLogged stamp: 'camila 10/27/2023 19:15:45'!
PASSED!

!testRun: #LoggerTest #test07MarsRoverMovesForwardHeadingEastIsLogged stamp: 'camila 10/27/2023 19:15:45'!
PASSED!

!testRun: #LoggerTest #test08MarsRoverMovesForwardHeadingWestIsLogged stamp: 'camila 10/27/2023 19:15:45'!
FAILURE!

!testRun: #LoggerTest #test08MarsRoverMovesForwardHeadingWestIsLogged stamp: 'camila 10/27/2023 19:15:45'!
FAILURE!

!testRun: #LoggerTest #test08MarsRoverMovesForwardHeadingWestIsLogged stamp: 'camila 10/27/2023 19:15:47'!
FAILURE!
!MarsRover methodsFor: 'moving' stamp: 'camila 10/27/2023 19:17:58' prior: 50652239!
moveWest
	self moveAndLogPositionMovement: [position := position + (-1@0)].
	"position := position + (-1@0)"! !

!testRun: #LoggerTest #test08MarsRoverMovesForwardHeadingWestIsLogged stamp: 'camila 10/27/2023 19:17:59'!
FAILURE!

!testRun: #LoggerTest #test08MarsRoverMovesForwardHeadingWestIsLogged stamp: 'camila 10/27/2023 19:18:00'!
PASSED!

!testRun: #LoggerTest #test08MarsRoverMovesForwardHeadingWestIsLogged stamp: 'camila 10/27/2023 19:18:03'!
PASSED!

!testRun: #LoggerTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/27/2023 19:18:07'!
PASSED!

!testRun: #LoggerTest #test02MarsRoverMovesToNorthLogsNewPosition stamp: 'camila 10/27/2023 19:18:07'!
PASSED!

!testRun: #LoggerTest #test03MarsRoverMovesToNorthTwice stamp: 'camila 10/27/2023 19:18:07'!
PASSED!

!testRun: #LoggerTest #test04MarsRoverMovesBackward stamp: 'camila 10/27/2023 19:18:07'!
PASSED!

!testRun: #LoggerTest #test05MarsRoverRotatesLeftIsntLogged stamp: 'camila 10/27/2023 19:18:07'!
PASSED!

!testRun: #LoggerTest #test06MarsRoverRotatesRightIsntLogged stamp: 'camila 10/27/2023 19:18:07'!
PASSED!

!testRun: #LoggerTest #test07MarsRoverMovesForwardHeadingEastIsLogged stamp: 'camila 10/27/2023 19:18:07'!
PASSED!

!testRun: #LoggerTest #test08MarsRoverMovesForwardHeadingWestIsLogged stamp: 'camila 10/27/2023 19:18:07'!
PASSED!

----SNAPSHOT----(27 October 2023 19:18:19) CuisUniversity-5981.image priorSource: 10213094!

TestCase subclass: #LoggerHeadingTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #LoggerHeadingTest category: 'MarsRover-WithHeading' stamp: 'camila 10/27/2023 19:20:11'!
TestCase subclass: #LoggerHeadingTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!LoggerHeadingTest methodsFor: 'no messages' stamp: 'camila 10/27/2023 19:20:29'!
east

	^ MarsRoverHeadingEast ! !
!LoggerHeadingTest methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 19:20:36'!
north

	^ MarsRoverHeadingNorth ! !
!LoggerHeadingTest methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 19:20:43'!
south

	^ MarsRoverHeadingSouth ! !
!LoggerHeadingTest methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 19:20:55'!
west

	^ MarsRoverHeadingWest ! !

!classDefinition: #LoggerHeading category: 'MarsRover-WithHeading' stamp: 'camila 10/27/2023 19:21:45'!
Object subclass: #LoggerHeading
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!LoggerHeadingTest methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 19:21:36'!
test01NewMarsRoverWithEmptyLog
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north. 
	logger :=LoggerHeading with: marsRover .
	
	self assert: (logger printLog ) equals: OrderedCollection new.! !

!testRun: #LoggerHeadingTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/27/2023 19:22:03'!
ERROR!

!testRun: #LoggerHeadingTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/27/2023 19:22:03'!
ERROR!

!testRun: #LoggerHeadingTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/27/2023 19:22:09'!
ERROR!

!testRun: #LoggerHeadingTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/27/2023 19:22:19'!
ERROR!

!testRun: #LoggerHeadingTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/27/2023 19:22:19'!
ERROR!
!LoggerHeading class methodsFor: 'instance creation' stamp: 'camila 10/27/2023 19:22:25'!
with: marsRover 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeWith: marsRover ! !
!LoggerHeading class methodsFor: 'instance creation' stamp: 'camila 10/27/2023 19:22:38' prior: 50652394!
with: aMarsRover 
	^self new initializeWith: aMarsRover ! !

!testRun: #LoggerHeadingTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/27/2023 19:22:39'!
ERROR!

!classDefinition: #LoggerHeading category: 'MarsRover-WithHeading' stamp: 'camila 10/27/2023 19:22:48'!
Object subclass: #LoggerHeading
	instanceVariableNames: 'marsRover'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!LoggerHeading methodsFor: 'initialization' stamp: 'camila 10/27/2023 19:22:48'!
initializeWith: aMarsRover 
	self shouldBeImplemented.
	marsRover := aMarsRover.! !
!LoggerHeading methodsFor: 'initialization' stamp: 'camila 10/27/2023 19:22:54' prior: 50652419!
initializeWith: aMarsRover
	marsRover := aMarsRover.! !
!LoggerHeading methodsFor: 'initialization' stamp: 'camila 10/27/2023 19:23:09' prior: 50652425!
initializeWith: aMarsRover
	marsRover := aMarsRover.
	aMarsRover addLogger: self.! !

!testRun: #LoggerHeadingTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/27/2023 19:23:10'!
ERROR!
!LoggerHeading methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 19:23:17'!
printLog
	self shouldBeImplemented.! !

!classDefinition: #LoggerHeading category: 'MarsRover-WithHeading' stamp: 'camila 10/27/2023 19:23:30'!
Object subclass: #LoggerHeading
	instanceVariableNames: 'marsRover headingLog'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!LoggerHeading methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 19:23:29' prior: 50652439!
printLog
	^headingLog.! !

!testRun: #LoggerHeadingTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/27/2023 19:23:32'!
FAILURE!
!LoggerHeading methodsFor: 'initialization' stamp: 'camila 10/27/2023 19:23:52' prior: 50652430!
initializeWith: aMarsRover
	marsRover := aMarsRover.
	aMarsRover addLogger: self.
	headingLog := OrderedCollection new.! !

!testRun: #LoggerHeadingTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/27/2023 19:23:53'!
PASSED!

!testRun: #LoggerHeadingTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/27/2023 19:23:58'!
PASSED!

!testRun: #LoggerHeadingTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/27/2023 19:23:58'!
PASSED!
!LoggerHeadingTest methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 19:25:13'!
test02MarsRoverRotatesLeftIsLogged
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north. 
	logger :=LoggerHeading with: marsRover .
	
	marsRover process: 'r'.
	
	self assert: (logger printLog ) equals: (OrderedCollection with: 'East').! !

!testRun: #LoggerHeadingTest #test02MarsRoverRotatesLeftIsLogged stamp: 'camila 10/27/2023 19:25:17'!
FAILURE!
!MarsRover methodsFor: 'heading' stamp: 'camila 10/27/2023 19:27:59' prior: 50650518!
headEast
	
	self rotateAndLog: [head := MarsRoverHeadingEast for: self].
	"head := MarsRoverHeadingEast for: self"
	! !

!testRun: #LoggerHeadingTest #test02MarsRoverRotatesLeftIsLogged stamp: 'camila 10/27/2023 19:28:02'!
ERROR!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 19:28:07'!
rotateAndLog: aRenameMe1 
	self shouldBeImplemented.! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 19:29:05' prior: 50652502!
rotateAndLog: aBlock 
	aBlock value.
	logger ifNotNil: [logger log: head]! !

!testRun: #LoggerHeadingTest #test02MarsRoverRotatesLeftIsLogged stamp: 'camila 10/27/2023 19:29:06'!
ERROR!
!LoggerHeading methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 19:29:11'!
log: aHead 
	self shouldBeImplemented.! !
!LoggerHeading methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 19:29:25' prior: 50652516!
log: aHead 
	headingLog add: aHead.! !

!testRun: #LoggerHeadingTest #test02MarsRoverRotatesLeftIsLogged stamp: 'camila 10/27/2023 19:29:26'!
FAILURE!
!LoggerHeading methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 19:32:05' prior: 50652521!
log: aHeading 
	 (aHeading isKindOf: MarsRoverHeadingEast) ifTrue: [headingLog add: 'East'] .! !

!testRun: #LoggerHeadingTest #test02MarsRoverRotatesLeftIsLogged stamp: 'camila 10/27/2023 19:32:06'!
PASSED!

!testRun: #LoggerHeadingTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/27/2023 19:32:06'!
PASSED!

!testRun: #LoggerHeadingTest #test02MarsRoverRotatesLeftIsLogged stamp: 'camila 10/27/2023 19:32:06'!
PASSED!

!testRun: #LoggerHeadingTest #test02MarsRoverRotatesLeftIsLogged stamp: 'camila 10/27/2023 19:32:14'!
PASSED!

!testRun: #LoggerHeadingTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/27/2023 19:32:16'!
PASSED!
!LoggerHeadingTest methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 19:32:39' prior: 50652477!
test02MarsRoverRotatesLeftIsLogged
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north. 
	logger :=LoggerHeading with: marsRover .
	
	marsRover process: 'l'.
	
	self assert: (logger printLog ) equals: (OrderedCollection with: 'West').! !
!LoggerHeadingTest methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 19:33:31' prior: 50652553!
test02MarsRoverRotatesLeftIsLogged
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north. 
	logger :=LoggerHeading with: marsRover .
	
	marsRover process: 'l'.
	
	self assert: (logger printLog ) equals: (OrderedCollection with: 'West').
	self assert: (marsRover isAt: 1@1 heading: self west)! !
!LoggerHeadingTest methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 19:33:33' prior: 50652565!
test02MarsRoverRotatesLeftIsLogged
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north. 
	logger :=LoggerHeading with: marsRover .
	
	marsRover process: 'l'.
	
	self assert: (logger printLog ) equals: (OrderedCollection with: 'West').
	self assert: (marsRover isAt: 1@1 heading: self west).! !

!testRun: #LoggerHeadingTest #test02MarsRoverRotatesLeftIsLogged stamp: 'camila 10/27/2023 19:33:33'!
FAILURE!

!testRun: #LoggerHeadingTest #test02MarsRoverRotatesLeftIsLogged stamp: 'camila 10/27/2023 19:33:38'!
FAILURE!

!testRun: #LoggerHeadingTest #test02MarsRoverRotatesLeftIsLogged stamp: 'camila 10/27/2023 19:33:38'!
FAILURE!

!testRun: #LoggerHeadingTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/27/2023 19:33:43'!
PASSED!

!testRun: #LoggerHeadingTest #test02MarsRoverRotatesLeftIsLogged stamp: 'camila 10/27/2023 19:33:45'!
FAILURE!

!testRun: #LoggerHeadingTest #test02MarsRoverRotatesLeftIsLogged stamp: 'camila 10/27/2023 19:33:45'!
FAILURE!
!LoggerHeadingTest methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 19:34:25'!
test02MarsRoverRotatesRightIsLogged
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north. 
	logger :=LoggerHeading with: marsRover .
	
	marsRover process: 'r'.
	
	self assert: (logger printLog ) equals: (OrderedCollection with: 'East').
	self assert: (marsRover isAt: 1@1 heading: self east).! !

!testRun: #LoggerHeadingTest #test02MarsRoverRotatesRightIsLogged stamp: 'camila 10/27/2023 19:34:27'!
PASSED!

!testRun: #LoggerHeadingTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/27/2023 19:34:27'!
PASSED!

!testRun: #LoggerHeadingTest #test02MarsRoverRotatesLeftIsLogged stamp: 'camila 10/27/2023 19:34:27'!
FAILURE!

!testRun: #LoggerHeadingTest #test02MarsRoverRotatesRightIsLogged stamp: 'camila 10/27/2023 19:34:27'!
PASSED!

!testRun: #LoggerHeadingTest #test02MarsRoverRotatesLeftIsLogged stamp: 'camila 10/27/2023 19:34:27'!
FAILURE!
!MarsRover methodsFor: 'heading' stamp: 'camila 10/27/2023 19:35:30' prior: 50650530!
headWest
	self rotateAndLog: [head := MarsRoverHeadingWest for: self].
	"head := MarsRoverHeadingWest for: self" ! !

!testRun: #LoggerHeadingTest #test02MarsRoverRotatesLeftIsLogged stamp: 'camila 10/27/2023 19:35:31'!
FAILURE!
!LoggerHeading methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 19:36:08' prior: 50652529!
log: aHeading 
	(aHeading isKindOf: MarsRoverHeadingWest) ifTrue: [headingLog add: 'West'] .
	 (aHeading isKindOf: MarsRoverHeadingEast) ifTrue: [headingLog add: 'East'] .! !

!testRun: #LoggerHeadingTest #test02MarsRoverRotatesLeftIsLogged stamp: 'camila 10/27/2023 19:36:10'!
PASSED!

!testRun: #LoggerHeadingTest #test02MarsRoverRotatesLeftIsLogged stamp: 'camila 10/27/2023 19:36:15'!
PASSED!
!LoggerHeadingTest methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 19:36:24'!
test03MarsRoverRotatesRightIsLogged
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north. 
	logger :=LoggerHeading with: marsRover .
	
	marsRover process: 'r'.
	
	self assert: (logger printLog ) equals: (OrderedCollection with: 'East').
	self assert: (marsRover isAt: 1@1 heading: self east).! !

!methodRemoval: LoggerHeadingTest #test02MarsRoverRotatesRightIsLogged stamp: 'camila 10/27/2023 19:36:26'!
test02MarsRoverRotatesRightIsLogged
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north. 
	logger :=LoggerHeading with: marsRover .
	
	marsRover process: 'r'.
	
	self assert: (logger printLog ) equals: (OrderedCollection with: 'East').
	self assert: (marsRover isAt: 1@1 heading: self east).!

!testRun: #LoggerHeadingTest #test03MarsRoverRotatesRightIsLogged stamp: 'camila 10/27/2023 19:36:27'!
PASSED!

!testRun: #LoggerHeadingTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/27/2023 19:36:30'!
PASSED!

!testRun: #LoggerHeadingTest #test02MarsRoverRotatesLeftIsLogged stamp: 'camila 10/27/2023 19:36:30'!
PASSED!

!testRun: #LoggerHeadingTest #test03MarsRoverRotatesRightIsLogged stamp: 'camila 10/27/2023 19:36:30'!
PASSED!
!LoggerHeadingTest methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 19:37:01'!
test02MarsRoverRotatesLeftLogsWest
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north. 
	logger :=LoggerHeading with: marsRover .
	
	marsRover process: 'l'.
	
	self assert: (logger printLog ) equals: (OrderedCollection with: 'West').
	self assert: (marsRover isAt: 1@1 heading: self west).! !

!methodRemoval: LoggerHeadingTest #test02MarsRoverRotatesLeftIsLogged stamp: 'camila 10/27/2023 19:37:01'!
test02MarsRoverRotatesLeftIsLogged
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north. 
	logger :=LoggerHeading with: marsRover .
	
	marsRover process: 'l'.
	
	self assert: (logger printLog ) equals: (OrderedCollection with: 'West').
	self assert: (marsRover isAt: 1@1 heading: self west).!
!LoggerHeadingTest methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 19:37:10'!
test03MarsRoverRotatesRightLogsEast
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north. 
	logger :=LoggerHeading with: marsRover .
	
	marsRover process: 'r'.
	
	self assert: (logger printLog ) equals: (OrderedCollection with: 'East').
	self assert: (marsRover isAt: 1@1 heading: self east).! !

!methodRemoval: LoggerHeadingTest #test03MarsRoverRotatesRightIsLogged stamp: 'camila 10/27/2023 19:37:10'!
test03MarsRoverRotatesRightIsLogged
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north. 
	logger :=LoggerHeading with: marsRover .
	
	marsRover process: 'r'.
	
	self assert: (logger printLog ) equals: (OrderedCollection with: 'East').
	self assert: (marsRover isAt: 1@1 heading: self east).!
!LoggerHeadingTest methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 19:37:55'!
test04MarsRoverRotatesNorthLogsNorth
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self east. 
	logger :=LoggerHeading with: marsRover .
	
	marsRover process: 'l'.
	
	self assert: (logger printLog ) equals: (OrderedCollection with: 'North').
	self assert: (marsRover isAt: 1@1 heading: self north).! !

!testRun: #LoggerHeadingTest #test04MarsRoverRotatesNorthLogsNorth stamp: 'camila 10/27/2023 19:37:58'!
FAILURE!
!MarsRover methodsFor: 'heading' stamp: 'camila 10/27/2023 19:38:48' prior: 50650522!
headNorth
	self rotateAndLog: [head := MarsRoverHeadingNorth for: self]
	"head := MarsRoverHeadingNorth for: self" ! !
!MarsRover methodsFor: 'heading' stamp: 'camila 10/27/2023 19:38:50' prior: 50652780!
headNorth
	self rotateAndLog: [head := MarsRoverHeadingNorth for: self].
	"head := MarsRoverHeadingNorth for: self" ! !

!testRun: #LoggerHeadingTest #test04MarsRoverRotatesNorthLogsNorth stamp: 'camila 10/27/2023 19:38:51'!
FAILURE!
!LoggerHeading methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 19:39:26' prior: 50652654!
log: aHeading 
	(aHeading isKindOf: MarsRoverHeadingNorth) ifTrue: [headingLog add: 'North'] .
	(aHeading isKindOf: MarsRoverHeadingWest) ifTrue: [headingLog add: 'West'] .
	 (aHeading isKindOf: MarsRoverHeadingEast) ifTrue: [headingLog add: 'East'] .! !

!testRun: #LoggerHeadingTest #test04MarsRoverRotatesNorthLogsNorth stamp: 'camila 10/27/2023 19:39:28'!
PASSED!

!testRun: #LoggerHeadingTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/27/2023 19:39:28'!
PASSED!

!testRun: #LoggerHeadingTest #test02MarsRoverRotatesLeftLogsWest stamp: 'camila 10/27/2023 19:39:28'!
PASSED!

!testRun: #LoggerHeadingTest #test03MarsRoverRotatesRightLogsEast stamp: 'camila 10/27/2023 19:39:28'!
PASSED!

!testRun: #LoggerHeadingTest #test04MarsRoverRotatesNorthLogsNorth stamp: 'camila 10/27/2023 19:39:28'!
PASSED!
!LoggerHeadingTest methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 19:39:42'!
test05MarsRoverRotatesSouthLogsSouth
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self east. 
	logger :=LoggerHeading with: marsRover .
	
	marsRover process: 'l'.
	
	self assert: (logger printLog ) equals: (OrderedCollection with: 'North').
	self assert: (marsRover isAt: 1@1 heading: self north).! !
!LoggerHeadingTest methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 19:40:04' prior: 50652827!
test05MarsRoverRotatesSouthLogsSouth
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self west. 
	logger :=LoggerHeading with: marsRover .
	
	marsRover process: 'r'.
	
	self assert: (logger printLog ) equals: (OrderedCollection with: 'South').
	self assert: (marsRover isAt: 1@1 heading: self south).! !

!testRun: #LoggerHeadingTest #test05MarsRoverRotatesSouthLogsSouth stamp: 'camila 10/27/2023 19:40:15'!
FAILURE!

!testRun: #LoggerHeadingTest #test05MarsRoverRotatesSouthLogsSouth stamp: 'camila 10/27/2023 19:40:15'!
FAILURE!
!LoggerHeadingTest methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 19:40:42' prior: 50652841!
test05MarsRoverRotatesSouthLogsSouth
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self west. 
	logger :=LoggerHeading with: marsRover .
	
	marsRover process: 'l'.
	
	self assert: (logger printLog ) equals: (OrderedCollection with: 'South').
	self assert: (marsRover isAt: 1@1 heading: self south).! !

!testRun: #LoggerHeadingTest #test05MarsRoverRotatesSouthLogsSouth stamp: 'camila 10/27/2023 19:40:44'!
FAILURE!
!MarsRover methodsFor: 'heading' stamp: 'camila 10/27/2023 19:41:32' prior: 50650526!
headSouth
	self rotateAndLog: [head := MarsRoverHeadingSouth for: self].
	"head := MarsRoverHeadingSouth for: self"! !
!LoggerHeading methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 19:41:54' prior: 50652798!
log: aHeading 
	(aHeading isKindOf: MarsRoverHeadingSouth) ifTrue: [headingLog add: 'South'] .
	(aHeading isKindOf: MarsRoverHeadingNorth) ifTrue: [headingLog add: 'North'] .
	(aHeading isKindOf: MarsRoverHeadingWest) ifTrue: [headingLog add: 'West'] .
	 (aHeading isKindOf: MarsRoverHeadingEast) ifTrue: [headingLog add: 'East'] .! !

!testRun: #LoggerHeadingTest #test05MarsRoverRotatesSouthLogsSouth stamp: 'camila 10/27/2023 19:41:56'!
PASSED!

!testRun: #LoggerHeadingTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/27/2023 19:41:56'!
PASSED!

!testRun: #LoggerHeadingTest #test02MarsRoverRotatesLeftLogsWest stamp: 'camila 10/27/2023 19:41:56'!
PASSED!

!testRun: #LoggerHeadingTest #test03MarsRoverRotatesRightLogsEast stamp: 'camila 10/27/2023 19:41:56'!
PASSED!

!testRun: #LoggerHeadingTest #test04MarsRoverRotatesNorthLogsNorth stamp: 'camila 10/27/2023 19:41:56'!
PASSED!

!testRun: #LoggerHeadingTest #test05MarsRoverRotatesSouthLogsSouth stamp: 'camila 10/27/2023 19:41:56'!
PASSED!

----SNAPSHOT----(27 October 2023 19:42:27) CuisUniversity-5981.image priorSource: 10261637!

!classRenamed: #Logger as: #LoggerPosition stamp: 'camila 10/27/2023 19:45:48'!
Smalltalk renameClassNamed: #Logger as: #LoggerPosition!
!LoggerTest methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 19:45:48' prior: 50651547!
test05MarsRoverRotatesLeftIsntLogged
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	logger := LoggerPosition with: marsRover .
	
	marsRover process: 'l'.
	
	self assert: (logger printLog) equals: (OrderedCollection new).
	self assert: (marsRover isAt: 1@1 heading: self west) 
	! !
!LoggerTest methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 19:45:48' prior: 50651427!
test04MarsRoverMovesBackward
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	logger := LoggerPosition with: marsRover .
	
	marsRover process: 'b'.
	
	self assert: (logger printLog) equals: (OrderedCollection with: 1@0).
	self assert: (marsRover isAt: 1@0 heading: self north) 
	! !
!LoggerTest methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 19:45:48' prior: 50651362!
test02MarsRoverMovesToNorthLogsNewPosition
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	logger := LoggerPosition with: marsRover .
	
	marsRover process: 'f'.
	
	self assert: (logger printLog) equals: (OrderedCollection with: 1@2).
	self assert: (marsRover isAt: 1@2 heading: self north) 
	! !
!LoggerTest methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 19:45:48' prior: 50651844!
test07MarsRoverMovesForwardHeadingEastIsLogged
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	logger := LoggerPosition with: marsRover .
	
	marsRover process: 'rf'.
	
	self assert: (logger printLog) equals: (OrderedCollection with: 2@1 ).
	self assert: (marsRover isAt: 2@1 heading: self east) 
	! !
!LoggerTest methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 19:45:48' prior: 50652222!
test08MarsRoverMovesForwardHeadingWestIsLogged
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	logger := LoggerPosition with: marsRover .
	
	marsRover process: 'lf'.
	
	self assert: (logger printLog) equals: (OrderedCollection with: 0@1 ).
	self assert: (marsRover isAt: 0@1 heading: self west) 
	! !
!LoggerTest methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 19:45:48' prior: 50651819!
test06MarsRoverRotatesRightIsntLogged
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	logger := LoggerPosition with: marsRover .
	
	marsRover process: 'r'.
	
	self assert: (logger printLog) equals: (OrderedCollection new).
	self assert: (marsRover isAt: 1@1 heading: self east) 
	! !
!LoggerTest methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 19:45:48' prior: 50651401!
test03MarsRoverMovesToNorthTwice
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north . 
	logger := LoggerPosition with: marsRover .
	
	marsRover process: 'ff'.
	
	self assert: (logger printLog) equals: (OrderedCollection with: 1@2 with: 1@3 ).
	self assert: (marsRover isAt: 1@3 heading: self north) 
	! !
!LoggerTest methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 19:45:48' prior: 50651232!
test01NewMarsRoverWithEmptyLog
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north. 
	logger :=LoggerPosition with: marsRover .
	
	self assert: (logger printLog ) equals: OrderedCollection new.! !

!testRun: #LoggerHeadingTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/27/2023 19:46:01'!
PASSED!

!testRun: #LoggerHeadingTest #test02MarsRoverRotatesLeftLogsWest stamp: 'camila 10/27/2023 19:46:01'!
PASSED!

!testRun: #LoggerHeadingTest #test03MarsRoverRotatesRightLogsEast stamp: 'camila 10/27/2023 19:46:01'!
PASSED!

!testRun: #LoggerHeadingTest #test04MarsRoverRotatesNorthLogsNorth stamp: 'camila 10/27/2023 19:46:01'!
PASSED!

!testRun: #LoggerHeadingTest #test05MarsRoverRotatesSouthLogsSouth stamp: 'camila 10/27/2023 19:46:01'!
PASSED!

!testRun: #LoggerTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/27/2023 19:46:03'!
PASSED!

!testRun: #LoggerTest #test02MarsRoverMovesToNorthLogsNewPosition stamp: 'camila 10/27/2023 19:46:03'!
PASSED!

!testRun: #LoggerTest #test03MarsRoverMovesToNorthTwice stamp: 'camila 10/27/2023 19:46:03'!
PASSED!

!testRun: #LoggerTest #test04MarsRoverMovesBackward stamp: 'camila 10/27/2023 19:46:03'!
PASSED!

!testRun: #LoggerTest #test05MarsRoverRotatesLeftIsntLogged stamp: 'camila 10/27/2023 19:46:03'!
FAILURE!

!testRun: #LoggerTest #test06MarsRoverRotatesRightIsntLogged stamp: 'camila 10/27/2023 19:46:03'!
FAILURE!

!testRun: #LoggerTest #test07MarsRoverMovesForwardHeadingEastIsLogged stamp: 'camila 10/27/2023 19:46:03'!
FAILURE!

!testRun: #LoggerTest #test08MarsRoverMovesForwardHeadingWestIsLogged stamp: 'camila 10/27/2023 19:46:03'!
FAILURE!

!testRun: #LoggerTest #test05MarsRoverRotatesLeftIsntLogged stamp: 'camila 10/27/2023 19:46:14'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 19:48:46' prior: 50652507!
rotateAndLog: aBlock 
	aBlock value.
	logger ifNotNil: [logger logHeading: head]! !

!testRun: #LoggerTest #test05MarsRoverRotatesLeftIsntLogged stamp: 'camila 10/27/2023 19:48:52'!
ERROR!

!testRun: #LoggerTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/27/2023 19:52:38'!
PASSED!

!testRun: #LoggerTest #test02MarsRoverMovesToNorthLogsNewPosition stamp: 'camila 10/27/2023 19:52:38'!
PASSED!

!testRun: #LoggerTest #test03MarsRoverMovesToNorthTwice stamp: 'camila 10/27/2023 19:52:38'!
PASSED!

!testRun: #LoggerTest #test04MarsRoverMovesBackward stamp: 'camila 10/27/2023 19:52:38'!
PASSED!

!testRun: #LoggerTest #test05MarsRoverRotatesLeftIsntLogged stamp: 'camila 10/27/2023 19:52:38'!
ERROR!

!testRun: #LoggerTest #test06MarsRoverRotatesRightIsntLogged stamp: 'camila 10/27/2023 19:52:38'!
ERROR!

!testRun: #LoggerTest #test07MarsRoverMovesForwardHeadingEastIsLogged stamp: 'camila 10/27/2023 19:52:38'!
ERROR!

!testRun: #LoggerTest #test08MarsRoverMovesForwardHeadingWestIsLogged stamp: 'camila 10/27/2023 19:52:38'!
ERROR!

!testRun: #LoggerTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/27/2023 19:52:43'!
PASSED!

!testRun: #LoggerTest #test02MarsRoverMovesToNorthLogsNewPosition stamp: 'camila 10/27/2023 19:52:43'!
PASSED!

!testRun: #LoggerTest #test03MarsRoverMovesToNorthTwice stamp: 'camila 10/27/2023 19:52:43'!
PASSED!

!testRun: #LoggerTest #test04MarsRoverMovesBackward stamp: 'camila 10/27/2023 19:52:43'!
PASSED!

!testRun: #LoggerTest #test05MarsRoverRotatesLeftIsntLogged stamp: 'camila 10/27/2023 19:52:43'!
ERROR!

!testRun: #LoggerTest #test06MarsRoverRotatesRightIsntLogged stamp: 'camila 10/27/2023 19:52:43'!
ERROR!

!testRun: #LoggerTest #test07MarsRoverMovesForwardHeadingEastIsLogged stamp: 'camila 10/27/2023 19:52:43'!
ERROR!

!testRun: #LoggerTest #test08MarsRoverMovesForwardHeadingWestIsLogged stamp: 'camila 10/27/2023 19:52:43'!
ERROR!

!testRun: #LoggerTest #test05MarsRoverRotatesLeftIsntLogged stamp: 'camila 10/27/2023 19:52:46'!
ERROR!

!testRun: #LoggerTest #test05MarsRoverRotatesLeftIsntLogged stamp: 'camila 10/27/2023 19:53:03'!
ERROR!

!testRun: #LoggerTest #test05MarsRoverRotatesLeftIsntLogged stamp: 'camila 10/27/2023 19:53:08'!
ERROR!
!LoggerPosition methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 19:53:50'!
logHeading: aHead 
	self shouldBeImplemented.! !
!LoggerPosition methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 19:53:52' prior: 50653153!
logHeading: aHead 
	! !

!testRun: #LoggerTest #test05MarsRoverRotatesLeftIsntLogged stamp: 'camila 10/27/2023 19:53:53'!
PASSED!

!testRun: #LoggerTest #test06MarsRoverRotatesRightIsntLogged stamp: 'camila 10/27/2023 19:53:54'!
PASSED!

!testRun: #LoggerTest #test07MarsRoverMovesForwardHeadingEastIsLogged stamp: 'camila 10/27/2023 19:53:55'!
PASSED!

!testRun: #LoggerTest #test08MarsRoverMovesForwardHeadingWestIsLogged stamp: 'camila 10/27/2023 19:53:56'!
PASSED!
!LoggerHeadingTest methodsFor: 'testing' stamp: 'camila 10/27/2023 19:55:05' prior: 50652862!
test05MarsRoverRotatesSouthLogsSouth
	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north. 
	logger :=LoggerHeading with: marsRover .
	
	marsRover process: 'rf'.
	
	self assert: (logger printLog ) equals: (OrderedCollection with: 'East').
	self assert: (marsRover isAt: 2@1 heading: self east).! !

!testRun: #LoggerHeadingTest #test05MarsRoverRotatesSouthLogsSouth stamp: 'camila 10/27/2023 19:55:08'!
ERROR!

!testRun: #LoggerHeadingTest #test05MarsRoverRotatesSouthLogsSouth stamp: 'camila 10/27/2023 19:55:30'!
ERROR!
!LoggerHeading methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 19:55:39'!
logHeading: aHead 
	self shouldBeImplemented.! !
!LoggerHeading methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 19:55:53' prior: 50653196!
logHeading: aHeading
	headingLog  add: aHeading.! !

!testRun: #LoggerHeadingTest #test05MarsRoverRotatesSouthLogsSouth stamp: 'camila 10/27/2023 19:55:56'!
FAILURE!

!methodRemoval: LoggerHeading #logHeading: stamp: 'camila 10/27/2023 19:56:11'!
logHeading: aHeading
	headingLog  add: aHeading.!
!LoggerHeading methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 19:56:24'!
logHeading: aHeading 
	(aHeading isKindOf: MarsRoverHeadingSouth) ifTrue: [headingLog add: 'South'] .
	(aHeading isKindOf: MarsRoverHeadingNorth) ifTrue: [headingLog add: 'North'] .
	(aHeading isKindOf: MarsRoverHeadingWest) ifTrue: [headingLog add: 'West'] .
	 (aHeading isKindOf: MarsRoverHeadingEast) ifTrue: [headingLog add: 'East'] .! !

!methodRemoval: LoggerHeading #log: stamp: 'camila 10/27/2023 19:56:24'!
log: aHeading 
	(aHeading isKindOf: MarsRoverHeadingSouth) ifTrue: [headingLog add: 'South'] .
	(aHeading isKindOf: MarsRoverHeadingNorth) ifTrue: [headingLog add: 'North'] .
	(aHeading isKindOf: MarsRoverHeadingWest) ifTrue: [headingLog add: 'West'] .
	 (aHeading isKindOf: MarsRoverHeadingEast) ifTrue: [headingLog add: 'East'] .!

!testRun: #LoggerHeadingTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/27/2023 19:56:27'!
PASSED!

!testRun: #LoggerHeadingTest #test02MarsRoverRotatesLeftLogsWest stamp: 'camila 10/27/2023 19:56:27'!
PASSED!

!testRun: #LoggerHeadingTest #test03MarsRoverRotatesRightLogsEast stamp: 'camila 10/27/2023 19:56:27'!
PASSED!

!testRun: #LoggerHeadingTest #test04MarsRoverRotatesNorthLogsNorth stamp: 'camila 10/27/2023 19:56:27'!
PASSED!

!testRun: #LoggerHeadingTest #test05MarsRoverRotatesSouthLogsSouth stamp: 'camila 10/27/2023 19:56:27'!
ERROR!

!testRun: #LoggerHeadingTest #test05MarsRoverRotatesSouthLogsSouth stamp: 'camila 10/27/2023 19:56:27'!
ERROR!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 19:56:46' prior: 50652056!
moveAndLogPositionMovement: aBlock
	aBlock value.
	logger ifNotNil: [logger logPosition: position]. 
	! !

!testRun: #LoggerHeadingTest #test05MarsRoverRotatesSouthLogsSouth stamp: 'camila 10/27/2023 19:56:48'!
ERROR!
!LoggerHeading methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 19:56:53'!
logPosition: aPosition 
	self shouldBeImplemented.! !
!LoggerHeading methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 19:56:55' prior: 50653271!
logPosition: aPosition 
	! !

!testRun: #LoggerHeadingTest #test05MarsRoverRotatesSouthLogsSouth stamp: 'camila 10/27/2023 19:56:56'!
FAILURE!

!testRun: #LoggerHeadingTest #test05MarsRoverRotatesSouthLogsSouth stamp: 'camila 10/27/2023 19:56:58'!
PASSED!

!testRun: #LoggerHeadingTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/27/2023 19:57:01'!
PASSED!

!testRun: #LoggerHeadingTest #test02MarsRoverRotatesLeftLogsWest stamp: 'camila 10/27/2023 19:57:01'!
PASSED!

!testRun: #LoggerHeadingTest #test03MarsRoverRotatesRightLogsEast stamp: 'camila 10/27/2023 19:57:01'!
PASSED!

!testRun: #LoggerHeadingTest #test04MarsRoverRotatesNorthLogsNorth stamp: 'camila 10/27/2023 19:57:01'!
PASSED!

!testRun: #LoggerHeadingTest #test05MarsRoverRotatesSouthLogsSouth stamp: 'camila 10/27/2023 19:57:01'!
PASSED!
!LoggerPosition methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 19:57:20'!
logPosition: aPosition 
	positionLog add: aPosition .! !

!methodRemoval: LoggerPosition #log: stamp: 'camila 10/27/2023 19:57:20'!
log: aPosition 
	positionLog add: aPosition .!

!testRun: #LoggerTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/27/2023 19:57:36'!
PASSED!

!testRun: #LoggerTest #test02MarsRoverMovesToNorthLogsNewPosition stamp: 'camila 10/27/2023 19:57:36'!
PASSED!

!testRun: #LoggerTest #test03MarsRoverMovesToNorthTwice stamp: 'camila 10/27/2023 19:57:36'!
PASSED!

!testRun: #LoggerTest #test04MarsRoverMovesBackward stamp: 'camila 10/27/2023 19:57:36'!
PASSED!

!testRun: #LoggerTest #test05MarsRoverRotatesLeftIsntLogged stamp: 'camila 10/27/2023 19:57:36'!
PASSED!

!testRun: #LoggerTest #test06MarsRoverRotatesRightIsntLogged stamp: 'camila 10/27/2023 19:57:36'!
PASSED!

!testRun: #LoggerTest #test07MarsRoverMovesForwardHeadingEastIsLogged stamp: 'camila 10/27/2023 19:57:36'!
PASSED!

!testRun: #LoggerTest #test08MarsRoverMovesForwardHeadingWestIsLogged stamp: 'camila 10/27/2023 19:57:36'!
PASSED!

!testRun: #LoggerHeadingTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/27/2023 19:57:37'!
PASSED!

!testRun: #LoggerHeadingTest #test02MarsRoverRotatesLeftLogsWest stamp: 'camila 10/27/2023 19:57:37'!
PASSED!

!testRun: #LoggerHeadingTest #test03MarsRoverRotatesRightLogsEast stamp: 'camila 10/27/2023 19:57:37'!
PASSED!

!testRun: #LoggerHeadingTest #test04MarsRoverRotatesNorthLogsNorth stamp: 'camila 10/27/2023 19:57:37'!
PASSED!

!testRun: #LoggerHeadingTest #test05MarsRoverRotatesSouthLogsSouth stamp: 'camila 10/27/2023 19:57:37'!
PASSED!

!classRenamed: #LoggerTest as: #LoggerPositionTest stamp: 'camila 10/27/2023 19:57:49'!
Smalltalk renameClassNamed: #LoggerTest as: #LoggerPositionTest!

TestCase subclass: #LoggerPositionHeadingTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #LoggerPositionHeadingTest category: 'MarsRover-WithHeading' stamp: 'camila 10/27/2023 20:00:02'!
TestCase subclass: #LoggerPositionHeadingTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!LoggerPositionHeadingTest methodsFor: 'no messages' stamp: 'camila 10/27/2023 20:00:11'!
east

	^ MarsRoverHeadingEast ! !
!LoggerPositionHeadingTest methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 20:00:20'!
north

	^ MarsRoverHeadingNorth ! !
!LoggerPositionHeadingTest methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 20:00:30'!
south

	^ MarsRoverHeadingSouth ! !
!LoggerPositionHeadingTest methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 20:00:37'!
west

	^ MarsRoverHeadingWest ! !
!LoggerPositionHeadingTest methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 20:01:15'!
test01MarsRoverNewWithEmptyLog

	! !

!classDefinition: #LoggerHeadingPosition category: 'MarsRover-WithHeading' stamp: 'camila 10/27/2023 20:02:01'!
Object subclass: #LoggerHeadingPosition
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!LoggerPositionHeadingTest methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 20:01:55' prior: 50653396!
test01MarsRoverNewWithEmptyLog

	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north. 
	logger :=LoggerHeadingPosition with: marsRover .
	
	self assert: (logger printLog ) equals: OrderedCollection new.! !

!testRun: #LoggerPositionHeadingTest #test01MarsRoverNewWithEmptyLog stamp: 'camila 10/27/2023 20:02:04'!
ERROR!
!LoggerHeadingPosition class methodsFor: 'instance creation' stamp: 'camila 10/27/2023 20:02:08'!
with: marsRover 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeWith: marsRover ! !
!LoggerHeadingPosition class methodsFor: 'instance creation' stamp: 'camila 10/27/2023 20:02:13' prior: 50653423!
with: marsRover 
	^self new initializeWith: marsRover ! !

!testRun: #LoggerPositionHeadingTest #test01MarsRoverNewWithEmptyLog stamp: 'camila 10/27/2023 20:02:15'!
ERROR!

!classDefinition: #LoggerHeadingPosition category: 'MarsRover-WithHeading' stamp: 'camila 10/27/2023 20:02:22'!
Object subclass: #LoggerHeadingPosition
	instanceVariableNames: 'marsRover_CHANGE_ME'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!LoggerHeadingPosition methodsFor: 'initialization' stamp: 'camila 10/27/2023 20:02:22'!
initializeWith: marsRover 
	self shouldBeImplemented.
	marsRover_CHANGE_ME := marsRover.! !

Object subclass: #LoggerHeadingPosition
	instanceVariableNames: 'marsRover'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!LoggerHeadingPosition class methodsFor: 'instance creation' stamp: 'camila 10/27/2023 20:03:39' prior: 50653432!
with: aMarsRover 
	^self new initializeWith: aMarsRover ! !

Object subclass: #LoggerHeadingPosition
	instanceVariableNames: 'marsRover'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #LoggerHeadingPosition category: 'MarsRover-WithHeading' stamp: 'camila 10/27/2023 20:04:28'!
Object subclass: #LoggerHeadingPosition
	instanceVariableNames: 'marsRover_CHANGE_ME marsRover1'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #LoggerHeadingPosition category: 'MarsRover-WithHeading' stamp: 'camila 10/27/2023 20:04:30'!
Object subclass: #LoggerHeadingPosition
	instanceVariableNames: 'marsRover_CHANGE_ME marsRover1 logHeadingPosition'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!LoggerHeadingPosition methodsFor: 'initialization' stamp: 'camila 10/27/2023 20:04:27' prior: 50653449!
initializeWith: aMarsRover 
	marsRover1 := aMarsRover.
	logHeadingPosition := OrderedCollection new.! !

Object subclass: #LoggerHeadingPosition
	instanceVariableNames: ' marsRover1 logHeadingPosition'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #LoggerHeadingPosition category: 'MarsRover-WithHeading' stamp: 'camila 10/27/2023 20:04:40'!
Object subclass: #LoggerHeadingPosition
	instanceVariableNames: 'marsRover1 logHeadingPosition'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #LoggerHeadingPosition category: 'MarsRover-WithHeading' stamp: 'camila 10/27/2023 20:04:49'!
Object subclass: #LoggerHeadingPosition
	instanceVariableNames: 'marsRover1 logHeadingPosition marsRover'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!LoggerHeadingPosition methodsFor: 'initialization' stamp: 'camila 10/27/2023 20:04:46' prior: 50653490!
initializeWith: aMarsRover 
	marsRover := aMarsRover.
	logHeadingPosition := OrderedCollection new.! !

Object subclass: #LoggerHeadingPosition
	instanceVariableNames: ' logHeadingPosition marsRover'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #LoggerHeadingPosition category: 'MarsRover-WithHeading' stamp: 'camila 10/27/2023 20:04:58'!
Object subclass: #LoggerHeadingPosition
	instanceVariableNames: 'logHeadingPosition marsRover'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classRenamed: #LoggerPositionHeadingTest as: #LoggerHeadingPositionTest stamp: 'camila 10/27/2023 20:05:13'!
Smalltalk renameClassNamed: #LoggerPositionHeadingTest as: #LoggerHeadingPositionTest!

!testRun: #LoggerHeadingPositionTest #test01MarsRoverNewWithEmptyLog stamp: 'camila 10/27/2023 20:05:19'!
ERROR!
!LoggerHeadingPosition methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 20:05:26'!
printLog
	self shouldBeImplemented.! !
!LoggerHeadingPosition methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 20:05:34' prior: 50653552!
printLog
	^logHeadingPosition .! !

!testRun: #LoggerHeadingPositionTest #test01MarsRoverNewWithEmptyLog stamp: 'camila 10/27/2023 20:05:35'!
PASSED!

!testRun: #LoggerHeadingPositionTest #test01MarsRoverNewWithEmptyLog stamp: 'camila 10/27/2023 20:05:35'!
PASSED!
!LoggerHeadingPositionTest methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 20:06:47'!
test02MarsRoverMovesForwardAndRotatesEast

	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north. 
	logger :=LoggerHeadingPosition with: marsRover .
	
	marsRover process: 'fr'.
	
	self assert: (logger printLog ) equals: (OrderedCollection with: '1@2' with: 'East').! !

!testRun: #LoggerHeadingPositionTest #test02MarsRoverMovesForwardAndRotatesEast stamp: 'camila 10/27/2023 20:06:49'!
FAILURE!
!LoggerHeadingPosition methodsFor: 'initialization' stamp: 'camila 10/27/2023 20:08:42' prior: 50653521!
initializeWith: aMarsRover 
	marsRover := aMarsRover.
	aMarsRover addLogger: self.
	logHeadingPosition := OrderedCollection new.! !

!testRun: #LoggerHeadingPositionTest #test01MarsRoverNewWithEmptyLog stamp: 'camila 10/27/2023 20:08:45'!
PASSED!

!testRun: #LoggerHeadingPositionTest #test02MarsRoverMovesForwardAndRotatesEast stamp: 'camila 10/27/2023 20:08:47'!
ERROR!

!testRun: #LoggerHeadingPositionTest #test02MarsRoverMovesForwardAndRotatesEast stamp: 'camila 10/27/2023 20:08:47'!
ERROR!
!LoggerHeadingPosition methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 20:08:55'!
logPosition: aPosition 
	self shouldBeImplemented.! !
!LoggerHeadingPosition methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 20:09:07' prior: 50653605!
logPosition: aPosition 
	logHeadingPosition add: aPosition .! !

!testRun: #LoggerHeadingPositionTest #test02MarsRoverMovesForwardAndRotatesEast stamp: 'camila 10/27/2023 20:09:08'!
ERROR!
!LoggerHeadingPosition methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 20:09:18'!
logHeading: aHead 
	self shouldBeImplemented.! !
!LoggerHeadingPosition methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 20:09:29' prior: 50653620!
logHeading: aHead 
	logHeadingPosition add: aHead.! !

!testRun: #LoggerHeadingPositionTest #test02MarsRoverMovesForwardAndRotatesEast stamp: 'camila 10/27/2023 20:09:30'!
FAILURE!
!LoggerHeading methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 20:10:38' prior: 50653213!
logHeading: aHeading 
	headingLog add: aHeading headingName.
	"(aHeading isKindOf: MarsRoverHeadingSouth) ifTrue: [headingLog add: 'South'] .
	(aHeading isKindOf: MarsRoverHeadingNorth) ifTrue: [headingLog add: 'North'] .
	(aHeading isKindOf: MarsRoverHeadingWest) ifTrue: [headingLog add: 'West'] .
	(aHeading isKindOf: MarsRoverHeadingEast) ifTrue: [headingLog add: 'East'] ."! !
!LoggerHeadingPosition methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 20:11:30' prior: 50653625!
logHeading: aHeading
	(aHeading isKindOf: MarsRoverHeadingSouth) ifTrue: [	 logHeadingPosition add: 'South'] .
	(aHeading isKindOf: MarsRoverHeadingNorth) ifTrue: [logHeadingPosition add: 'North'] .
	(aHeading isKindOf: MarsRoverHeadingWest) ifTrue: [logHeadingPosition add: 'West'] .
	(aHeading isKindOf: MarsRoverHeadingEast) ifTrue: [logHeadingPosition add: 'East'] .! !

!testRun: #LoggerHeadingPositionTest #test01MarsRoverNewWithEmptyLog stamp: 'camila 10/27/2023 20:11:33'!
PASSED!

!testRun: #LoggerHeadingPositionTest #test02MarsRoverMovesForwardAndRotatesEast stamp: 'camila 10/27/2023 20:11:33'!
FAILURE!

!testRun: #LoggerHeadingPositionTest #test02MarsRoverMovesForwardAndRotatesEast stamp: 'camila 10/27/2023 20:11:33'!
FAILURE!
!LoggerHeadingPositionTest methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 20:11:45' prior: 50653569!
test02MarsRoverMovesForwardAndRotatesEast

	| marsRover logger|
	
	marsRover := MarsRover at: 1@1 heading: self north. 
	logger :=LoggerHeadingPosition with: marsRover .
	
	marsRover process: 'fr'.
	
	self assert: (logger printLog ) equals: (OrderedCollection with: 1@2 with: 'East').! !

!testRun: #LoggerHeadingPositionTest #test02MarsRoverMovesForwardAndRotatesEast stamp: 'camila 10/27/2023 20:11:45'!
PASSED!

!testRun: #LoggerHeadingPositionTest #test01MarsRoverNewWithEmptyLog stamp: 'camila 10/27/2023 20:11:48'!
PASSED!

!testRun: #LoggerHeadingPositionTest #test02MarsRoverMovesForwardAndRotatesEast stamp: 'camila 10/27/2023 20:11:48'!
PASSED!

!testRun: #LoggerPositionTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/27/2023 20:11:50'!
PASSED!

!testRun: #LoggerPositionTest #test02MarsRoverMovesToNorthLogsNewPosition stamp: 'camila 10/27/2023 20:11:50'!
PASSED!

!testRun: #LoggerPositionTest #test03MarsRoverMovesToNorthTwice stamp: 'camila 10/27/2023 20:11:50'!
PASSED!

!testRun: #LoggerPositionTest #test04MarsRoverMovesBackward stamp: 'camila 10/27/2023 20:11:50'!
PASSED!

!testRun: #LoggerPositionTest #test05MarsRoverRotatesLeftIsntLogged stamp: 'camila 10/27/2023 20:11:50'!
PASSED!

!testRun: #LoggerPositionTest #test06MarsRoverRotatesRightIsntLogged stamp: 'camila 10/27/2023 20:11:50'!
PASSED!

!testRun: #LoggerPositionTest #test07MarsRoverMovesForwardHeadingEastIsLogged stamp: 'camila 10/27/2023 20:11:50'!
PASSED!

!testRun: #LoggerPositionTest #test08MarsRoverMovesForwardHeadingWestIsLogged stamp: 'camila 10/27/2023 20:11:50'!
PASSED!

!testRun: #LoggerHeadingTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/27/2023 20:11:53'!
PASSED!

!testRun: #LoggerHeadingTest #test02MarsRoverRotatesLeftLogsWest stamp: 'camila 10/27/2023 20:11:53'!
ERROR!

!testRun: #LoggerHeadingTest #test03MarsRoverRotatesRightLogsEast stamp: 'camila 10/27/2023 20:11:53'!
ERROR!

!testRun: #LoggerHeadingTest #test04MarsRoverRotatesNorthLogsNorth stamp: 'camila 10/27/2023 20:11:53'!
ERROR!

!testRun: #LoggerHeadingTest #test05MarsRoverRotatesSouthLogsSouth stamp: 'camila 10/27/2023 20:11:53'!
ERROR!

!testRun: #LoggerHeadingTest #test02MarsRoverRotatesLeftLogsWest stamp: 'camila 10/27/2023 20:12:03'!
ERROR!
!MarsRoverHeading methodsFor: 'testing' stamp: 'camila 10/27/2023 20:12:33'!
headingName
	self subclassResponsibility .! !
!MarsRoverHeadingEast methodsFor: 'heading' stamp: 'camila 10/27/2023 20:12:45' overrides: 50653750!
headingName
	self subclassResponsibility .! !
!MarsRoverHeadingNorth methodsFor: 'heading' stamp: 'camila 10/27/2023 20:12:45' overrides: 50653750!
headingName
	self subclassResponsibility .! !
!MarsRoverHeadingSouth methodsFor: 'heading' stamp: 'camila 10/27/2023 20:12:45' overrides: 50653750!
headingName
	self subclassResponsibility .! !
!MarsRoverHeadingWest methodsFor: 'heading' stamp: 'camila 10/27/2023 20:12:45' overrides: 50653750!
headingName
	self subclassResponsibility .! !
!MarsRoverHeading methodsFor: 'heading' stamp: 'camila 10/27/2023 20:12:45' prior: 50653750!
headingName

	self subclassResponsibility! !
!MarsRoverHeadingEast methodsFor: 'heading' stamp: 'camila 10/27/2023 20:12:52' prior: 50653755 overrides: 50653775!
headingName
	^'East'.! !
!MarsRoverHeadingNorth methodsFor: 'heading' stamp: 'camila 10/27/2023 20:13:01' prior: 50653760 overrides: 50653775!
headingName
	^ 'North'.! !
!MarsRoverHeadingSouth methodsFor: 'heading' stamp: 'camila 10/27/2023 20:13:10' prior: 50653765 overrides: 50653775!
headingName
	^ 'South'.! !
!MarsRoverHeadingWest methodsFor: 'heading' stamp: 'camila 10/27/2023 20:13:21' prior: 50653770 overrides: 50653775!
headingName
	^'West'.! !

!testRun: #LoggerPositionTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/27/2023 20:13:24'!
PASSED!

!testRun: #LoggerPositionTest #test02MarsRoverMovesToNorthLogsNewPosition stamp: 'camila 10/27/2023 20:13:24'!
PASSED!

!testRun: #LoggerPositionTest #test03MarsRoverMovesToNorthTwice stamp: 'camila 10/27/2023 20:13:24'!
PASSED!

!testRun: #LoggerPositionTest #test04MarsRoverMovesBackward stamp: 'camila 10/27/2023 20:13:24'!
PASSED!

!testRun: #LoggerPositionTest #test05MarsRoverRotatesLeftIsntLogged stamp: 'camila 10/27/2023 20:13:24'!
PASSED!

!testRun: #LoggerPositionTest #test06MarsRoverRotatesRightIsntLogged stamp: 'camila 10/27/2023 20:13:24'!
PASSED!

!testRun: #LoggerPositionTest #test07MarsRoverMovesForwardHeadingEastIsLogged stamp: 'camila 10/27/2023 20:13:24'!
PASSED!

!testRun: #LoggerPositionTest #test08MarsRoverMovesForwardHeadingWestIsLogged stamp: 'camila 10/27/2023 20:13:24'!
PASSED!

!testRun: #LoggerHeadingTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/27/2023 20:13:26'!
PASSED!

!testRun: #LoggerHeadingTest #test02MarsRoverRotatesLeftLogsWest stamp: 'camila 10/27/2023 20:13:26'!
PASSED!

!testRun: #LoggerHeadingTest #test03MarsRoverRotatesRightLogsEast stamp: 'camila 10/27/2023 20:13:26'!
PASSED!

!testRun: #LoggerHeadingTest #test04MarsRoverRotatesNorthLogsNorth stamp: 'camila 10/27/2023 20:13:26'!
PASSED!

!testRun: #LoggerHeadingTest #test05MarsRoverRotatesSouthLogsSouth stamp: 'camila 10/27/2023 20:13:26'!
PASSED!

!testRun: #LoggerHeadingPositionTest #test01MarsRoverNewWithEmptyLog stamp: 'camila 10/27/2023 20:13:28'!
PASSED!

!testRun: #LoggerHeadingPositionTest #test02MarsRoverMovesForwardAndRotatesEast stamp: 'camila 10/27/2023 20:13:28'!
PASSED!
!LoggerHeading methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 20:13:40' prior: 50653634!
logHeading: aHeading 
	headingLog add: aHeading headingName.
	! !
!LoggerHeadingPosition methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 20:13:52' prior: 50653650!
logHeading: aHeading
	logHeadingPosition add: aHeading headingName.! !

!testRun: #LoggerHeadingPositionTest #test01MarsRoverNewWithEmptyLog stamp: 'camila 10/27/2023 20:13:54'!
PASSED!

!testRun: #LoggerHeadingPositionTest #test02MarsRoverMovesForwardAndRotatesEast stamp: 'camila 10/27/2023 20:13:54'!
PASSED!

!testRun: #LoggerHeadingTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/27/2023 20:13:56'!
PASSED!

!testRun: #LoggerHeadingTest #test02MarsRoverRotatesLeftLogsWest stamp: 'camila 10/27/2023 20:13:56'!
PASSED!

!testRun: #LoggerHeadingTest #test03MarsRoverRotatesRightLogsEast stamp: 'camila 10/27/2023 20:13:56'!
PASSED!

!testRun: #LoggerHeadingTest #test04MarsRoverRotatesNorthLogsNorth stamp: 'camila 10/27/2023 20:13:56'!
PASSED!

!testRun: #LoggerHeadingTest #test05MarsRoverRotatesSouthLogsSouth stamp: 'camila 10/27/2023 20:13:56'!
PASSED!

!testRun: #LoggerPositionTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/27/2023 20:13:58'!
PASSED!

!testRun: #LoggerPositionTest #test02MarsRoverMovesToNorthLogsNewPosition stamp: 'camila 10/27/2023 20:13:58'!
PASSED!

!testRun: #LoggerPositionTest #test03MarsRoverMovesToNorthTwice stamp: 'camila 10/27/2023 20:13:58'!
PASSED!

!testRun: #LoggerPositionTest #test04MarsRoverMovesBackward stamp: 'camila 10/27/2023 20:13:58'!
PASSED!

!testRun: #LoggerPositionTest #test05MarsRoverRotatesLeftIsntLogged stamp: 'camila 10/27/2023 20:13:58'!
PASSED!

!testRun: #LoggerPositionTest #test06MarsRoverRotatesRightIsntLogged stamp: 'camila 10/27/2023 20:13:58'!
PASSED!

!testRun: #LoggerPositionTest #test07MarsRoverMovesForwardHeadingEastIsLogged stamp: 'camila 10/27/2023 20:13:58'!
PASSED!

!testRun: #LoggerPositionTest #test08MarsRoverMovesForwardHeadingWestIsLogged stamp: 'camila 10/27/2023 20:13:58'!
PASSED!

----SNAPSHOT----(27 October 2023 20:14:01) CuisUniversity-5981.image priorSource: 10280619!

!methodRemoval: LoggerPosition #printLog stamp: 'camila 10/27/2023 20:19:52'!
printLog
	^positionLog .!

!testRun: #LoggerPositionTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/27/2023 20:22:31'!
ERROR!

!testRun: #LoggerPositionTest #test02MarsRoverMovesToNorthLogsNewPosition stamp: 'camila 10/27/2023 20:22:31'!
ERROR!

!testRun: #LoggerPositionTest #test03MarsRoverMovesToNorthTwice stamp: 'camila 10/27/2023 20:22:31'!
ERROR!

!testRun: #LoggerPositionTest #test04MarsRoverMovesBackward stamp: 'camila 10/27/2023 20:22:31'!
ERROR!

!testRun: #LoggerPositionTest #test05MarsRoverRotatesLeftIsntLogged stamp: 'camila 10/27/2023 20:22:31'!
ERROR!

!testRun: #LoggerPositionTest #test06MarsRoverRotatesRightIsntLogged stamp: 'camila 10/27/2023 20:22:31'!
ERROR!

!testRun: #LoggerPositionTest #test07MarsRoverMovesForwardHeadingEastIsLogged stamp: 'camila 10/27/2023 20:22:31'!
ERROR!

!testRun: #LoggerPositionTest #test08MarsRoverMovesForwardHeadingWestIsLogged stamp: 'camila 10/27/2023 20:22:31'!
ERROR!
!LoggerPosition methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 20:22:46'!
printLog
	^positionLog .! !

!testRun: #LoggerPositionTest #test01NewMarsRoverWithEmptyLog stamp: 'camila 10/27/2023 20:22:49'!
PASSED!

!testRun: #LoggerPositionTest #test02MarsRoverMovesToNorthLogsNewPosition stamp: 'camila 10/27/2023 20:22:49'!
PASSED!

!testRun: #LoggerPositionTest #test03MarsRoverMovesToNorthTwice stamp: 'camila 10/27/2023 20:22:49'!
PASSED!

!testRun: #LoggerPositionTest #test04MarsRoverMovesBackward stamp: 'camila 10/27/2023 20:22:49'!
PASSED!

!testRun: #LoggerPositionTest #test05MarsRoverRotatesLeftIsntLogged stamp: 'camila 10/27/2023 20:22:49'!
PASSED!

!testRun: #LoggerPositionTest #test06MarsRoverRotatesRightIsntLogged stamp: 'camila 10/27/2023 20:22:49'!
PASSED!

!testRun: #LoggerPositionTest #test07MarsRoverMovesForwardHeadingEastIsLogged stamp: 'camila 10/27/2023 20:22:49'!
PASSED!

!testRun: #LoggerPositionTest #test08MarsRoverMovesForwardHeadingWestIsLogged stamp: 'camila 10/27/2023 20:22:49'!
PASSED!

Object subclass: #Logger
	instanceVariableNames: ' '
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #Logger category: 'MarsRover-WithHeading' stamp: 'camila 10/27/2023 20:23:06'!
Object subclass: #Logger
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

Logger subclass: #LoggerHeading
	instanceVariableNames: 'marsRover headingLog'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #LoggerHeading category: 'MarsRover-WithHeading' stamp: 'camila 10/27/2023 20:23:10'!
Logger subclass: #LoggerHeading
	instanceVariableNames: 'marsRover headingLog'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

Logger subclass: #LoggerHeadingPosition
	instanceVariableNames: 'logHeadingPosition marsRover'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #LoggerHeadingPosition category: 'MarsRover-WithHeading' stamp: 'camila 10/27/2023 20:23:14'!
Logger subclass: #LoggerHeadingPosition
	instanceVariableNames: 'logHeadingPosition marsRover'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

Logger subclass: #LoggerPosition
	instanceVariableNames: 'marsRover positionLog'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #LoggerPosition category: 'MarsRover-WithHeading' stamp: 'camila 10/27/2023 20:23:18'!
Logger subclass: #LoggerPosition
	instanceVariableNames: 'marsRover positionLog'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

----SNAPSHOT----(27 October 2023 20:23:36) CuisUniversity-5981.image priorSource: 10312572!
!Logger methodsFor: 'initialization' stamp: 'camila 10/27/2023 20:24:08'!
initializeWith: aMarsRover

	self subclassResponsibility! !
!Logger methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 20:24:14'!
logHeading: aHeading

	self subclassResponsibility! !
!Logger methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 20:24:17'!
logPosition: aPosition

	self subclassResponsibility! !
!Logger methodsFor: 'as yet unclassified' stamp: 'camila 10/27/2023 20:24:20'!
printLog

	self subclassResponsibility! !

----SNAPSHOT----(27 October 2023 20:24:23) CuisUniversity-5981.image priorSource: 10316437!

----SNAPSHOT----(27 October 2023 20:24:37) CuisUniversity-5981.image priorSource: 10317129!